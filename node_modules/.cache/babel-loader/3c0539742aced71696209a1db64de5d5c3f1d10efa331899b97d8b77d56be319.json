{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nvar api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, function (error) {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\napi.interceptors.response.use(responseInterceptor.success, responseInterceptor.error);\n\n// 获取API基础URL\nvar getBaseUrl = function getBaseUrl() {\n  var host = window.location.hostname;\n  var port = '5000';\n  var protocol = window.location.protocol;\n  if (host === 'localhost' || host === '127.0.0.1') {\n    return \"http://localhost:\".concat(port, \"/api\");\n  } else {\n    return \"\".concat(protocol, \"//\").concat(host, \":\").concat(port, \"/api\");\n  }\n};\nexport default {\n  data: function data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl(),\n      totalUserCount: 200,\n      // 估计的用户总数，可以从后端获取\n      isNewUser: false,\n      registrationDate: null,\n      currentUserRank: null,\n      currentUserCarbonReduction: null\n    };\n  },\n  computed: {\n    totalPages: function totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard: function displayedLeaderboard() {\n      var start = (this.currentPage - 1) * this.pageSize;\n      var end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, userResponse, thirtyDaysAgo, urlParams, rankParam, reductionParam;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('API基础URL:', _this.apiBaseUrl);\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 6;\n              break;\n            }\n            _this.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 6:\n            _context.next = 8;\n            return axios.get(\"\".concat(_this.apiBaseUrl, \"/auth/user\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n          case 8:\n            userResponse = _context.sent;\n            if (userResponse.data && userResponse.data.username) {\n              _this.username = userResponse.data.username;\n              console.log('成功获取用户信息:', _this.username);\n            } else {\n              console.error('未能获取到用户名:', userResponse.data);\n              _this.username = localStorage.getItem('username') || '';\n            }\n            if (userResponse.data.created_at) {\n              _this.registrationDate = new Date(userResponse.data.created_at);\n              thirtyDaysAgo = new Date();\n              thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n              _this.isNewUser = _this.registrationDate > thirtyDaysAgo;\n            }\n\n            // 尝试从URL参数获取排名信息\n            urlParams = new URLSearchParams(window.location.search);\n            rankParam = urlParams.get('rank');\n            reductionParam = urlParams.get('reduction');\n            if (rankParam) {\n              _this.currentUserRank = rankParam;\n            }\n            if (reductionParam) {\n              _this.currentUserCarbonReduction = reductionParam;\n            }\n\n            // 加载排行榜数据\n            _context.next = 18;\n            return _this.loadLeaderboard();\n          case 18:\n            // 如果排行榜加载成功但还没有用户名，尝试从排行榜数据中获取\n            if (!_this.username && _this.userRank) {\n              _this.username = _this.userRank.username;\n            }\n            _context.next = 26;\n            break;\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading user data:', _context.t0);\n            // 如果API调用失败，尝试从localStorage获取用户名\n            _this.username = localStorage.getItem('username') || '';\n            _this.handleError(_context.t0, '加载用户数据失败');\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 21]]);\n    }))();\n  },\n  methods: {\n    // 获取用户名的首字母作为头像\n    getInitials: function getInitials(name) {\n      if (!name) return '?';\n\n      // 对于双字节字符（如中文），只取第一个字符\n      if (name.charCodeAt(0) > 127) {\n        return name.charAt(0);\n      }\n\n      // 对于英文等单字节字符，取首字母\n      return name.charAt(0).toUpperCase();\n    },\n    // 获取排名描述\n    getRankDescription: function getRankDescription(rank) {\n      if (rank <= 10) return '优秀减排者';\n      if (rank <= 50) return '活跃减排者';\n      if (rank <= 100) return '进步减排者';\n      return '环保新手';\n    },\n    // 获取百分比\n    getPercentile: function getPercentile(rank) {\n      // 计算击败了多少百分比的用户\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\n      var percentile = Math.floor((this.totalUserCount - rank) / this.totalUserCount * 100);\n      return Math.max(0, Math.min(99, percentile));\n    },\n    // 获取排名图标类\n    getRankIconClass: function getRankIconClass(rank) {\n      if (rank <= 3) return 'text-gold';\n      if (rank <= 10) return 'text-silver';\n      if (rank <= 50) return 'text-bronze';\n      return 'text-normal';\n    },\n    // 获取排名颜色类\n    getRankColorClass: function getRankColorClass(rank) {\n      if (rank <= 3) return 'rank-top';\n      if (rank <= 10) return 'rank-excellent';\n      if (rank <= 50) return 'rank-good';\n      return 'rank-normal';\n    },\n    // 处理错误的通用方法\n    handleError: function handleError(error, defaultMessage) {\n      var errorMsg = defaultMessage;\n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = \"\".concat(defaultMessage, \": \").concat(error.message);\n      }\n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    loadLeaderboard: function loadLeaderboard() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, timestamp, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this2.loading = true;\n              _this2.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context2.next = 7;\n                break;\n              }\n              _this2.$router.push('/login');\n              return _context2.abrupt(\"return\");\n            case 7:\n              // 添加时间戳防止缓存\n              timestamp = new Date().getTime();\n              console.log('正在加载排行榜数据，限制:', _this2.limit, '时间戳:', timestamp);\n\n              // 直接使用axios\n              _context2.next = 11;\n              return axios.get(\"\".concat(_this2.apiBaseUrl, \"/leaderboard?limit=\").concat(_this2.limit, \"&_t=\").concat(timestamp), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 11:\n              response = _context2.sent;\n              console.log('排行榜数据:', response.data);\n              if (!(response.data && response.data.leaderboard)) {\n                _context2.next = 25;\n                break;\n              }\n              _this2.leaderboard = response.data.leaderboard;\n              _this2.userRank = response.data.userRank;\n\n              // 如果用户排名信息为null或carbon_reduction为0，尝试强制更新，但不修改原始值\n              if (!(!_this2.userRank || _this2.userRank.carbon_reduction === 0)) {\n                _context2.next = 20;\n                break;\n              }\n              console.log('用户排名数据为空或减排量为0，尝试获取最新排名...');\n              _context2.next = 20;\n              return _this2.getUserRankOnly();\n            case 20:\n              // 确保数据排序正确\n              _this2.leaderboard.sort(function (a, b) {\n                return a.rank - b.rank;\n              });\n\n              // 获取总用户数量\n              if (response.data.totalUserCount) {\n                _this2.totalUserCount = response.data.totalUserCount;\n                console.log('获取到总用户数:', _this2.totalUserCount);\n              }\n\n              // 重置为第一页\n              _this2.currentPage = 1;\n              _context2.next = 28;\n              break;\n            case 25:\n              console.error('返回的数据格式不正确:', response.data);\n              _this2.errorMessage = '返回数据格式不正确，请稍后再试';\n              _this2.leaderboard = [];\n            case 28:\n              _context2.next = 34;\n              break;\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.handleError(_context2.t0, '加载排行榜失败');\n              _this2.leaderboard = [];\n            case 34:\n              _context2.prev = 34;\n              _this2.loading = false;\n              return _context2.finish(34);\n            case 37:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 30, 34, 37]]);\n      }))();\n    },\n    // 仅获取用户排名，不修改减碳总量\n    getUserRankOnly: function getUserRankOnly() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, userRankResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 4:\n              console.log('仅获取用户排名数据...');\n\n              // 获取最新的用户排名\n              _context3.next = 7;\n              return axios.get(\"\".concat(_this3.apiBaseUrl, \"/leaderboard/user\"), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 7:\n              userRankResponse = _context3.sent;\n              if (userRankResponse.data) {\n                console.log('获取到的用户排名:', userRankResponse.data);\n                _this3.userRank = userRankResponse.data;\n              }\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('获取用户排名失败:', _context3.t0);\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 11]]);\n      }))();\n    },\n    changePage: function changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    updateLeaderboard: function updateLeaderboard() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, updateResponse;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _this4.loading = true;\n              _this4.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context4.next = 7;\n                break;\n              }\n              _this4.$router.push('/login');\n              return _context4.abrupt(\"return\");\n            case 7:\n              console.log('开始更新排行榜，将刷新用户排名信息...');\n\n              // 直接使用axios更新排名（不会修改减碳总量）\n              _context4.next = 10;\n              return axios.post(\"\".concat(_this4.apiBaseUrl, \"/leaderboard/update\"), {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 10:\n              updateResponse = _context4.sent;\n              console.log('排名更新响应:', updateResponse.data);\n              if (!(updateResponse.data && updateResponse.data.rank)) {\n                _context4.next = 19;\n                break;\n              }\n              console.log(\"\\u7528\\u6237\\u6392\\u540D\\u5DF2\\u66F4\\u65B0\\u4E3A\\u7B2C \".concat(updateResponse.data.rank, \" \\u540D\"));\n              if (_this4.userRank) {\n                // 只更新排名，保持减碳量不变\n                _this4.userRank.rank = updateResponse.data.rank;\n              }\n\n              // 重新加载排行榜数据\n              _context4.next = 17;\n              return _this4.loadLeaderboard();\n            case 17:\n              _context4.next = 21;\n              break;\n            case 19:\n              _context4.next = 21;\n              return _this4.loadLeaderboard();\n            case 21:\n              _this4.errorMessage = '';\n              _this4.showSuccessNotification('排行榜更新成功');\n              _context4.next = 28;\n              break;\n            case 25:\n              _context4.prev = 25;\n              _context4.t0 = _context4[\"catch\"](0);\n              _this4.handleError(_context4.t0, '更新排行榜失败');\n            case 28:\n              _context4.prev = 28;\n              _this4.loading = false;\n              return _context4.finish(28);\n            case 31:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 25, 28, 31]]);\n      }))();\n    },\n    // 显示成功通知\n    showSuccessNotification: function showSuccessNotification(message) {\n      // 如果组件有相关的通知系统，可以在这里实现\n      console.log('成功:', message);\n    },\n    isCurrentUser: function isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    getRankClass: function getRankClass(rank) {\n      if (rank === 1) return 'rank-1';\n      if (rank === 2) return 'rank-2';\n      if (rank === 3) return 'rank-3';\n      return '';\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URLS","axiosConfig","requestInterceptor","responseInterceptor","api","create","interceptors","request","use","error","Promise","reject","response","success","getBaseUrl","host","window","location","hostname","port","protocol","concat","data","leaderboard","userRank","username","limit","currentPage","pageSize","loading","errorMessage","apiBaseUrl","totalUserCount","isNewUser","registrationDate","currentUserRank","currentUserCarbonReduction","computed","totalPages","Math","ceil","length","displayedLeaderboard","start","end","slice","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","userResponse","thirtyDaysAgo","urlParams","rankParam","reductionParam","wrap","_callee$","_context","prev","next","console","log","localStorage","getItem","$router","push","abrupt","get","headers","Authorization","sent","created_at","Date","setDate","getDate","URLSearchParams","search","loadLeaderboard","t0","handleError","stop","methods","getInitials","name","charCodeAt","charAt","toUpperCase","getRankDescription","rank","getPercentile","percentile","floor","max","min","getRankIconClass","getRankColorClass","defaultMessage","errorMsg","message","_this2","_callee2","timestamp","_callee2$","_context2","getTime","carbon_reduction","getUserRankOnly","sort","a","b","finish","_this3","_callee3","userRankResponse","_callee3$","_context3","changePage","pageNumber","updateLeaderboard","_this4","_callee4","updateResponse","_callee4$","_context4","post","showSuccessNotification","isCurrentUser","userId","user_id","getRankClass"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\n  <div class=\"leaderboard-page\">\n    <h2>碳减排排行榜</h2>\n    \n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ errorMessage }}\n    </div>\n    \n    <!-- 用户自己的排名信息卡片，更美观的展示 -->\n    <div class=\"user-rank-card\">\n      <div class=\"user-rank-header\">\n        <div class=\"user-avatar\">\n          <span v-if=\"username\">{{ getInitials(username) }}</span>\n          <span v-else><i class=\"fas fa-user\"></i></span>\n        </div>\n        <div class=\"user-info\">\n          <h3>{{ username || '未能获取用户名' }}</h3>\n          <div class=\"user-status\">您当前的碳减排状态</div>\n          <div class=\"user-badges\" v-if=\"userRank\">\n            <span v-if=\"userRank.rank <= 3\" class=\"badge top-badge\" title=\"排名前三\">\n              <i class=\"fas fa-crown\"></i>\n            </span>\n            <span v-if=\"userRank.carbon_reduction >= 100\" class=\"badge century-badge\" title=\"减排量超过100kg\">\n              <i class=\"fas fa-medal\"></i>\n            </span>\n            <span v-if=\"userRank.carbon_reduction >= 50\" class=\"badge progress-badge\" title=\"减排量超过50kg\">\n              <i class=\"fas fa-award\"></i>\n            </span>\n            <span v-if=\"isNewUser\" class=\"badge newcomer-badge\" title=\"新用户\">\n              <i class=\"fas fa-seedling\"></i>\n            </span>\n          </div>\n        </div>\n        <div v-if=\"userRank\" class=\"rank-badge\" :class=\"getRankColorClass(userRank.rank)\">\n          #{{ userRank.rank }}\n        </div>\n        <div v-else class=\"rank-badge loading-rank\">\n          <span>#{{ currentUserRank || '?' }}</span>\n        </div>\n      </div>\n      \n      <div class=\"user-stats\">\n        <div class=\"stat-item\">\n          <div class=\"stat-value carbon-value\">\n            {{ userRank ? Number(userRank.carbon_reduction).toFixed(1) : (currentUserCarbonReduction || '加载中...') }}\n          </div>\n          <div class=\"stat-label\">减排量 (kg CO₂)</div>\n        </div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value\">\n            <i v-if=\"userRank\" class=\"fas fa-trophy\" :class=\"getRankIconClass(userRank.rank)\"></i>\n            <i v-else class=\"fas fa-trophy text-normal\"></i>\n          </div>\n          <div class=\"stat-label\">{{ userRank ? getRankDescription(userRank.rank) : '活跃减排者' }}</div>\n        </div>\n        \n        <div class=\"stat-divider\"></div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value achievement\">\n            <span class=\"percentage\">{{ userRank ? getPercentile(userRank.rank) : '81' }}%</span>\n          </div>\n          <div class=\"stat-label\">击败了其他用户</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-controls\">\n      <div class=\"update-section\">\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\n          {{ loading ? '更新中...' : '更新排名' }}\n        </button>\n      </div>\n      \n      <div class=\"filter-section\">\n        <select v-model=\"limit\" @change=\"loadLeaderboard\" class=\"filter-select\">\n          <option :value=\"10\">显示10名</option>\n          <option :value=\"20\">显示20名</option>\n          <option :value=\"50\">显示50名</option>\n          <option :value=\"100\">显示100名</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-container\">\n      <div class=\"leaderboard-table\">\n        <table>\n          <thead>\n            <tr>\n              <th class=\"rank-cell\">排名</th>\n              <th>用户</th>\n              <th>减排量 (kg CO₂)</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \n                :class=\"{ 'current-user': isCurrentUser(entry.user_id) }\"\n                :style=\"{ '--row-index': index }\">\n              <td class=\"rank-cell\">\n                <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">\n                  <template v-if=\"entry.rank <= 3\">\n                    <span>{{ entry.rank }}</span>\n                  </template>\n                  <template v-else>\n                    {{ entry.rank }}\n                  </template>\n                </div>\n              </td>\n              <td>\n                <div class=\"user-info-row\">\n                  <div class=\"user-avatar-small\" :class=\"{ 'current-user': isCurrentUser(entry.user_id) }\">\n                    {{ getInitials(entry.username) }}\n                  </div>\n                  <span>{{ entry.username }}</span>\n                  <span v-if=\"isCurrentUser(entry.user_id)\" class=\"current-user-tag\">当前用户</span>\n                </div>\n              </td>\n              <td>{{ Number(entry.carbon_reduction).toFixed(1) }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\n        暂无排行数据\n      </div>\n    </div>\n    \n    <!-- 分页控件 -->\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\n      <button \n        @click=\"changePage(currentPage - 1)\" \n        :disabled=\"currentPage === 1\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      \n      <div class=\"page-info\">\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\n      </div>\n      \n      <button \n        @click=\"changePage(currentPage + 1)\" \n        :disabled=\"currentPage === totalPages\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n    \n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\n      共 {{ leaderboard.length }} 条记录\n    </div>\n    \n    <div class=\"leaderboard-tips\">\n      <h3>如何提高排名?</h3>\n      <ul>\n        <li><i class=\"fas fa-walking\"></i> 多步行减少碳排放</li>\n        <li><i class=\"fas fa-calculator\"></i> 通过碳排放计算器记录您的低碳行为</li>\n        <li><i class=\"fas fa-paw\"></i> 喂养并升级您的虚拟宠物</li>\n        <li><i class=\"fas fa-award\"></i> 完成成就任务获得额外奖励</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nconst api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\n\n// 添加响应拦截器\napi.interceptors.response.use(\n  responseInterceptor.success, \n  responseInterceptor.error\n);\n\n// 获取API基础URL\nconst getBaseUrl = () => {\n  const host = window.location.hostname;\n  const port = '5000';\n  const protocol = window.location.protocol;\n  \n  if (host === 'localhost' || host === '127.0.0.1') {\n    return `http://localhost:${port}/api`;\n  } else {\n    return `${protocol}//${host}:${port}/api`;\n  }\n};\n\nexport default {\n  data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl(),\n      totalUserCount: 200, // 估计的用户总数，可以从后端获取\n      isNewUser: false,\n      registrationDate: null,\n      currentUserRank: null,\n      currentUserCarbonReduction: null\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  async created() {\n    try {\n      console.log('API基础URL:', this.apiBaseUrl);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 获取用户信息\n      const userResponse = await axios.get(`${this.apiBaseUrl}/auth/user`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (userResponse.data && userResponse.data.username) {\n        this.username = userResponse.data.username;\n        console.log('成功获取用户信息:', this.username);\n      } else {\n        console.error('未能获取到用户名:', userResponse.data);\n        this.username = localStorage.getItem('username') || '';\n      }\n\n      if (userResponse.data.created_at) {\n        this.registrationDate = new Date(userResponse.data.created_at);\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        this.isNewUser = this.registrationDate > thirtyDaysAgo;\n      }\n      \n      // 尝试从URL参数获取排名信息\n      const urlParams = new URLSearchParams(window.location.search);\n      const rankParam = urlParams.get('rank');\n      const reductionParam = urlParams.get('reduction');\n      \n      if (rankParam) {\n        this.currentUserRank = rankParam;\n      }\n      \n      if (reductionParam) {\n        this.currentUserCarbonReduction = reductionParam;\n      }\n      \n      // 加载排行榜数据\n      await this.loadLeaderboard();\n\n      // 如果排行榜加载成功但还没有用户名，尝试从排行榜数据中获取\n      if (!this.username && this.userRank) {\n        this.username = this.userRank.username;\n      }\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      // 如果API调用失败，尝试从localStorage获取用户名\n      this.username = localStorage.getItem('username') || '';\n      this.handleError(error, '加载用户数据失败');\n    }\n  },\n  methods: {\n    // 获取用户名的首字母作为头像\n    getInitials(name) {\n      if (!name) return '?';\n      \n      // 对于双字节字符（如中文），只取第一个字符\n      if (name.charCodeAt(0) > 127) {\n        return name.charAt(0);\n      }\n      \n      // 对于英文等单字节字符，取首字母\n      return name.charAt(0).toUpperCase();\n    },\n    \n    // 获取排名描述\n    getRankDescription(rank) {\n      if (rank <= 10) return '优秀减排者';\n      if (rank <= 50) return '活跃减排者';\n      if (rank <= 100) return '进步减排者';\n      return '环保新手';\n    },\n    \n    // 获取百分比\n    getPercentile(rank) {\n      // 计算击败了多少百分比的用户\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\n      const percentile = Math.floor(((this.totalUserCount - rank) / this.totalUserCount) * 100);\n      return Math.max(0, Math.min(99, percentile));\n    },\n    \n    // 获取排名图标类\n    getRankIconClass(rank) {\n      if (rank <= 3) return 'text-gold';\n      if (rank <= 10) return 'text-silver';\n      if (rank <= 50) return 'text-bronze';\n      return 'text-normal';\n    },\n    \n    // 获取排名颜色类\n    getRankColorClass(rank) {\n      if (rank <= 3) return 'rank-top';\n      if (rank <= 10) return 'rank-excellent';\n      if (rank <= 50) return 'rank-good';\n      return 'rank-normal';\n    },\n    \n    // 处理错误的通用方法\n    handleError(error, defaultMessage) {\n      let errorMsg = defaultMessage;\n      \n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = `${defaultMessage}: ${error.message}`;\n      }\n      \n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    \n    async loadLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        // 添加时间戳防止缓存\n        const timestamp = new Date().getTime();\n        console.log('正在加载排行榜数据，限制:', this.limit, '时间戳:', timestamp);\n        \n        // 直接使用axios\n        const response = await axios.get(`${this.apiBaseUrl}/leaderboard?limit=${this.limit}&_t=${timestamp}`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('排行榜数据:', response.data);\n        \n        if (response.data && response.data.leaderboard) {\n          this.leaderboard = response.data.leaderboard;\n          this.userRank = response.data.userRank;\n          \n          // 如果用户排名信息为null或carbon_reduction为0，尝试强制更新，但不修改原始值\n          if (!this.userRank || this.userRank.carbon_reduction === 0) {\n            console.log('用户排名数据为空或减排量为0，尝试获取最新排名...');\n            await this.getUserRankOnly();\n          }\n          \n          // 确保数据排序正确\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\n          \n          // 获取总用户数量\n          if (response.data.totalUserCount) {\n            this.totalUserCount = response.data.totalUserCount;\n            console.log('获取到总用户数:', this.totalUserCount);\n          }\n          \n          // 重置为第一页\n          this.currentPage = 1;\n        } else {\n          console.error('返回的数据格式不正确:', response.data);\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\n          this.leaderboard = [];\n        }\n      } catch (error) {\n        this.handleError(error, '加载排行榜失败');\n        this.leaderboard = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 仅获取用户排名，不修改减碳总量\n    async getUserRankOnly() {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log('仅获取用户排名数据...');\n        \n        // 获取最新的用户排名\n        const userRankResponse = await axios.get(`${this.apiBaseUrl}/leaderboard/user`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (userRankResponse.data) {\n          console.log('获取到的用户排名:', userRankResponse.data);\n          this.userRank = userRankResponse.data;\n        }\n      } catch (error) {\n        console.error('获取用户排名失败:', error);\n      }\n    },\n    \n    changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    \n    async updateLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        console.log('开始更新排行榜，将刷新用户排名信息...');\n        \n        // 直接使用axios更新排名（不会修改减碳总量）\n        const updateResponse = await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        console.log('排名更新响应:', updateResponse.data);\n        \n        if (updateResponse.data && updateResponse.data.rank) {\n          console.log(`用户排名已更新为第 ${updateResponse.data.rank} 名`);\n          \n          if (this.userRank) {\n            // 只更新排名，保持减碳量不变\n            this.userRank.rank = updateResponse.data.rank;\n          }\n          \n          // 重新加载排行榜数据\n        await this.loadLeaderboard();\n        } else {\n          // 如果更新失败，也重新加载最新数据\n          await this.loadLeaderboard();\n        }\n        \n        this.errorMessage = '';\n        this.showSuccessNotification('排行榜更新成功');\n      } catch (error) {\n        this.handleError(error, '更新排行榜失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 显示成功通知\n    showSuccessNotification(message) {\n      // 如果组件有相关的通知系统，可以在这里实现\n      console.log('成功:', message);\n    },\n    \n    isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    \n    getRankClass(rank) {\n      if (rank === 1) return 'rank-1';\n      if (rank === 2) return 'rank-2';\n      if (rank === 3) return 'rank-3';\n      return '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.leaderboard-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.page-title {\n  color: #1e3d59;\n  text-align: center;\n  margin-bottom: 0.5rem;\n  font-size: 32px;\n  font-weight: 600;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.main-title {\n  display: none;\n}\n\n.user-rank-card {\n  background: linear-gradient(135deg, #bbdefb 0%, #e3f2fd 100%);\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 25px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  border: 1px solid rgba(0,0,0,0.05);\n  animation: slideInFromTop 0.8s ease-out;\n  width: 100%;\n  max-width: 800px;\n}\n\n@keyframes slideInFromTop {\n  0% {\n    opacity: 0;\n    transform: translateY(-30px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.user-rank-header {\n  padding: 25px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.user-avatar {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2.2rem;\n  font-weight: bold;\n  margin-right: 20px;\n  box-shadow: 0 4px 10px rgba(33,150,243,0.4);\n  text-transform: uppercase;\n  position: relative;\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: pulse 2s infinite;\n}\n\n.user-avatar:hover {\n  transform: scale(1.05);\n  box-shadow: 0 6px 15px rgba(33,150,243,0.6);\n}\n\n@keyframes pulse {\n  0% {\n    box-shadow: 0 4px 10px rgba(33,150,243,0.4);\n  }\n  50% {\n    box-shadow: 0 4px 20px rgba(33,150,243,0.6);\n  }\n  100% {\n    box-shadow: 0 4px 10px rgba(33,150,243,0.4);\n  }\n}\n\n.badge {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  font-size: 0.8rem;\n  color: white;\n  cursor: help;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  animation: badgePop 0.5s ease-out;\n}\n\n.badge:hover {\n  transform: translateY(-2px) rotate(10deg);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n}\n\n@keyframes badgePop {\n  0% {\n    transform: scale(0);\n  }\n  70% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n.rank-1, .rank-2, .rank-3 {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  animation: rankPulse 1.5s infinite alternate;\n}\n\n@keyframes rankPulse {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(1.1);\n  }\n}\n\n.tip-card {\n  display: flex;\n  background-color: #F6F8FA;\n  border-radius: 10px;\n  padding: 15px;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  animation: cardAppear 0.5s ease-out;\n  animation-fill-mode: both;\n  animation-delay: calc(var(--index, 0) * 0.1s);\n}\n\n@keyframes cardAppear {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-info h3 {\n  margin: 0 0 8px 0;\n  font-size: 1.5rem;\n  color: #333;\n  font-weight: 600;\n}\n\n.user-status {\n  color: #555;\n  font-size: 0.95rem;\n  margin-bottom: 6px;\n}\n\n.user-badges {\n  display: flex;\n  gap: 5px;\n}\n\n.rank-badge {\n  font-size: 1.8rem;\n  font-weight: bold;\n  padding: 12px 20px;\n  border-radius: 10px;\n  color: white;\n  box-shadow: 0 4px 10px rgba(0,0,0,0.15);\n}\n\n.rank-top {\n  background-color: #F57C00;\n}\n\n.rank-excellent {\n  background-color: #4CAF50;\n}\n\n.rank-good {\n  background-color: #2196F3;\n}\n\n.rank-normal {\n  background-color: #9E9E9E;\n}\n\n.user-stats {\n  display: flex;\n  padding: 20px;\n  background-color: rgba(255,255,255,0.7);\n  justify-content: space-around;\n}\n\n.stat-item {\n  flex: 1;\n  text-align: center;\n  padding: 15px;\n}\n\n.stat-value {\n  font-size: 1.7rem;\n  font-weight: bold;\n  color: #2196F3;\n  margin-bottom: 8px;\n}\n\n.carbon-value {\n  font-size: 2.2rem;\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  animation: floatAnimation 4s ease-in-out infinite;\n  display: inline-block;\n}\n\n.stat-label {\n  font-size: 0.9rem;\n  color: #555;\n  font-weight: 500;\n}\n\n.stat-divider {\n  width: 1px;\n  background-color: rgba(0,0,0,0.1);\n  margin: 10px 5px;\n}\n\n.text-gold {\n  color: #F57C00;\n}\n\n.text-silver {\n  color: #607D8B;\n}\n\n.text-bronze {\n  color: #795548;\n}\n\n.leaderboard-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  background-color: white;\n  padding: 15px 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.05);\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #d32f2f;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n.update-btn {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  color: white;\n  border: none;\n  border-radius: 25px;\n  padding: 10px 20px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  transition: all 0.3s;\n  font-weight: 500;\n  box-shadow: 0 3px 8px rgba(33,150,243,0.3);\n  font-size: 0.95rem;\n}\n\n.update-btn:hover:not(:disabled) {\n  background: linear-gradient(135deg, #1976D2, #0288D1);\n  transform: translateY(-2px);\n  box-shadow: 0 5px 12px rgba(33,150,243,0.4);\n}\n\n.filter-select {\n  padding: 10px 15px;\n  border-radius: 25px;\n  border: 1px solid #e0e0e0;\n  background-color: white;\n  font-size: 0.95rem;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\n  cursor: pointer;\n  min-width: 130px;\n  color: #424242;\n  transition: all 0.3s;\n}\n\n.filter-select:hover {\n  border-color: #2196F3;\n  box-shadow: 0 2px 8px rgba(33,150,243,0.2);\n}\n\n.leaderboard-container {\n  background-color: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 4px 16px rgba(0,0,0,0.1);\n  margin-bottom: 25px;\n  min-height: 300px;\n  position: relative;\n  width: 100%;\n}\n\n.leaderboard-table {\n  width: 100%;\n  border-spacing: 0;\n  border-collapse: separate;\n  background-color: #fff;\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n.leaderboard-table table {\n  width: 100%;\n}\n\n.leaderboard-table th {\n  text-align: left;\n  padding: 18px 22px;\n  color: #424242;\n  font-weight: 600;\n  font-size: 0.9rem;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  background-color: #F6F8FA;\n  border-bottom: 1px solid #E6EBF1;\n}\n\n.leaderboard-table td {\n  padding: 16px 22px;\n  border-bottom: 1px solid #E6EBF1;\n  color: #24292F;\n  font-size: 1rem;\n}\n\n.user-info-row {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.user-avatar-small {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #90CAF9, #64B5F6);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  flex-shrink: 0;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n}\n\n.user-avatar-small:hover {\n  transform: scale(1.1);\n}\n\n.user-avatar-small.current-user {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  box-shadow: 0 3px 8px rgba(33,150,243,0.4);\n}\n\n.current-user-tag {\n  display: inline-block;\n  font-size: 0.7rem;\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  color: white;\n  padding: 3px 8px;\n  border-radius: 12px;\n  margin-left: 8px;\n  vertical-align: middle;\n  font-weight: bold;\n  box-shadow: 0 2px 4px rgba(33,150,243,0.3);\n}\n\n.leaderboard-tips {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.leaderboard-tips h3 {\n  color: #1976D2;\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n}\n\n.leaderboard-tips ul {\n  padding-left: 10px;\n  margin: 0;\n  list-style-type: none;\n}\n\n.leaderboard-tips li {\n  margin-bottom: 10px;\n  color: #555;\n  display: flex;\n  align-items: center;\n}\n\n.leaderboard-tips li i {\n  color: #2196F3;\n  margin-right: 10px;\n  width: 20px;\n  text-align: center;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px 0;\n  gap: 15px;\n}\n\n.pagination-btn {\n  background-color: white;\n  border: none;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n  color: #2196F3;\n  font-size: 1rem;\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background-color: #2196F3;\n  color: white;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(33,150,243,0.3);\n}\n\n.page-info {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.total-entries {\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 768px) {\n  .page-title {\n    font-size: 28px;\n  }\n  .leaderboard-controls {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .user-rank-header {\n    flex-direction: column;\n    text-align: center;\n  }\n  \n  .user-avatar {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n  \n  .rank-badge {\n    margin-top: 10px;\n  }\n  \n  .user-stats {\n    flex-direction: column;\n  }\n  \n  .stat-divider {\n    height: 1px;\n    width: 100%;\n    margin: 5px 0;\n  }\n  \n  .leaderboard-row {\n    padding: 10px;\n  }\n  \n  .rank-number {\n    width: 25px;\n    height: 25px;\n    font-size: 0.9rem;\n  }\n  \n  .user-column {\n    font-size: 0.9rem;\n  }\n  \n  .reduction-column {\n    width: 100px;\n    font-size: 0.9rem;\n  }\n}\n\n.achievement {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.percentage {\n  font-weight: bold;\n  color: #ff9800;\n  text-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.achievement:after {\n  content: '';\n  position: absolute;\n  width: 110%;\n  height: 5px;\n  bottom: -4px;\n  left: -5%;\n  background: linear-gradient(90deg, #ff9800, #ffeb3b);\n  border-radius: 3px;\n}\n\n.rank-cell {\n  width: 50px;\n  font-weight: 600;\n}\n\n.top-rank {\n  font-weight: 700;\n  font-size: 1.1rem;\n}\n\n.rank-1, .rank-2, .rank-3 {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.rank-1 {\n  background: linear-gradient(135deg, #FFD700, #FFA500);\n}\n\n.rank-2 {\n  background: linear-gradient(135deg, #E0E0E0, #B0B0B0);\n}\n\n.rank-3 {\n  background: linear-gradient(135deg, #CD7F32, #8B4513);\n}\n\n.user-column {\n  flex: 1;\n  padding: 0 10px;\n  position: relative;\n}\n\n.update-btn i.fa-spin {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes floatAnimation {\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-8px);\n  }\n  100% {\n    transform: translateY(0);\n  }\n}\n\n.leaderboard-table tr {\n  transition: background-color 0.15s ease;\n  animation: fadeIn 0.5s ease-out;\n  animation-fill-mode: both;\n  animation-delay: calc(var(--row-index, 0) * 0.1s);\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.leaderboard-table tr:hover {\n  background-color: #F6F8FA;\n}\n\n.leaderboard-table tr.current-user {\n  background-color: rgba(33, 150, 243, 0.08);\n}\n\n.leaderboard-table tr.current-user:hover {\n  background-color: rgba(33, 150, 243, 0.12);\n}\n\n.leaderboard-table tr:last-child td {\n  border-bottom: none;\n}\n\n.no-data {\n  padding: 30px;\n  text-align: center;\n  color: #999;\n  font-size: 1.1rem;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  color: #666;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #2196F3;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 15px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.update-btn:disabled {\n  background: linear-gradient(135deg, #90CAF9, #64B5F6);\n  cursor: not-allowed;\n  box-shadow: none;\n}\n\n.loading-rank {\n  background-color: #9E9E9E;\n  animation: pulse 1.5s infinite;\n}\n\n.text-normal {\n  color: #9E9E9E;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}