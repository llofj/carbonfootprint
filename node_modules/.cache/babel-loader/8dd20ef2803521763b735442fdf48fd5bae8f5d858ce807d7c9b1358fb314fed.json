{"ast":null,"code":"import _objectSpread from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null\n    };\n  },\n  computed: {\n    sortedAchievements: function sortedAchievements() {\n      var _this = this;\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      return _toConsumableArray(this.achievementTypes).sort(function (a, b) {\n        if (!a || !b || !a.id || !b.id) return 0;\n        var isUnlockedA = _this.isUnlocked(a.id);\n        var isUnlockedB = _this.isUnlocked(b.id);\n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _this2.loading = true;\n            _this2.error = null;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 7;\n              break;\n            }\n            _this2.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 7:\n            _context.next = 9;\n            return _this2.loadUserRank();\n          case 9:\n            _context.next = 11;\n            return _this2.loadAchievementTypes();\n          case 11:\n            _context.next = 13;\n            return _this2.loadUserAchievements();\n          case 13:\n            if (!(!_this2.userRank || !_this2.userRank.carbon_reduction)) {\n              _context.next = 18;\n              break;\n            }\n            _context.next = 16;\n            return _this2.loadCarbonReduction();\n          case 16:\n            _context.next = 19;\n            break;\n          case 18:\n            _this2.carbonReduction = _this2.userRank.carbon_reduction;\n          case 19:\n            _context.next = 25;\n            break;\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading achievements data:', _context.t0);\n            _this2.error = '加载成就数据失败，请稍后再试';\n          case 25:\n            _context.prev = 25;\n            _this2.loading = false;\n            return _context.finish(25);\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 21, 25, 28]]);\n    }))();\n  },\n  methods: {\n    loadAchievementTypes: function loadAchievementTypes() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, validAchievements;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/api/achievement/types');\n            case 3:\n              response = _context2.sent;\n              // 确保响应数据是一个数组且数组中的每个项目都有id属性\n              if (response.data && Array.isArray(response.data)) {\n                // 深度复制数据以避免引用问题\n                validAchievements = response.data.filter(function (item) {\n                  return item && item.id;\n                }).map(function (item) {\n                  return _objectSpread({}, item);\n                }); // 确保复制后的数据仍然有效\n                if (validAchievements.length > 0) {\n                  _this3.achievementTypes = validAchievements;\n                } else {\n                  console.error('No valid achievement types found in response');\n                  _this3.achievementTypes = [];\n                }\n              } else {\n                console.error('Achievement types data is not an array or is empty:', response.data);\n                _this3.achievementTypes = [];\n              }\n              _context2.next = 12;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading achievement types:', _context2.t0);\n              _this3.achievementTypes = [];\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    loadUserAchievements: function loadUserAchievements() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              _context3.next = 4;\n              return axios.get('http://localhost:5000/api/achievement/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context3.sent;\n              _this4.userAchievements = response.data;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading user achievements:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    loadCarbonReduction: function loadCarbonReduction() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, rankResponse, carbonResponse;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              token = localStorage.getItem('token');\n              _context4.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              rankResponse = _context4.sent;\n              if (!(rankResponse.data && rankResponse.data.carbon_reduction)) {\n                _context4.next = 9;\n                break;\n              }\n              _this5.carbonReduction = rankResponse.data.carbon_reduction;\n              _context4.next = 13;\n              break;\n            case 9:\n              _context4.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              carbonResponse = _context4.sent;\n              _this5.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n            case 13:\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error loading carbon reduction:', _context4.t0);\n              _this5.carbonReduction = 0;\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 15]]);\n      }))();\n    },\n    loadUserRank: function loadUserRank() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              token = localStorage.getItem('token');\n              _context5.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context5.sent;\n              _this6.userRank = response.data;\n              _context5.next = 11;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error loading user rank:', _context5.t0);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 8]]);\n      }))();\n    },\n    isUnlocked: function isUnlocked(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n    },\n    getUnlockDate: function getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      var achievement = this.userAchievements.find(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    getUnlockedAchievementsCount: function getUnlockedAchievementsCount() {\n      var _this7 = this;\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(function (a) {\n        return a && a.achievement_id && _this7.achievementTypes.some(function (type) {\n          return type && type.id === a.achievement_id;\n        });\n      }).length;\n    },\n    checkNewAchievements: function checkNewAchievements() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _this8.loading = true;\n              _this8.error = null;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context6.next = 7;\n                break;\n              }\n              _this8.$router.push('/login');\n              return _context6.abrupt(\"return\");\n            case 7:\n              _context6.next = 9;\n              return axios.get('http://localhost:5000/api/achievement/check', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 9:\n              response = _context6.sent;\n              if (!(!response || !response.data)) {\n                _context6.next = 12;\n                break;\n              }\n              throw new Error('服务器返回无效响应');\n            case 12:\n              _this8.newAchievements = Array.isArray(response.data.newAchievements) ? response.data.newAchievements.filter(function (a) {\n                return a && a.id;\n              }) : [];\n              if (!(_this8.newAchievements.length > 0)) {\n                _context6.next = 25;\n                break;\n              }\n              alert('恭喜！您解锁了新成就');\n              // 重新加载用户成就\n              _context6.next = 17;\n              return _this8.loadUserAchievements();\n            case 17:\n              _context6.next = 19;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 19:\n              _context6.next = 21;\n              return _this8.loadUserRank();\n            case 21:\n              _context6.next = 23;\n              return _this8.loadCarbonReduction();\n            case 23:\n              _context6.next = 26;\n              break;\n            case 25:\n              alert('暂未解锁新成就，继续努力！');\n            case 26:\n              _context6.next = 32;\n              break;\n            case 28:\n              _context6.prev = 28;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error checking achievements:', _context6.t0);\n              _this8.error = '检查新成就失败，请稍后再试';\n            case 32:\n              _context6.prev = 32;\n              _this8.loading = false;\n              return _context6.finish(32);\n            case 35:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 28, 32, 35]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","achievementTypes","userAchievements","newAchievements","carbonReduction","userRank","loading","error","computed","sortedAchievements","_this","Array","isArray","length","_toConsumableArray","sort","a","b","id","isUnlockedA","isUnlocked","isUnlockedB","localeCompare","created","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","loadUserRank","loadAchievementTypes","loadUserAchievements","carbon_reduction","loadCarbonReduction","t0","console","finish","stop","methods","_this3","_callee2","response","validAchievements","_callee2$","_context2","get","sent","filter","item","map","_objectSpread","_this4","_callee3","_callee3$","_context3","headers","Authorization","concat","_this5","_callee4","rankResponse","carbonResponse","_callee4$","_context4","_this6","_callee5","_callee5$","_context5","achievementId","some","achievement_id","getUnlockDate","achievement","find","date","Date","toLocaleDateString","getUnlockedAchievementsCount","_this7","type","checkNewAchievements","_this8","_callee6","_callee6$","_context6","Error","alert","post"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\n  <div class=\"achievements-page\">\n    <h2>我的成就</h2>\n    \n    <!-- 错误提示 -->\n    <div v-if=\"error\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ error }}\n    </div>\n    \n    <!-- 加载中提示 -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"loading-message\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        <p>加载成就数据中...</p>\n      </div>\n    </div>\n    \n    <!-- 成就内容 - 仅在加载完成且无错误时显示 -->\n    <div v-if=\"!loading && !error\">\n      <div class=\"achievement-summary\">\n        <div class=\"summary-card\">\n          <h3>成就总数</h3>\n          <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes && achievementTypes.length || 0 }}</div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <h3>减排总量</h3>\n          <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <h3>排行榜排名</h3>\n          <div class=\"summary-count rank-value\">#{{ userRank && userRank.rank ? userRank.rank : 'N/A' }}</div>\n        </div>\n      </div>\n      \n      <div v-if=\"achievementTypes && achievementTypes.length > 0\">\n        <div class=\"achievements-status\">\n          <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\n            <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\n          </p>\n          <p v-else class=\"status-message locked-message\">\n            <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\n          </p>\n        </div>\n        \n        <h3 class=\"section-title\">\n          <i v-if=\"getUnlockedAchievementsCount() > 0\" class=\"fas fa-unlock-alt\"></i>\n          <i v-else class=\"fas fa-info-circle\"></i> \n          {{ getUnlockedAchievementsCount() > 0 ? '已解锁的成就' : '可获得的成就' }}\n        </h3>\n        \n        <div class=\"achievement-container\">\n          <div v-for=\"achievement in sortedAchievements\" :key=\"achievement && achievement.id\" \n               v-if=\"achievement && achievement.id && isUnlocked(achievement.id)\"\n               class=\"achievement-card unlocked\"\n               :data-achievement-id=\"achievement.id\">\n            <div class=\"achievement-icon\">\n              <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\n            </div>\n            <div class=\"achievement-info\">\n              <h3>{{ achievement.name }}</h3>\n              <p>{{ achievement.description }}</p>\n              <div class=\"unlock-date\">\n                解锁于: {{ getUnlockDate(achievement.id) }}\n              </div>\n            </div>\n          </div>\n          \n          <div v-for=\"achievement in sortedAchievements\" :key=\"'locked-'+(achievement && achievement.id)\" \n               v-if=\"achievement && achievement.id && !isUnlocked(achievement.id)\"\n               class=\"achievement-card locked\"\n               :data-achievement-id=\"achievement.id\">\n            <div class=\"achievement-icon\">\n              <i :class=\"['fas', achievement.icon]\"></i>\n            </div>\n            <div class=\"achievement-info\">\n              <h3>{{ achievement.name }}</h3>\n              <p>{{ achievement.description }}</p>\n              <div class=\"locked-badge\">\n                未解锁\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"!loading\" class=\"empty-state\">\n        <i class=\"fas fa-award empty-icon\"></i>\n        <p>暂无可用成就</p>\n        <p class=\"empty-description\">系统尚未配置任何成就，请稍后再试</p>\n      </div>\n      \n      <div class=\"check-achievements\">\n        <button @click=\"checkNewAchievements\" class=\"check-btn\" :disabled=\"!achievementTypes || achievementTypes.length === 0 || loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{'fa-spin': loading}\"></i> 检查新成就\n        </button>\n      </div>\n      \n      <div v-if=\"newAchievements && newAchievements.length > 0\" class=\"new-achievements\">\n        <h3>新解锁成就</h3>\n        <div class=\"achievement-list\">\n          <div v-for=\"achievement in newAchievements\" :key=\"achievement && achievement.id\" \n               v-if=\"achievement\"\n               class=\"new-achievement\">\n            <i :class=\"['fas', achievement.icon]\"></i>\n            <span>{{ achievement.achievement_name }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null\n    };\n  },\n  computed: {\n    sortedAchievements() {\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      \n      return [...this.achievementTypes].sort((a, b) => {\n        if (!a || !b || !a.id || !b.id) return 0;\n        \n        const isUnlockedA = this.isUnlocked(a.id);\n        const isUnlockedB = this.isUnlocked(b.id);\n        \n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        \n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  async created() {\n    try {\n      this.loading = true;\n      this.error = null;\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 先获取排行榜数据\n      await this.loadUserRank();\n      // 获取成就类型\n      await this.loadAchievementTypes();\n      // 获取用户成就\n      await this.loadUserAchievements();\n      // 最后获取碳减排量，优先使用排行榜数据\n      if (!this.userRank || !this.userRank.carbon_reduction) {\n        await this.loadCarbonReduction();\n      } else {\n        this.carbonReduction = this.userRank.carbon_reduction;\n      }\n    } catch (error) {\n      console.error('Error loading achievements data:', error);\n      this.error = '加载成就数据失败，请稍后再试';\n    } finally {\n      this.loading = false;\n    }\n  },\n  methods: {\n    async loadAchievementTypes() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\n        \n        // 确保响应数据是一个数组且数组中的每个项目都有id属性\n        if (response.data && Array.isArray(response.data)) {\n          // 深度复制数据以避免引用问题\n          const validAchievements = response.data\n            .filter(item => item && item.id)\n            .map(item => ({...item}));\n            \n          // 确保复制后的数据仍然有效\n          if (validAchievements.length > 0) {\n            this.achievementTypes = validAchievements;\n          } else {\n            console.error('No valid achievement types found in response');\n            this.achievementTypes = [];\n          }\n        } else {\n          console.error('Achievement types data is not an array or is empty:', response.data);\n          this.achievementTypes = [];\n        }\n      } catch (error) {\n        console.error('Error loading achievement types:', error);\n        this.achievementTypes = [];\n        throw error; // 重新抛出错误以便上层处理\n      }\n    },\n    \n    async loadUserAchievements() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userAchievements = response.data;\n      } catch (error) {\n        console.error('Error loading user achievements:', error);\n      }\n    },\n    \n    async loadCarbonReduction() {\n      try {\n        const token = localStorage.getItem('token');\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\n          this.carbonReduction = rankResponse.data.carbon_reduction;\n        } else {\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n        }\n      } catch (error) {\n        console.error('Error loading carbon reduction:', error);\n        this.carbonReduction = 0;\n      }\n    },\n    \n    async loadUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userRank = response.data;\n      } catch (error) {\n        console.error('Error loading user rank:', error);\n      }\n    },\n    \n    isUnlocked(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(a => a && a.achievement_id === achievementId);\n    },\n    \n    getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      const achievement = this.userAchievements.find(a => a && a.achievement_id === achievementId);\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    \n    getUnlockedAchievementsCount() {\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || \n          !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(a => \n        a && a.achievement_id && this.achievementTypes.some(type => type && type.id === a.achievement_id)\n      ).length;\n    },\n    \n    async checkNewAchievements() {\n      try {\n        this.loading = true;\n        this.error = null;\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (!response || !response.data) {\n          throw new Error('服务器返回无效响应');\n        }\n        \n        this.newAchievements = Array.isArray(response.data.newAchievements) \n          ? response.data.newAchievements.filter(a => a && a.id) \n          : [];\n        \n        if (this.newAchievements.length > 0) {\n          alert('恭喜！您解锁了新成就');\n          // 重新加载用户成就\n          await this.loadUserAchievements();\n          // 更新排行榜数据\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          await this.loadUserRank();\n          await this.loadCarbonReduction();\n        } else {\n          alert('暂未解锁新成就，继续努力！');\n        }\n      } catch (error) {\n        console.error('Error checking achievements:', error);\n        this.error = '检查新成就失败，请稍后再试';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.achievements-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.achievement-summary {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.summary-card {\n  flex: 1;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.summary-card h3 {\n  margin-top: 0;\n  color: #555;\n  font-size: 14px;\n}\n\n.summary-count {\n  font-size: 24px;\n  font-weight: bold;\n  color: #2196F3;\n}\n\n.carbon-value {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.rank-value {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.section-title {\n  margin: 30px 0 15px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #f0f0f0;\n  color: #424242;\n}\n\n.section-title i {\n  margin-right: 8px;\n  color: #4CAF50;\n}\n\n.achievements-status {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.status-message {\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: inline-block;\n}\n\n.unlocked-message {\n  background-color: rgba(76, 175, 80, 0.1);\n  color: #2E7D32;\n}\n\n.locked-message {\n  background-color: rgba(158, 158, 158, 0.1);\n  color: #616161;\n}\n\n.status-message i {\n  margin-right: 8px;\n}\n\n.achievement-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.achievement-card {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n}\n\n.achievement-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 15px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked {\n  background: linear-gradient(to right, #e8f5e9, #f5f5f5);\n  border-left: 4px solid #4CAF50;\n}\n\n.achievement-card.locked {\n  background-color: #f5f5f5;\n  opacity: 0.8;\n  border-left: 4px solid #e0e0e0;\n}\n\n.achievement-icon {\n  width: 50px;\n  height: 50px;\n  background-color: #e0e0e0;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked .achievement-icon {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  box-shadow: 0 4px 8px rgba(76,175,80,0.3);\n}\n\n.achievement-info {\n  flex: 1;\n}\n\n.achievement-info h3 {\n  margin: 0 0 5px 0;\n  font-size: 16px;\n}\n\n.achievement-info p {\n  margin: 0 0 10px 0;\n  font-size: 12px;\n  color: #666;\n}\n\n.unlock-date {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: rgba(76,175,80,0.2);\n  color: #2E7D32;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.locked-badge {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: #e0e0e0;\n  color: #757575;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.check-achievements {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.check-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.check-btn:hover {\n  background-color: #0d8bf0;\n}\n\n.new-achievements {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n}\n\n.new-achievements h3 {\n  margin-top: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.achievement-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.new-achievement {\n  background-color: #e8f5e9;\n  border-radius: 4px;\n  padding: 8px 12px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n}\n\n.new-achievement i {\n  color: #4CAF50;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 200px;\n  margin: 30px 0;\n}\n\n.loading-message {\n  text-align: center;\n  color: #757575;\n}\n\n.loading-message i {\n  font-size: 40px;\n  color: #2196F3;\n  margin-bottom: 15px;\n  display: block;\n}\n\n.check-btn:disabled {\n  background-color: #b0bec5;\n  cursor: not-allowed;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #c62828;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  border-left: 4px solid #c62828;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 40px 20px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  margin: 30px 0;\n}\n\n.empty-icon {\n  font-size: 50px;\n  color: #bdbdbd;\n  margin-bottom: 15px;\n}\n\n.empty-state p {\n  margin: 5px 0;\n  color: #616161;\n}\n\n.empty-description {\n  font-size: 14px;\n  color: #9e9e9e;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}