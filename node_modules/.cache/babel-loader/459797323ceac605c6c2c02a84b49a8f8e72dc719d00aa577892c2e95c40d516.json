{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\n// src/store/index.js\nimport { createStore } from 'vuex';\nimport { getAPI } from '@/config/api';\nimport message from './modules/message';\nexport default createStore({\n  state: {\n    user: null,\n    pet: {\n      name: '小绿',\n      level: 1,\n      health: '健康'\n    },\n    achievements: [],\n    leaderboard: [],\n    userCarbonReduction: 0\n  },\n  mutations: {\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    updatePet: function updatePet(state, pet) {\n      state.pet = pet;\n    },\n    setAchievements: function setAchievements(state, achievements) {\n      state.achievements = achievements;\n    },\n    setLeaderboard: function setLeaderboard(state, leaderboard) {\n      state.leaderboard = leaderboard;\n    },\n    setUserCarbonReduction: function setUserCarbonReduction(state, amount) {\n      state.userCarbonReduction = amount;\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      // 模拟登录\n      commit('setUser', user);\n    },\n    fetchAchievements: function fetchAchievements(_ref2) {\n      var commit = _ref2.commit;\n      // 模拟获取成就\n      var achievements = ['绿色饮食达人', '低碳通勤者'];\n      commit('setAchievements', achievements);\n    },\n    fetchLeaderboard: function fetchLeaderboard(_ref3) {\n      var commit = _ref3.commit;\n      // 模拟获取排行榜\n      var leaderboard = [{\n        name: '用户A',\n        reduction: 5.2\n      }, {\n        name: '用户B',\n        reduction: 4.8\n      }];\n      commit('setLeaderboard', leaderboard);\n    },\n    fetchUserCarbonReduction: function fetchUserCarbonReduction(_ref4) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var commit, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context.prev = 1;\n              _context.next = 4;\n              return getAPI().get('/achievement/carbon-reduction');\n            case 4:\n              response = _context.sent;\n              if (response.data && response.data.carbon_reduction !== undefined) {\n                commit('setUserCarbonReduction', response.data.carbon_reduction);\n              }\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('获取用户减碳总量失败:', _context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 8]]);\n      }))();\n    },\n    // 更新用户减碳总量，确保不从缓存获取数据\n    updateUserCarbonReduction: function updateUserCarbonReduction(_ref5) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var commit, timestamp, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context2.prev = 1;\n              // 为了防止缓存，添加随机参数\n              timestamp = new Date().getTime();\n              _context2.next = 5;\n              return getAPI().get(\"/achievement/carbon-reduction?_t=\".concat(timestamp));\n            case 5:\n              response = _context2.sent;\n              if (!(response.data && response.data.carbon_reduction !== undefined)) {\n                _context2.next = 10;\n                break;\n              }\n              commit('setUserCarbonReduction', response.data.carbon_reduction);\n              console.log('已更新用户减碳总量:', response.data.carbon_reduction);\n              return _context2.abrupt(\"return\", response.data.carbon_reduction);\n            case 10:\n              return _context2.abrupt(\"return\", 0);\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('更新用户减碳总量失败:', _context2.t0);\n              return _context2.abrupt(\"return\", 0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 13]]);\n      }))();\n    },\n    // 同步排名系统与用户减碳总量\n    syncLeaderboardWithCarbonReduction: function syncLeaderboardWithCarbonReduction(_ref6) {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var dispatch, carbonReduction, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch = _ref6.dispatch;\n              _context3.prev = 1;\n              console.log('开始同步排名系统与减碳总量...');\n\n              // 1. 先获取最新的用户减碳总量\n              _context3.next = 5;\n              return dispatch('updateUserCarbonReduction');\n            case 5:\n              carbonReduction = _context3.sent;\n              console.log('获取到最新减碳总量:', carbonReduction);\n\n              // 2. 调用排名更新接口，确保使用最新的减碳总量\n              _context3.next = 9;\n              return getAPI().post('/leaderboard/update');\n            case 9:\n              response = _context3.sent;\n              console.log('排名同步完成:', response.data);\n              return _context3.abrupt(\"return\", true);\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.error('同步排名系统失败:', _context3.t0);\n              return _context3.abrupt(\"return\", false);\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 14]]);\n      }))();\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.user;\n    },\n    currentUserCarbonReduction: function currentUserCarbonReduction(state) {\n      return state.userCarbonReduction;\n    }\n  },\n  modules: {\n    message: message\n  }\n});","map":{"version":3,"names":["createStore","getAPI","message","state","user","pet","name","level","health","achievements","leaderboard","userCarbonReduction","mutations","setUser","updatePet","setAchievements","setLeaderboard","setUserCarbonReduction","amount","actions","login","_ref","commit","fetchAchievements","_ref2","fetchLeaderboard","_ref3","reduction","fetchUserCarbonReduction","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","sent","data","carbon_reduction","undefined","t0","console","error","stop","updateUserCarbonReduction","_ref5","_callee2","timestamp","_callee2$","_context2","Date","getTime","concat","log","abrupt","syncLeaderboardWithCarbonReduction","_ref6","_callee3","dispatch","carbonReduction","_callee3$","_context3","post","getters","isLoggedIn","currentUserCarbonReduction","modules"],"sources":["D:/EcoPaw/carbonfootprint_本地版/src/store/index.js"],"sourcesContent":["// src/store/index.js\r\nimport { createStore } from 'vuex';\r\nimport { getAPI } from '@/config/api';\r\nimport message from './modules/message';\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    pet: {\r\n      name: '小绿',\r\n      level: 1,\r\n      health: '健康'\r\n    },\r\n    achievements: [],\r\n    leaderboard: [],\r\n    userCarbonReduction: 0\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    updatePet(state, pet) {\r\n      state.pet = pet;\r\n    },\r\n    setAchievements(state, achievements) {\r\n      state.achievements = achievements;\r\n    },\r\n    setLeaderboard(state, leaderboard) {\r\n      state.leaderboard = leaderboard;\r\n    },\r\n    setUserCarbonReduction(state, amount) {\r\n      state.userCarbonReduction = amount;\r\n    }\r\n  },\r\n  actions: {\r\n    login({ commit }, user) {\r\n      // 模拟登录\r\n      commit('setUser', user);\r\n    },\r\n    fetchAchievements({ commit }) {\r\n      // 模拟获取成就\r\n      const achievements = ['绿色饮食达人', '低碳通勤者'];\r\n      commit('setAchievements', achievements);\r\n    },\r\n    fetchLeaderboard({ commit }) {\r\n      // 模拟获取排行榜\r\n      const leaderboard = [\r\n        { name: '用户A', reduction: 5.2 },\r\n        { name: '用户B', reduction: 4.8 }\r\n      ];\r\n      commit('setLeaderboard', leaderboard);\r\n    },\r\n    async fetchUserCarbonReduction({ commit }) {\r\n      try {\r\n        const response = await getAPI().get('/achievement/carbon-reduction');\r\n        if (response.data && response.data.carbon_reduction !== undefined) {\r\n          commit('setUserCarbonReduction', response.data.carbon_reduction);\r\n        }\r\n      } catch (error) {\r\n        console.error('获取用户减碳总量失败:', error);\r\n      }\r\n    },\r\n    \r\n    // 更新用户减碳总量，确保不从缓存获取数据\r\n    async updateUserCarbonReduction({ commit }) {\r\n      try {\r\n        // 为了防止缓存，添加随机参数\r\n        const timestamp = new Date().getTime();\r\n        const response = await getAPI().get(`/achievement/carbon-reduction?_t=${timestamp}`);\r\n        \r\n        if (response.data && response.data.carbon_reduction !== undefined) {\r\n          commit('setUserCarbonReduction', response.data.carbon_reduction);\r\n          console.log('已更新用户减碳总量:', response.data.carbon_reduction);\r\n          return response.data.carbon_reduction;\r\n        }\r\n        return 0;\r\n      } catch (error) {\r\n        console.error('更新用户减碳总量失败:', error);\r\n        return 0;\r\n      }\r\n    },\r\n    \r\n    // 同步排名系统与用户减碳总量\r\n    async syncLeaderboardWithCarbonReduction({ dispatch }) {\r\n      try {\r\n        console.log('开始同步排名系统与减碳总量...');\r\n        \r\n        // 1. 先获取最新的用户减碳总量\r\n        const carbonReduction = await dispatch('updateUserCarbonReduction');\r\n        console.log('获取到最新减碳总量:', carbonReduction);\r\n        \r\n        // 2. 调用排名更新接口，确保使用最新的减碳总量\r\n        const response = await getAPI().post('/leaderboard/update');\r\n        console.log('排名同步完成:', response.data);\r\n        \r\n        return true;\r\n      } catch (error) {\r\n        console.error('同步排名系统失败:', error);\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    isLoggedIn(state) {\r\n      return !!state.user;\r\n    },\r\n    currentUserCarbonReduction(state) {\r\n      return state.userCarbonReduction;\r\n    }\r\n  },\r\n  modules: {\r\n    message\r\n  }\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}