{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, normalizeStyle as _normalizeStyle } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"leaderboard-page\"\n};\nvar _hoisted_2 = {\n  \"class\": \"tabs\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_4 = {\n  \"class\": \"user-rank-card\"\n};\nvar _hoisted_5 = {\n  \"class\": \"user-rank-header\"\n};\nvar _hoisted_6 = {\n  \"class\": \"user-avatar\"\n};\nvar _hoisted_7 = {\n  key: 0\n};\nvar _hoisted_8 = {\n  key: 1\n};\nvar _hoisted_9 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_10 = {\n  \"class\": \"user-status\"\n};\nvar _hoisted_11 = {\n  key: 0,\n  \"class\": \"user-badges\"\n};\nvar _hoisted_12 = {\n  key: 0,\n  \"class\": \"badge top-badge\",\n  title: \"排名前三\"\n};\nvar _hoisted_13 = {\n  key: 1,\n  \"class\": \"badge century-badge\",\n  title: \"减排量超过100kg\"\n};\nvar _hoisted_14 = {\n  key: 2,\n  \"class\": \"badge progress-badge\",\n  title: \"宠物等级达到10级\"\n};\nvar _hoisted_15 = {\n  key: 3,\n  \"class\": \"badge newcomer-badge\",\n  title: \"新用户\"\n};\nvar _hoisted_16 = {\n  key: 1,\n  \"class\": \"rank-badge loading-rank\"\n};\nvar _hoisted_17 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_18 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_19 = {\n  \"class\": \"stat-label\"\n};\nvar _hoisted_20 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_21 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_22 = {\n  key: 1,\n  \"class\": \"fas fa-trophy text-normal\"\n};\nvar _hoisted_23 = {\n  \"class\": \"stat-label\"\n};\nvar _hoisted_24 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_25 = {\n  \"class\": \"stat-value achievement\"\n};\nvar _hoisted_26 = {\n  \"class\": \"percentage\"\n};\nvar _hoisted_27 = {\n  \"class\": \"leaderboard-controls\"\n};\nvar _hoisted_28 = {\n  \"class\": \"update-section\"\n};\nvar _hoisted_29 = [\"disabled\"];\nvar _hoisted_30 = {\n  \"class\": \"filter-section\"\n};\nvar _hoisted_31 = {\n  \"class\": \"leaderboard-container\"\n};\nvar _hoisted_32 = {\n  \"class\": \"leaderboard-table\"\n};\nvar _hoisted_33 = {\n  \"class\": \"rank-cell\"\n};\nvar _hoisted_34 = {\n  key: 0\n};\nvar _hoisted_35 = {\n  \"class\": \"user-info-row\"\n};\nvar _hoisted_36 = {\n  key: 0,\n  \"class\": \"current-user-tag\"\n};\nvar _hoisted_37 = {\n  key: 0,\n  \"class\": \"no-data\"\n};\nvar _hoisted_38 = {\n  key: 1,\n  \"class\": \"pagination\"\n};\nvar _hoisted_39 = [\"disabled\"];\nvar _hoisted_40 = {\n  \"class\": \"page-info\"\n};\nvar _hoisted_41 = [\"disabled\"];\nvar _hoisted_42 = {\n  key: 2,\n  \"class\": \"total-entries\"\n};\nvar _hoisted_43 = {\n  \"class\": \"leaderboard-tips\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[29] || (_cache[29] = _createElementVNode(\"h2\", {\n    \"class\": \"main-title\"\n  }, \"排行榜\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    \"class\": _normalizeClass({\n      active: $data.activeTab === 'carbon'\n    }),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.switchTab('carbon');\n    })\n  }, \" 碳减排排行 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    \"class\": _normalizeClass({\n      active: $data.activeTab === 'pet'\n    }),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.switchTab('pet');\n    })\n  }, \" 宠物等级排行 \", 2 /* CLASS */)]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 用户自己的排名信息卡片，更美观的展示 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [$data.username ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($options.getInitials($data.username)), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _cache[8] || (_cache[8] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-user\"\n  }, null, -1 /* HOISTED */)])))]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h3\", null, _toDisplayString($data.username || '未能获取用户名'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.activeTab === 'carbon' ? '您当前的碳减排状态' : '您当前的宠物状态'), 1 /* TEXT */), $data.userRank ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [$data.userRank.rank <= 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-crown\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.activeTab === 'carbon' && $data.userRank.carbon_reduction >= 100 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-medal\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.activeTab === 'pet' && $data.userRank.pet_level >= 10 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _cache[11] || (_cache[11] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-award\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.isNewUser ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, _cache[12] || (_cache[12] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-seedling\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), $data.userRank ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    \"class\": _normalizeClass([\"rank-badge\", $options.getRankColorClass($data.userRank.rank)])\n  }, \" #\" + _toDisplayString($data.userRank.rank), 3 /* TEXT, CLASS */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, \"#\" + _toDisplayString($data.currentUserRank || '?'), 1 /* TEXT */)]))]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"stat-value\", {\n      'carbon-value': $data.activeTab === 'carbon'\n    }])\n  }, [$data.activeTab === 'carbon' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createTextVNode(_toDisplayString($data.userRank ? Number($data.userRank.carbon_reduction).toFixed(1) : $data.currentUserCarbonReduction || '加载中...'), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($data.userRank ? \"Lv.\".concat($data.userRank.pet_level) : $data.currentUserPetLevel || '加载中...'), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_19, _toDisplayString($data.activeTab === 'carbon' ? '减排量 (kg CO₂)' : '宠物等级'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [$data.userRank ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 0,\n    \"class\": _normalizeClass([\"fas fa-trophy\", $options.getRankIconClass($data.userRank.rank)])\n  }, null, 2 /* CLASS */)) : (_openBlock(), _createElementBlock(\"i\", _hoisted_22))]), _createElementVNode(\"div\", _hoisted_23, _toDisplayString($data.userRank ? $options.getRankDescription($data.userRank.rank) : '活跃用户'), 1 /* TEXT */)]), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n    \"class\": \"stat-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", _hoisted_26, _toDisplayString($data.userRank ? $options.getPercentile($data.userRank.rank) : '81') + \"%\", 1 /* TEXT */)]), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"击败了其他用户\", -1 /* HOISTED */))])])]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.updateLeaderboard && $options.updateLeaderboard.apply($options, arguments);\n    }),\n    \"class\": \"update-btn\",\n    disabled: $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($data.loading ? '更新中...' : '更新排名'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_29)]), _createElementVNode(\"div\", _hoisted_30, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.limit = $event;\n    }),\n    onChange: _cache[4] || (_cache[4] = function () {\n      return $options.loadLeaderboard && $options.loadLeaderboard.apply($options, arguments);\n    }),\n    \"class\": \"filter-select\"\n  }, _cache[15] || (_cache[15] = [_createElementVNode(\"option\", {\n    value: 10\n  }, \"显示10名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 20\n  }, \"显示20名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 50\n  }, \"显示50名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 100\n  }, \"显示100名\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.limit]])])]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"th\", {\n    \"class\": \"rank-cell\"\n  }, \"排名\", -1 /* HOISTED */)), _cache[17] || (_cache[17] = _createElementVNode(\"th\", null, \"用户\", -1 /* HOISTED */)), _createElementVNode(\"th\", null, _toDisplayString($data.activeTab === 'carbon' ? '减排量 (kg CO₂)' : '宠物等级'), 1 /* TEXT */)])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedLeaderboard, function (entry, index) {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      \"class\": _normalizeClass({\n        'current-user': $options.isCurrentUser(entry.user_id)\n      }),\n      style: _normalizeStyle({\n        '--row-index': index\n      })\n    }, [_createElementVNode(\"td\", _hoisted_33, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"rank-number\", $options.getRankClass(entry.rank)])\n    }, [entry.rank <= 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_34, _toDisplayString(entry.rank), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(entry.rank), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))], 2 /* CLASS */)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"user-avatar-small\", {\n        'current-user': $options.isCurrentUser(entry.user_id)\n      }])\n    }, _toDisplayString($options.getInitials(entry.username)), 3 /* TEXT, CLASS */), _createElementVNode(\"span\", null, _toDisplayString(entry.username), 1 /* TEXT */), $options.isCurrentUser(entry.user_id) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_36, \"当前用户\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"td\", null, [$data.activeTab === 'carbon' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(Number(entry.carbon_reduction).toFixed(1)), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(\" Lv.\" + _toDisplayString(entry.pet_level) + \" (\" + _toDisplayString(entry.experience) + \"经验) \", 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])], 6 /* CLASS, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])]), $data.leaderboard.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, \" 暂无排行数据 \")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 分页控件 \"), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function ($event) {\n      return $options.changePage($data.currentPage - 1);\n    }),\n    disabled: $data.currentPage === 1,\n    \"class\": \"pagination-btn\"\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-left\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_39), _createElementVNode(\"div\", _hoisted_40, \" 第 \" + _toDisplayString($data.currentPage) + \" 页 / 共 \" + _toDisplayString($options.totalPages) + \" 页 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = function ($event) {\n      return $options.changePage($data.currentPage + 1);\n    }),\n    disabled: $data.currentPage === $options.totalPages,\n    \"class\": \"pagination-btn\"\n  }, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-right\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_41)])) : _createCommentVNode(\"v-if\", true), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_42, \" 展示第 \" + _toDisplayString(($data.currentPage - 1) * $data.pageSize + 1) + \" - \" + _toDisplayString(Math.min($data.currentPage * $data.pageSize, $data.leaderboard.length)) + \" 条， 共 \" + _toDisplayString($data.leaderboard.length) + \" 条记录 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_43, [_cache[28] || (_cache[28] = _createElementVNode(\"h3\", null, \"如何提高排名?\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [$data.activeTab === 'carbon' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_cache[20] || (_cache[20] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-walking\"\n  }), _createTextVNode(\" 多步行减少碳排放\")], -1 /* HOISTED */)), _cache[21] || (_cache[21] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-calculator\"\n  }), _createTextVNode(\" 通过碳排放计算器记录您的低碳行为\")], -1 /* HOISTED */)), _cache[22] || (_cache[22] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-paw\"\n  }), _createTextVNode(\" 喂养并升级您的虚拟宠物\")], -1 /* HOISTED */)), _cache[23] || (_cache[23] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-award\"\n  }), _createTextVNode(\" 完成成就任务获得额外奖励\")], -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_cache[24] || (_cache[24] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-dumbbell\"\n  }), _createTextVNode(\" 定期训练您的宠物\")], -1 /* HOISTED */)), _cache[25] || (_cache[25] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-coins\"\n  }), _createTextVNode(\" 积累足够的金币进行升级\")], -1 /* HOISTED */)), _cache[26] || (_cache[26] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-heart\"\n  }), _createTextVNode(\" 保持宠物健康状态\")], -1 /* HOISTED */)), _cache[27] || (_cache[27] = _createElementVNode(\"li\", null, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-star\"\n  }), _createTextVNode(\" 完成每日任务获得经验值\")], -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["key","title","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_normalizeClass","active","$data","activeTab","onClick","_cache","$event","$options","switchTab","errorMessage","_hoisted_3","_createTextVNode","_toDisplayString","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","username","_hoisted_7","getInitials","_hoisted_8","_hoisted_9","_hoisted_10","userRank","_hoisted_11","rank","_hoisted_12","carbon_reduction","_hoisted_13","pet_level","_hoisted_14","isNewUser","_hoisted_15","getRankColorClass","_hoisted_16","currentUserRank","_hoisted_17","_hoisted_18","_Fragment","Number","toFixed","currentUserCarbonReduction","concat","currentUserPetLevel","_hoisted_19","_hoisted_20","_hoisted_21","getRankIconClass","_hoisted_22","_hoisted_23","getRankDescription","_hoisted_24","_hoisted_25","_hoisted_26","getPercentile","_hoisted_27","_hoisted_28","updateLeaderboard","apply","arguments","disabled","loading","_hoisted_29","_hoisted_30","limit","onChange","loadLeaderboard","value","_hoisted_31","_hoisted_32","_renderList","displayedLeaderboard","entry","index","isCurrentUser","user_id","style","_normalizeStyle","_hoisted_33","getRankClass","_hoisted_34","_hoisted_35","_hoisted_36","experience","leaderboard","length","_hoisted_37","_hoisted_38","changePage","currentPage","_hoisted_39","_hoisted_40","totalPages","_hoisted_41","_hoisted_42","pageSize","Math","min","_hoisted_43"],"sources":["C:\\Users\\ASUS\\Desktop\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"leaderboard-page\">\r\n    <h2 class=\"main-title\">排行榜</h2>\r\n    \r\n    <div class=\"tabs\">\r\n      <button \r\n        :class=\"{ active: activeTab === 'carbon' }\" \r\n        @click=\"switchTab('carbon')\"\r\n      >\r\n        碳减排排行\r\n      </button>\r\n      <button \r\n        :class=\"{ active: activeTab === 'pet' }\" \r\n        @click=\"switchTab('pet')\"\r\n      >\r\n        宠物等级排行\r\n      </button>\r\n    </div>\r\n    \r\n    <div v-if=\"errorMessage\" class=\"error-message\">\r\n      <i class=\"fas fa-exclamation-circle\"></i>\r\n      {{ errorMessage }}\r\n    </div>\r\n    \r\n    <!-- 用户自己的排名信息卡片，更美观的展示 -->\r\n    <div class=\"user-rank-card\">\r\n      <div class=\"user-rank-header\">\r\n        <div class=\"user-avatar\">\r\n          <span v-if=\"username\">{{ getInitials(username) }}</span>\r\n          <span v-else><i class=\"fas fa-user\"></i></span>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <h3>{{ username || '未能获取用户名' }}</h3>\r\n          <div class=\"user-status\">\r\n            {{ activeTab === 'carbon' ? '您当前的碳减排状态' : '您当前的宠物状态' }}\r\n          </div>\r\n          <div class=\"user-badges\" v-if=\"userRank\">\r\n            <span v-if=\"userRank.rank <= 3\" class=\"badge top-badge\" title=\"排名前三\">\r\n              <i class=\"fas fa-crown\"></i>\r\n            </span>\r\n            <span v-if=\"activeTab === 'carbon' && userRank.carbon_reduction >= 100\" class=\"badge century-badge\" title=\"减排量超过100kg\">\r\n              <i class=\"fas fa-medal\"></i>\r\n            </span>\r\n            <span v-if=\"activeTab === 'pet' && userRank.pet_level >= 10\" class=\"badge progress-badge\" title=\"宠物等级达到10级\">\r\n              <i class=\"fas fa-award\"></i>\r\n            </span>\r\n            <span v-if=\"isNewUser\" class=\"badge newcomer-badge\" title=\"新用户\">\r\n              <i class=\"fas fa-seedling\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"userRank\" class=\"rank-badge\" :class=\"getRankColorClass(userRank.rank)\">\r\n          #{{ userRank.rank }}\r\n        </div>\r\n        <div v-else class=\"rank-badge loading-rank\">\r\n          <span>#{{ currentUserRank || '?' }}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"user-stats\">\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\" :class=\"{ 'carbon-value': activeTab === 'carbon' }\">\r\n            <template v-if=\"activeTab === 'carbon'\">\r\n              {{ userRank ? Number(userRank.carbon_reduction).toFixed(1) : (currentUserCarbonReduction || '加载中...') }}\r\n            </template>\r\n            <template v-else>\r\n              {{ userRank ? `Lv.${userRank.pet_level}` : (currentUserPetLevel || '加载中...') }}\r\n            </template>\r\n          </div>\r\n          <div class=\"stat-label\">\r\n            {{ activeTab === 'carbon' ? '减排量 (kg CO₂)' : '宠物等级' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">\r\n            <i v-if=\"userRank\" class=\"fas fa-trophy\" :class=\"getRankIconClass(userRank.rank)\"></i>\r\n            <i v-else class=\"fas fa-trophy text-normal\"></i>\r\n          </div>\r\n          <div class=\"stat-label\">{{ userRank ? getRankDescription(userRank.rank) : '活跃用户' }}</div>\r\n        </div>\r\n        \r\n        <div class=\"stat-divider\"></div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value achievement\">\r\n            <span class=\"percentage\">{{ userRank ? getPercentile(userRank.rank) : '81' }}%</span>\r\n          </div>\r\n          <div class=\"stat-label\">击败了其他用户</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"leaderboard-controls\">\r\n      <div class=\"update-section\">\r\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\r\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\r\n          {{ loading ? '更新中...' : '更新排名' }}\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"filter-section\">\r\n        <select v-model=\"limit\" @change=\"loadLeaderboard\" class=\"filter-select\">\r\n          <option :value=\"10\">显示10名</option>\r\n          <option :value=\"20\">显示20名</option>\r\n          <option :value=\"50\">显示50名</option>\r\n          <option :value=\"100\">显示100名</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"leaderboard-container\">\r\n      <div class=\"leaderboard-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th class=\"rank-cell\">排名</th>\r\n              <th>用户</th>\r\n              <th>{{ activeTab === 'carbon' ? '减排量 (kg CO₂)' : '宠物等级' }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \r\n                :class=\"{ 'current-user': isCurrentUser(entry.user_id) }\"\r\n                :style=\"{ '--row-index': index }\">\r\n              <td class=\"rank-cell\">\r\n                <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">\r\n                  <template v-if=\"entry.rank <= 3\">\r\n                    <span>{{ entry.rank }}</span>\r\n                  </template>\r\n                  <template v-else>\r\n                    {{ entry.rank }}\r\n                  </template>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <div class=\"user-info-row\">\r\n                  <div class=\"user-avatar-small\" :class=\"{ 'current-user': isCurrentUser(entry.user_id) }\">\r\n                    {{ getInitials(entry.username) }}\r\n                  </div>\r\n                  <span>{{ entry.username }}</span>\r\n                  <span v-if=\"isCurrentUser(entry.user_id)\" class=\"current-user-tag\">当前用户</span>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <template v-if=\"activeTab === 'carbon'\">\r\n                  {{ Number(entry.carbon_reduction).toFixed(1) }}\r\n                </template>\r\n                <template v-else>\r\n                  Lv.{{ entry.pet_level }} ({{ entry.experience }}经验)\r\n                </template>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n      <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\r\n        暂无排行数据\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 分页控件 -->\r\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\r\n      <button \r\n        @click=\"changePage(currentPage - 1)\" \r\n        :disabled=\"currentPage === 1\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        <i class=\"fas fa-chevron-left\"></i>\r\n      </button>\r\n      \r\n      <div class=\"page-info\">\r\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\r\n      </div>\r\n      \r\n      <button \r\n        @click=\"changePage(currentPage + 1)\" \r\n        :disabled=\"currentPage === totalPages\"\r\n        class=\"pagination-btn\"\r\n      >\r\n        <i class=\"fas fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\r\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\r\n      共 {{ leaderboard.length }} 条记录\r\n    </div>\r\n    \r\n    <div class=\"leaderboard-tips\">\r\n      <h3>如何提高排名?</h3>\r\n      <ul>\r\n        <template v-if=\"activeTab === 'carbon'\">\r\n          <li><i class=\"fas fa-walking\"></i> 多步行减少碳排放</li>\r\n          <li><i class=\"fas fa-calculator\"></i> 通过碳排放计算器记录您的低碳行为</li>\r\n          <li><i class=\"fas fa-paw\"></i> 喂养并升级您的虚拟宠物</li>\r\n          <li><i class=\"fas fa-award\"></i> 完成成就任务获得额外奖励</li>\r\n        </template>\r\n        <template v-else>\r\n          <li><i class=\"fas fa-dumbbell\"></i> 定期训练您的宠物</li>\r\n          <li><i class=\"fas fa-coins\"></i> 积累足够的金币进行升级</li>\r\n          <li><i class=\"fas fa-heart\"></i> 保持宠物健康状态</li>\r\n          <li><i class=\"fas fa-star\"></i> 完成每日任务获得经验值</li>\r\n        </template>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\r\n\r\n// 创建API实例\r\nconst api = axios.create(axiosConfig);\r\n\r\n// 添加请求拦截器\r\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\r\n\r\n// 添加响应拦截器\r\napi.interceptors.response.use(\r\n  responseInterceptor.success, \r\n  responseInterceptor.error\r\n);\r\n\r\n// 获取API基础URL\r\nconst getBaseUrl = () => {\r\n  const host = window.location.hostname;\r\n  const port = '5000';\r\n  const protocol = window.location.protocol;\r\n  \r\n  if (host === 'localhost' || host === '127.0.0.1') {\r\n    return `http://localhost:${port}/api`;\r\n  } else {\r\n    return `${protocol}//${host}:${port}/api`;\r\n  }\r\n};\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeTab: 'carbon',\r\n      leaderboard: [],\r\n      userRank: null,\r\n      username: '',\r\n      limit: 100,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      loading: false,\r\n      errorMessage: '',\r\n      apiBaseUrl: getBaseUrl(),\r\n      totalUserCount: 200, // 估计的用户总数，可以从后端获取\r\n      isNewUser: false,\r\n      registrationDate: null,\r\n      currentUserRank: null,\r\n      currentUserCarbonReduction: null,\r\n      currentUserPetLevel: null\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.leaderboard.length / this.pageSize);\r\n    },\r\n    displayedLeaderboard() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = start + this.pageSize;\r\n      return this.leaderboard.slice(start, end);\r\n    }\r\n  },\r\n  async created() {\r\n    try {\r\n      console.log('API基础URL:', this.apiBaseUrl);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n      \r\n      // 获取用户信息\r\n      const userResponse = await axios.get(`${this.apiBaseUrl}/auth/user`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      if (userResponse.data && userResponse.data.username) {\r\n        this.username = userResponse.data.username;\r\n        console.log('成功获取用户信息:', this.username);\r\n      } else {\r\n        console.error('未能获取到用户名:', userResponse.data);\r\n        this.username = localStorage.getItem('username') || '';\r\n      }\r\n\r\n      if (userResponse.data.created_at) {\r\n        this.registrationDate = new Date(userResponse.data.created_at);\r\n        const thirtyDaysAgo = new Date();\r\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\r\n        this.isNewUser = this.registrationDate > thirtyDaysAgo;\r\n      }\r\n      \r\n      // 尝试从URL参数获取排名信息\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const rankParam = urlParams.get('rank');\r\n      const reductionParam = urlParams.get('reduction');\r\n      \r\n      if (rankParam) {\r\n        this.currentUserRank = rankParam;\r\n      }\r\n      \r\n      if (reductionParam) {\r\n        this.currentUserCarbonReduction = reductionParam;\r\n      }\r\n      \r\n      // 加载排行榜数据\r\n      await this.loadLeaderboard();\r\n\r\n      // 如果排行榜加载成功但还没有用户名，尝试从排行榜数据中获取\r\n      if (!this.username && this.userRank) {\r\n        this.username = this.userRank.username;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading user data:', error);\r\n      // 如果API调用失败，尝试从localStorage获取用户名\r\n      this.username = localStorage.getItem('username') || '';\r\n      this.handleError(error, '加载用户数据失败');\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取用户名的首字母作为头像\r\n    getInitials(name) {\r\n      if (!name) return '?';\r\n      \r\n      // 对于双字节字符（如中文），只取第一个字符\r\n      if (name.charCodeAt(0) > 127) {\r\n        return name.charAt(0);\r\n      }\r\n      \r\n      // 对于英文等单字节字符，取首字母\r\n      return name.charAt(0).toUpperCase();\r\n    },\r\n    \r\n    // 获取排名描述\r\n    getRankDescription(rank) {\r\n      if (rank <= 10) return '优秀减排者';\r\n      if (rank <= 50) return '活跃减排者';\r\n      if (rank <= 100) return '进步减排者';\r\n      return '环保新手';\r\n    },\r\n    \r\n    // 获取百分比\r\n    getPercentile(rank) {\r\n      // 计算击败了多少百分比的用户\r\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\r\n      const percentile = Math.floor(((this.totalUserCount - rank) / this.totalUserCount) * 100);\r\n      return Math.max(0, Math.min(99, percentile));\r\n    },\r\n    \r\n    // 获取排名图标类\r\n    getRankIconClass(rank) {\r\n      if (rank <= 3) return 'text-gold';\r\n      if (rank <= 10) return 'text-silver';\r\n      if (rank <= 50) return 'text-bronze';\r\n      return 'text-normal';\r\n    },\r\n    \r\n    // 获取排名颜色类\r\n    getRankColorClass(rank) {\r\n      if (rank <= 3) return 'rank-top';\r\n      if (rank <= 10) return 'rank-excellent';\r\n      if (rank <= 50) return 'rank-good';\r\n      return 'rank-normal';\r\n    },\r\n    \r\n    // 处理错误的通用方法\r\n    handleError(error, defaultMessage) {\r\n      let errorMsg = defaultMessage;\r\n      \r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        errorMsg = error.response.data.message;\r\n      } else if (error.message) {\r\n        errorMsg = `${defaultMessage}: ${error.message}`;\r\n      }\r\n      \r\n      this.errorMessage = errorMsg;\r\n      console.error(errorMsg, error);\r\n    },\r\n    \r\n    async loadLeaderboard() {\r\n      try {\r\n        this.loading = true;\r\n        this.errorMessage = '';\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.$router.push('/login');\r\n          return;\r\n        }\r\n        \r\n        console.log('正在加载排行榜数据，类型:', this.activeTab, '限制:', this.limit);\r\n        \r\n        const endpoint = this.activeTab === 'carbon' ? 'leaderboard' : 'leaderboard/pet';\r\n        const response = await axios.get(`${this.apiBaseUrl}/${endpoint}?limit=${this.limit}`, {\r\n          headers: { \r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        console.log('排行榜数据:', response.data);\r\n        \r\n        if (response.data && response.data.leaderboard) {\r\n          this.leaderboard = response.data.leaderboard;\r\n          this.userRank = response.data.userRank;\r\n          \r\n          if (!this.userRank || \r\n              (this.activeTab === 'carbon' && this.userRank.carbon_reduction === 0) ||\r\n              (this.activeTab === 'pet' && this.userRank.pet_level === 0)) {\r\n            console.log('用户排名数据为空或数值为0，尝试更新...');\r\n            await this.forceUpdateUserRank();\r\n          }\r\n          \r\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\r\n          \r\n          if (response.data.totalUserCount) {\r\n            this.totalUserCount = response.data.totalUserCount;\r\n            console.log('获取到总用户数:', this.totalUserCount);\r\n          }\r\n          \r\n          this.currentPage = 1;\r\n        } else {\r\n          console.error('返回的数据格式不正确:', response.data);\r\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\r\n          this.leaderboard = [];\r\n        }\r\n      } catch (error) {\r\n        this.handleError(error, '加载排行榜失败');\r\n        this.leaderboard = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 强制更新当前用户排名\r\n    async forceUpdateUserRank() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n        \r\n        console.log('强制更新当前用户排名...');\r\n        \r\n        // 调用更新接口\r\n        const response = await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\r\n          headers: { \r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json' \r\n          }\r\n        });\r\n        \r\n        console.log('排名更新响应:', response.data);\r\n        \r\n        // 获取最新的用户排名\r\n        const userRankResponse = await axios.get(`${this.apiBaseUrl}/leaderboard/user`, {\r\n          headers: { \r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (userRankResponse.data) {\r\n          console.log('更新后的用户排名:', userRankResponse.data);\r\n          this.userRank = userRankResponse.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('强制更新用户排名失败:', error);\r\n      }\r\n    },\r\n    \r\n    changePage(pageNumber) {\r\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\r\n        this.currentPage = pageNumber;\r\n      }\r\n    },\r\n    \r\n    async updateLeaderboard() {\r\n      try {\r\n        this.loading = true;\r\n        this.errorMessage = '';\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.$router.push('/login');\r\n          return;\r\n        }\r\n        \r\n        // 直接使用axios\r\n        await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\r\n          headers: { \r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json' \r\n          }\r\n        });\r\n        \r\n        await this.loadLeaderboard();\r\n        this.errorMessage = '';\r\n      } catch (error) {\r\n        this.handleError(error, '更新排行榜失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    isCurrentUser(userId) {\r\n      return this.userRank && this.userRank.user_id === userId;\r\n    },\r\n    \r\n    getRankClass(rank) {\r\n      if (rank === 1) return 'rank-1';\r\n      if (rank === 2) return 'rank-2';\r\n      if (rank === 3) return 'rank-3';\r\n      return '';\r\n    },\r\n    \r\n    switchTab(tab) {\r\n      this.activeTab = tab;\r\n      this.loadLeaderboard();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.leaderboard-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.main-title {\r\n  text-align: center;\r\n  color: #2196F3;\r\n  margin-bottom: 20px;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.user-rank-card {\r\n  background: linear-gradient(135deg, #bbdefb 0%, #e3f2fd 100%);\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  margin-bottom: 25px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  border: 1px solid rgba(0,0,0,0.05);\r\n  animation: slideInFromTop 0.8s ease-out;\r\n  width: 100%;\r\n  max-width: 800px;\r\n}\r\n\r\n@keyframes slideInFromTop {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(-30px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.user-rank-header {\r\n  padding: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0,0,0,0.05);\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.user-avatar {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n  margin-right: 20px;\r\n  box-shadow: 0 4px 10px rgba(33,150,243,0.4);\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.user-avatar:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 6px 15px rgba(33,150,243,0.6);\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    box-shadow: 0 4px 10px rgba(33,150,243,0.4);\r\n  }\r\n  50% {\r\n    box-shadow: 0 4px 20px rgba(33,150,243,0.6);\r\n  }\r\n  100% {\r\n    box-shadow: 0 4px 10px rgba(33,150,243,0.4);\r\n  }\r\n}\r\n\r\n.badge {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  font-size: 0.8rem;\r\n  color: white;\r\n  cursor: help;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  animation: badgePop 0.5s ease-out;\r\n}\r\n\r\n.badge:hover {\r\n  transform: translateY(-2px) rotate(10deg);\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.3);\r\n}\r\n\r\n@keyframes badgePop {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  70% {\r\n    transform: scale(1.2);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n.rank-1, .rank-2, .rank-3 {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  animation: rankPulse 1.5s infinite alternate;\r\n}\r\n\r\n@keyframes rankPulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n.tip-card {\r\n  display: flex;\r\n  background-color: #F6F8FA;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  animation: cardAppear 0.5s ease-out;\r\n  animation-fill-mode: both;\r\n  animation-delay: calc(var(--index, 0) * 0.1s);\r\n}\r\n\r\n@keyframes cardAppear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n}\r\n\r\n.user-info h3 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 1.5rem;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n\r\n.user-status {\r\n  color: #555;\r\n  font-size: 0.95rem;\r\n  margin-bottom: 6px;\r\n}\r\n\r\n.user-badges {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.rank-badge {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  padding: 12px 20px;\r\n  border-radius: 10px;\r\n  color: white;\r\n  box-shadow: 0 4px 10px rgba(0,0,0,0.15);\r\n}\r\n\r\n.rank-top {\r\n  background-color: #F57C00;\r\n}\r\n\r\n.rank-excellent {\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.rank-good {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.rank-normal {\r\n  background-color: #9E9E9E;\r\n}\r\n\r\n.user-stats {\r\n  display: flex;\r\n  padding: 20px;\r\n  background-color: rgba(255,255,255,0.7);\r\n  justify-content: space-around;\r\n}\r\n\r\n.stat-item {\r\n  flex: 1;\r\n  text-align: center;\r\n  padding: 15px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.7rem;\r\n  font-weight: bold;\r\n  color: #2196F3;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.carbon-value {\r\n  font-size: 2.2rem;\r\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  animation: floatAnimation 4s ease-in-out infinite;\r\n  display: inline-block;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.9rem;\r\n  color: #555;\r\n  font-weight: 500;\r\n}\r\n\r\n.stat-divider {\r\n  width: 1px;\r\n  background-color: rgba(0,0,0,0.1);\r\n  margin: 10px 5px;\r\n}\r\n\r\n.text-gold {\r\n  color: #F57C00;\r\n}\r\n\r\n.text-silver {\r\n  color: #607D8B;\r\n}\r\n\r\n.text-bronze {\r\n  color: #795548;\r\n}\r\n\r\n.leaderboard-controls {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 25px;\r\n  background-color: white;\r\n  padding: 15px 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.05);\r\n}\r\n\r\n.error-message {\r\n  background-color: #ffebee;\r\n  color: #d32f2f;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.error-message i {\r\n  font-size: 20px;\r\n}\r\n\r\n.update-btn {\r\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 25px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  transition: all 0.3s;\r\n  font-weight: 500;\r\n  box-shadow: 0 3px 8px rgba(33,150,243,0.3);\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.update-btn:hover:not(:disabled) {\r\n  background: linear-gradient(135deg, #1976D2, #0288D1);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 5px 12px rgba(33,150,243,0.4);\r\n}\r\n\r\n.filter-select {\r\n  padding: 10px 15px;\r\n  border-radius: 25px;\r\n  border: 1px solid #e0e0e0;\r\n  background-color: white;\r\n  font-size: 0.95rem;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.05);\r\n  cursor: pointer;\r\n  min-width: 130px;\r\n  color: #424242;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.filter-select:hover {\r\n  border-color: #2196F3;\r\n  box-shadow: 0 2px 8px rgba(33,150,243,0.2);\r\n}\r\n\r\n.leaderboard-container {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 16px rgba(0,0,0,0.1);\r\n  margin-bottom: 25px;\r\n  min-height: 300px;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.leaderboard-table {\r\n  width: 100%;\r\n  border-spacing: 0;\r\n  border-collapse: separate;\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.leaderboard-table table {\r\n  width: 100%;\r\n}\r\n\r\n.leaderboard-table th {\r\n  text-align: left;\r\n  padding: 18px 22px;\r\n  color: #424242;\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  background-color: #F6F8FA;\r\n  border-bottom: 1px solid #E6EBF1;\r\n}\r\n\r\n.leaderboard-table td {\r\n  padding: 16px 22px;\r\n  border-bottom: 1px solid #E6EBF1;\r\n  color: #24292F;\r\n  font-size: 1rem;\r\n}\r\n\r\n.user-info-row {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.user-avatar-small {\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #90CAF9, #64B5F6);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  flex-shrink: 0;\r\n  box-shadow: 0 3px 6px rgba(0,0,0,0.1);\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.user-avatar-small:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.user-avatar-small.current-user {\r\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\r\n  box-shadow: 0 3px 8px rgba(33,150,243,0.4);\r\n}\r\n\r\n.current-user-tag {\r\n  display: inline-block;\r\n  font-size: 0.7rem;\r\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\r\n  color: white;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  margin-left: 8px;\r\n  vertical-align: middle;\r\n  font-weight: bold;\r\n  box-shadow: 0 2px 4px rgba(33,150,243,0.3);\r\n}\r\n\r\n.leaderboard-tips {\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.leaderboard-tips h3 {\r\n  color: #1976D2;\r\n  margin-top: 0;\r\n  margin-bottom: 15px;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.leaderboard-tips ul {\r\n  padding-left: 10px;\r\n  margin: 0;\r\n  list-style-type: none;\r\n}\r\n\r\n.leaderboard-tips li {\r\n  margin-bottom: 10px;\r\n  color: #555;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.leaderboard-tips li i {\r\n  color: #2196F3;\r\n  margin-right: 10px;\r\n  width: 20px;\r\n  text-align: center;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 25px 0;\r\n  gap: 15px;\r\n}\r\n\r\n.pagination-btn {\r\n  background-color: white;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  box-shadow: 0 2px 6px rgba(0,0,0,0.1);\r\n  color: #2196F3;\r\n  font-size: 1rem;\r\n}\r\n\r\n.pagination-btn:hover:not(:disabled) {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 10px rgba(33,150,243,0.3);\r\n}\r\n\r\n.page-info {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.total-entries {\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .leaderboard-controls {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .user-rank-header {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n  \r\n  .user-avatar {\r\n    margin-right: 0;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .rank-badge {\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .user-stats {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .stat-divider {\r\n    height: 1px;\r\n    width: 100%;\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .leaderboard-row {\r\n    padding: 10px;\r\n  }\r\n  \r\n  .rank-number {\r\n    width: 25px;\r\n    height: 25px;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .user-column {\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .reduction-column {\r\n    width: 100px;\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n\r\n.achievement {\r\n  position: relative;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.percentage {\r\n  font-weight: bold;\r\n  color: #ff9800;\r\n  text-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n}\r\n\r\n.achievement:after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 110%;\r\n  height: 5px;\r\n  bottom: -4px;\r\n  left: -5%;\r\n  background: linear-gradient(90deg, #ff9800, #ffeb3b);\r\n  border-radius: 3px;\r\n}\r\n\r\n.rank-cell {\r\n  width: 50px;\r\n  font-weight: 600;\r\n}\r\n\r\n.top-rank {\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.rank-1, .rank-2, .rank-3 {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.rank-1 {\r\n  background: linear-gradient(135deg, #FFD700, #FFA500);\r\n}\r\n\r\n.rank-2 {\r\n  background: linear-gradient(135deg, #E0E0E0, #B0B0B0);\r\n}\r\n\r\n.rank-3 {\r\n  background: linear-gradient(135deg, #CD7F32, #8B4513);\r\n}\r\n\r\n.user-column {\r\n  flex: 1;\r\n  padding: 0 10px;\r\n  position: relative;\r\n}\r\n\r\n.update-btn i.fa-spin {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes floatAnimation {\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-8px);\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.leaderboard-table tr {\r\n  transition: background-color 0.15s ease;\r\n  animation: fadeIn 0.5s ease-out;\r\n  animation-fill-mode: both;\r\n  animation-delay: calc(var(--row-index, 0) * 0.1s);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.leaderboard-table tr:hover {\r\n  background-color: #F6F8FA;\r\n}\r\n\r\n.leaderboard-table tr.current-user {\r\n  background-color: rgba(33, 150, 243, 0.08);\r\n}\r\n\r\n.leaderboard-table tr.current-user:hover {\r\n  background-color: rgba(33, 150, 243, 0.12);\r\n}\r\n\r\n.leaderboard-table tr:last-child td {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-data {\r\n  padding: 30px;\r\n  text-align: center;\r\n  color: #999;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.loading-indicator {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px;\r\n  color: #666;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  border-top-color: #2196F3;\r\n  animation: spin 1s ease-in-out infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.update-btn:disabled {\r\n  background: linear-gradient(135deg, #90CAF9, #64B5F6);\r\n  cursor: not-allowed;\r\n  box-shadow: none;\r\n}\r\n\r\n.loading-rank {\r\n  background-color: #9E9E9E;\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n.text-normal {\r\n  color: #9E9E9E;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.tabs button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background: #f0f0f0;\r\n  color: #666;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tabs button.active {\r\n  background: #2196F3;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(33, 150, 243, 0.3);\r\n}\r\n\r\n.tabs button:hover:not(.active) {\r\n  background: #e0e0e0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}