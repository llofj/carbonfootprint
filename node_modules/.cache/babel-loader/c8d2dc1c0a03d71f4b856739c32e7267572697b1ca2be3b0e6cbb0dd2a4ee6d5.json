{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"register-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_3 = [\"disabled\"];\nvar _hoisted_4 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_5 = [\"disabled\"];\nvar _hoisted_6 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_7 = {\n  \"class\": \"password-input\"\n};\nvar _hoisted_8 = [\"type\", \"disabled\"];\nvar _hoisted_9 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_10 = {\n  \"class\": \"password-input\"\n};\nvar _hoisted_11 = [\"type\", \"disabled\"];\nvar _hoisted_12 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_13 = {\n  \"class\": \"captcha-group\"\n};\nvar _hoisted_14 = {\n  \"class\": \"captcha-input\"\n};\nvar _hoisted_15 = [\"disabled\"];\nvar _hoisted_16 = [\"disabled\"];\nvar _hoisted_17 = {\n  key: 0\n};\nvar _hoisted_18 = {\n  key: 1\n};\nvar _hoisted_19 = {\n  key: 0,\n  \"class\": \"error-container\"\n};\nvar _hoisted_20 = {\n  \"class\": \"login-link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[23] || (_cache[23] = _createElementVNode(\"h2\", null, \"注册新用户\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[13] || (_cache[13] = _withModifiers(function () {\n      return $options.handleSubmit && $options.handleSubmit.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    \"for\": \"username\"\n  }, \"用户名:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.username = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[1] || (_cache[1] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    placeholder: \"请输入用户名\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelText, $data.username, void 0, {\n    trim: true\n  }]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    \"for\": \"email\"\n  }, \"邮箱:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.email = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[3] || (_cache[3] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    placeholder: \"请输入邮箱\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelText, $data.email, void 0, {\n    trim: true\n  }]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    \"for\": \"password\"\n  }, \"密码:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.password = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[5] || (_cache[5] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    placeholder: \"请输入密码\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), [[_vModelDynamic, $data.password]]), _createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas\", $data.showPassword ? 'fa-eye-slash' : 'fa-eye']),\n    onClick: _cache[6] || (_cache[6] = function () {\n      return $options.togglePassword && $options.togglePassword.apply($options, arguments);\n    })\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_9, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    \"for\": \"confirmPassword\"\n  }, \"确认密码:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showConfirmPassword ? 'text' : 'password',\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n      return $data.confirmPassword = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[8] || (_cache[8] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    placeholder: \"请再次输入密码\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), [[_vModelDynamic, $data.confirmPassword]]), _createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas\", $data.showConfirmPassword ? 'fa-eye-slash' : 'fa-eye']),\n    onClick: _cache[9] || (_cache[9] = function () {\n      return $options.toggleConfirmPassword && $options.toggleConfirmPassword.apply($options, arguments);\n    })\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_12, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    \"for\": \"captcha\"\n  }, \"验证码:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"captcha\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n      return $data.captchaInput = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[11] || (_cache[11] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    maxlength: \"4\",\n    pattern: \"[0-9]{4}\",\n    placeholder: \"请输入验证码\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_15), [[_vModelText, $data.captchaInput]])]), _createElementVNode(\"div\", {\n    \"class\": \"captcha-code\",\n    onClick: _cache[12] || (_cache[12] = function () {\n      return $options.generateCaptcha && $options.generateCaptcha.apply($options, arguments);\n    }),\n    title: \"当前验证码为随机生成\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.captchaDisplay, function (digit, index) {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      style: _normalizeStyle($options.getRandomStyle())\n    }, _toDisplayString(digit), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isLoading || !$options.isFormValid\n  }, [$data.isLoading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 注册中... \")]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \"注册\"))], 8 /* PROPS */, _hoisted_16), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_cache[20] || (_cache[20] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_20, [_cache[22] || (_cache[22] = _createTextVNode(\" 已有账号? \")), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[21] || (_cache[21] = [_createTextVNode(\"点击登录\")]);\n    }),\n    _: 1 /* STABLE */\n  })])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","$options","handleSubmit","apply","arguments","_hoisted_2","type","id","$event","$data","username","required","disabled","isLoading","onInput","clearError","placeholder","_hoisted_3","trim","_hoisted_4","email","_hoisted_5","_hoisted_6","_hoisted_7","showPassword","password","_hoisted_8","_normalizeClass","onClick","togglePassword","_hoisted_9","_hoisted_10","showConfirmPassword","confirmPassword","_hoisted_11","toggleConfirmPassword","_hoisted_12","_hoisted_13","_hoisted_14","captchaInput","maxlength","pattern","_hoisted_15","generateCaptcha","title","_Fragment","_renderList","captchaDisplay","digit","index","style","_normalizeStyle","getRandomStyle","isFormValid","_hoisted_17","_createTextVNode","_hoisted_18","_hoisted_16","errorMessage","_hoisted_19","_toDisplayString","_createCommentVNode","_hoisted_20","_createVNode","_component_router_link","to","_withCtx","_"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\RegisterForm.vue"],"sourcesContent":["<template>\n  <div class=\"register-form\">\n    <h2>注册新用户</h2>\n    <form @submit.prevent=\"handleSubmit\">\n      <div class=\"form-group\">\n        <label for=\"username\">用户名:</label>\n        <input \n          type=\"text\" \n          id=\"username\" \n          v-model.trim=\"username\" \n          required \n          :disabled=\"isLoading\"\n          @input=\"clearError\"\n          placeholder=\"请输入用户名\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">邮箱:</label>\n        <input \n          type=\"email\" \n          id=\"email\" \n          v-model.trim=\"email\" \n          required \n          :disabled=\"isLoading\"\n          @input=\"clearError\"\n          placeholder=\"请输入邮箱\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">密码:</label>\n        <div class=\"password-input\">\n          <input \n            :type=\"showPassword ? 'text' : 'password'\" \n            id=\"password\" \n            v-model=\"password\" \n            required \n            :disabled=\"isLoading\"\n            @input=\"clearError\"\n            placeholder=\"请输入密码\"\n          />\n          <i \n            class=\"fas\" \n            :class=\"showPassword ? 'fa-eye-slash' : 'fa-eye'\"\n            @click=\"togglePassword\"\n          ></i>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">确认密码:</label>\n        <div class=\"password-input\">\n          <input \n            :type=\"showConfirmPassword ? 'text' : 'password'\" \n            id=\"confirmPassword\" \n            v-model=\"confirmPassword\" \n            required \n            :disabled=\"isLoading\"\n            @input=\"clearError\"\n            placeholder=\"请再次输入密码\"\n          />\n          <i \n            class=\"fas\" \n            :class=\"showConfirmPassword ? 'fa-eye-slash' : 'fa-eye'\"\n            @click=\"toggleConfirmPassword\"\n          ></i>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"captcha\">验证码:</label>\n        <div class=\"captcha-group\">\n          <div class=\"captcha-input\">\n            <input \n              type=\"text\" \n              id=\"captcha\" \n              v-model=\"captchaInput\" \n              required \n              :disabled=\"isLoading\"\n              @input=\"clearError\"\n              maxlength=\"4\"\n              pattern=\"[0-9]{4}\"\n              placeholder=\"请输入验证码\"\n            />\n          </div>\n          <div \n            class=\"captcha-code\" \n            @click=\"generateCaptcha\" \n            title=\"当前验证码为随机生成\"\n          >\n            <span\n              v-for=\"(digit, index) in captchaDisplay\"\n              :key=\"index\"\n              :style=\"getRandomStyle()\"\n            >{{ digit }}</span>\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" :disabled=\"isLoading || !isFormValid\">\n        <span v-if=\"isLoading\">\n          <i class=\"fas fa-spinner fa-spin\"></i> 注册中...\n        </span>\n        <span v-else>注册</span>\n      </button>\n      <div v-if=\"errorMessage\" class=\"error-container\">\n        <i class=\"fas fa-exclamation-circle\"></i>\n        {{ errorMessage }}\n      </div>\n      <div class=\"login-link\">\n        已有账号? <router-link to=\"/login\">点击登录</router-link>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig } from '../config/api';\n\nconst api = axios.create(axiosConfig);\n\nexport default {\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      captchaInput: '',\n      captchaDisplay: '',  // 显示的验证码\n      systemCaptcha: '',   // 系统生成的验证码，用于比对\n      errorMessage: '',\n      isLoading: false,\n      showPassword: false,\n      showConfirmPassword: false,\n      refreshCount: 0\n    };\n  },\n  computed: {\n    isFormValid() {\n      return this.username.trim() && \n             this.email.trim() && \n             this.password && \n             this.password === this.confirmPassword &&\n             this.captchaInput && \n             this.captchaInput.length === 4;\n    }\n  },\n  created() {\n    // 初始化生成随机验证码\n    this.generateCaptcha();\n  },\n  methods: {\n    clearError() {\n      this.errorMessage = '';\n    },\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleConfirmPassword() {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    },\n    // 生成新的随机验证码\n    generateCaptcha() {\n      // 生成四位随机数字 (1000-9999)\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\n      const captchaString = randomNum.toString();\n      \n      // 设置显示验证码和系统验证码\n      this.captchaDisplay = captchaString;\n      this.systemCaptcha = captchaString;\n      this.captchaInput = ''; // 清空用户输入\n      \n      // 如果已经有输入框状态，添加刷新动画\n      const captchaElement = document.querySelector('.captcha-code');\n      if (captchaElement && this.refreshCount > 0) {\n        captchaElement.classList.add('refreshing');\n        setTimeout(() => {\n          captchaElement.classList.remove('refreshing');\n        }, 500);\n      }\n      \n      this.refreshCount++;\n      console.log(`生成新验证码: ${this.systemCaptcha}`);\n    },\n    // 为每个数字生成随机样式，增加视觉干扰\n    getRandomStyle() {\n      const rotation = Math.floor(Math.random() * 10) - 5;\n      const fontSize = 14 + Math.floor(Math.random() * 4);\n      const letterSpacing = Math.floor(Math.random() * 3) - 1;\n      \n      return {\n        transform: `rotate(${rotation}deg)`,\n        fontSize: `${fontSize}px`,\n        letterSpacing: `${letterSpacing}px`,\n        display: 'inline-block',\n        fontWeight: 'bold',\n        margin: '0 2px'\n      };\n    },\n    async handleSubmit() {\n      if (!this.isFormValid) {\n        if (this.password !== this.confirmPassword) {\n          this.errorMessage = '两次输入的密码不一致';\n          return;\n        }\n        return;\n      }\n      \n      // 检查验证码 - 与生成的验证码比对\n      if (this.captchaInput !== this.systemCaptcha) {\n        console.log(`验证码比对失败: 用户输入=\"${this.captchaInput}\", 系统验证码=\"${this.systemCaptcha}\"`);\n        this.errorMessage = '验证码错误，请重新输入';\n        this.captchaInput = '';\n        this.generateCaptcha(); // 生成新验证码\n        return;\n      }\n      \n      console.log(\"验证码校验通过，准备提交注册请求\");\n      \n      this.isLoading = true;\n      this.errorMessage = '';\n      \n      try {\n        const registerData = {\n          username: this.username.trim(),\n          email: this.email.trim(),\n          password: this.password,\n          captcha: \"0000\" // 固定发送\"0000\"给后端，保持兼容\n        };\n        \n        console.log('正在发送注册请求:', {\n          用户名: registerData.username,\n          邮箱: registerData.email,\n          验证码: \"固定发送0000\"\n        });\n        \n        const response = await api.post(API_URLS.register, registerData);\n        \n        console.log('服务器响应:', response.data);\n        \n        if (response.data && response.data.message === '注册成功') {\n          // 注册成功，跳转到登录页\n          this.$router.push('/login?registered=true');\n          return;\n        }\n        \n        // 如果没有成功消息但服务器返回了消息\n        if (response.data && response.data.message) {\n          this.errorMessage = response.data.message;\n          this.generateCaptcha();\n          return;\n        }\n      } catch (error) {\n        console.error('注册过程中发生错误:', error);\n        \n        // 处理API错误响应\n        if (error.response) {\n          const status = error.response.status;\n          const errorData = error.response.data;\n          \n          switch (status) {\n            case 400:\n              this.errorMessage = errorData.message || '注册信息有误，请检查输入';\n              break;\n            case 409:\n              this.errorMessage = '用户名已存在，请选择其他用户名';\n              break;\n            case 500:\n              this.errorMessage = '服务器错误，请稍后重试';\n              break;\n            default:\n              this.errorMessage = errorData?.message || '注册失败，请稍后重试';\n          }\n          this.generateCaptcha();\n        } else {\n          this.errorMessage = '无法连接到服务器，请检查网络连接';\n          this.generateCaptcha();\n        }\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.register-form {\n  width: 100%;\n  max-width: 400px;\n  margin: 2rem auto;\n  padding: 2.5rem;\n  border-radius: 12px;\n  background-color: rgba(255, 255, 255, 0.9);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.register-form:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);\n}\n\n.register-form h2 {\n  text-align: center;\n  color: #2c3e50;\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  font-weight: 600;\n  letter-spacing: 1px;\n  position: relative;\n  padding-bottom: 10px;\n}\n\n.register-form h2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(90deg, #4CA1AF, #2C3E50);\n  border-radius: 3px;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #455a64;\n  font-size: 0.95rem;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.85rem;\n  border: 2px solid #e0e0e0;\n  border-radius: 8px;\n  font-size: 1rem;\n  transition: all 0.3s ease;\n  background-color: rgba(255, 255, 255, 0.8);\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #4CA1AF;\n  box-shadow: 0 0 0 3px rgba(76, 161, 175, 0.2);\n  background-color: #fff;\n}\n\n.form-group input:disabled {\n  background-color: #f5f5f5;\n  cursor: not-allowed;\n}\n\n.password-input {\n  position: relative;\n}\n\n.password-input i {\n  position: absolute;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #78909c;\n  transition: all 0.2s ease;\n}\n\n.password-input i:hover {\n  color: #455a64;\n}\n\n.captcha-group {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.captcha-input {\n  flex: 1;\n}\n\n.captcha-code {\n  padding: 0.75rem;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  font-weight: bold;\n  letter-spacing: 2px;\n  min-width: 80px;\n  text-align: center;\n  border: 2px solid #e0e0e0;\n  color: #2c3e50;\n  user-select: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: linear-gradient(45deg, #f5f5f5 25%, #e8e8e8 25%, #e8e8e8 50%, #f5f5f5 50%, #f5f5f5 75%, #e8e8e8 75%, #e8e8e8);\n  background-size: 8px 8px;\n}\n\n.captcha-code:hover {\n  background-color: #e0e0e0;\n  transform: scale(1.02);\n}\n\n.captcha-code::before {\n  content: '';\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  background: rgba(0, 0, 0, 0.1);\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n}\n\n.captcha-code::after {\n  content: '点击刷新';\n  position: absolute;\n  bottom: -25px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.7rem;\n  color: #78909c;\n  white-space: nowrap;\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.captcha-code:hover::after {\n  opacity: 1;\n}\n\n.refreshing {\n  animation: refresh-animation 0.5s;\n}\n\n@keyframes refresh-animation {\n  0% { transform: rotate(0); opacity: 1; }\n  50% { transform: rotate(10deg); opacity: 0.5; }\n  100% { transform: rotate(0); opacity: 1; }\n}\n\nbutton {\n  width: 100%;\n  padding: 0.85rem;\n  background: linear-gradient(90deg, #4CA1AF, #2C3E50);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 1rem;\n  letter-spacing: 0.5px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nbutton:hover:not(:disabled) {\n  background: linear-gradient(90deg, #3c8997, #1a2c3f);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\n}\n\nbutton:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.error-container {\n  margin-top: 1rem;\n  padding: 0.75rem;\n  background-color: rgba(255, 76, 76, 0.1);\n  border-left: 3px solid #ff4c4c;\n  color: #d32f2f;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  display: flex;\n  align-items: center;\n}\n\n.error-container i {\n  margin-right: 8px;\n  font-size: 1rem;\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 1.5rem;\n  color: #455a64;\n  font-size: 0.95rem;\n}\n\n.login-link a {\n  color: #4CA1AF;\n  text-decoration: none;\n  font-weight: 600;\n  transition: all 0.3s ease;\n}\n\n.login-link a:hover {\n  color: #2C3E50;\n  text-decoration: underline;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.fa-spinner {\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n}\n\n/* 去除number类型输入框的上下箭头 */\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAe;;EAGjB,SAAM;AAAY;iBAJ7B;;EAgBW,SAAM;AAAY;iBAhB7B;;EA4BW,SAAM;AAAY;;EAEhB,SAAM;AAAgB;iBA9BnC;;EA+CW,SAAM;AAAY;;EAEhB,SAAM;AAAgB;kBAjDnC;;EAkEW,SAAM;AAAY;;EAEhB,SAAM;AAAe;;EACnB,SAAM;AAAe;kBArEpC;kBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;EAqG+B,SAAM;;;EAI1B,SAAM;AAAY;;;uBAxG3BC,mBAAA,CA4GM,OA5GNC,UA4GM,G,4BA3GJC,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAyGO;IAzGAC,QAAM,EAAAC,MAAA,SAAAA,MAAA,OAHjBC,cAAA;MAAA,OAG2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAY;IAAA;MACjCP,mBAAA,CAWM,OAXNQ,UAWM,G,4BAVJR,mBAAA,CAAkC;IAA3B,OAAI;EAAU,GAAC,MAAI,sB,gBAC1BA,mBAAA,CAQE;IAPAS,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IARvB,uBAAAR,MAAA,QAAAA,MAAA,gBAAAS,MAAA;MAAA,OASwBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAA;IACtBG,QAAQ,EAAR,EAAQ;IACPC,QAAQ,EAAEH,KAAA,CAAAI,SAAS;IACnBC,OAAK,EAAAf,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;IAClBY,WAAW,EAAC;2CAbtBC,UAAA,I,cASwBR,KAAA,CAAAC,QAAQ,E;IAAdQ,IAAI,EAAZ;EAAuB,E,MAO3BrB,mBAAA,CAWM,OAXNsB,UAWM,G,4BAVJtB,mBAAA,CAA8B;IAAvB,OAAI;EAAO,GAAC,KAAG,sB,gBACtBA,mBAAA,CAQE;IAPAS,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,OAAO;IApBpB,uBAAAR,MAAA,QAAAA,MAAA,gBAAAS,MAAA;MAAA,OAqBwBC,KAAA,CAAAW,KAAK,GAAAZ,MAAA;IAAA;IACnBG,QAAQ,EAAR,EAAQ;IACPC,QAAQ,EAAEH,KAAA,CAAAI,SAAS;IACnBC,OAAK,EAAAf,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;IAClBY,WAAW,EAAC;2CAzBtBK,UAAA,I,cAqBwBZ,KAAA,CAAAW,KAAK,E;IAAXF,IAAI,EAAZ;EAAoB,E,MAOxBrB,mBAAA,CAkBM,OAlBNyB,UAkBM,G,4BAjBJzB,mBAAA,CAAiC;IAA1B,OAAI;EAAU,GAAC,KAAG,sBACzBA,mBAAA,CAeM,OAfN0B,UAeM,G,gBAdJ1B,mBAAA,CAQE;IAPCS,IAAI,EAAEG,KAAA,CAAAe,YAAY;IACnBjB,EAAE,EAAC,UAAU;IAjCzB,uBAAAR,MAAA,QAAAA,MAAA,gBAAAS,MAAA;MAAA,OAkCqBC,KAAA,CAAAgB,QAAQ,GAAAjB,MAAA;IAAA;IACjBG,QAAQ,EAAR,EAAQ;IACPC,QAAQ,EAAEH,KAAA,CAAAI,SAAS;IACnBC,OAAK,EAAAf,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;IAClBY,WAAW,EAAC;2CAtCxBU,UAAA,I,iBAkCqBjB,KAAA,CAAAgB,QAAQ,E,GAMnB5B,mBAAA,CAIK;IAHH,SAzCZ8B,eAAA,EAyCkB,KAAK,EACHlB,KAAA,CAAAe,YAAY;IACnBI,OAAK,EAAA7B,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAA4B,cAAA,IAAA5B,QAAA,CAAA4B,cAAA,CAAA1B,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAc;IAAA;+BAI5BP,mBAAA,CAkBM,OAlBNiC,UAkBM,G,4BAjBJjC,mBAAA,CAA0C;IAAnC,OAAI;EAAiB,GAAC,OAAK,sBAClCA,mBAAA,CAeM,OAfNkC,WAeM,G,gBAdJlC,mBAAA,CAQE;IAPCS,IAAI,EAAEG,KAAA,CAAAuB,mBAAmB;IAC1BzB,EAAE,EAAC,iBAAiB;IApDhC,uBAAAR,MAAA,QAAAA,MAAA,gBAAAS,MAAA;MAAA,OAqDqBC,KAAA,CAAAwB,eAAe,GAAAzB,MAAA;IAAA;IACxBG,QAAQ,EAAR,EAAQ;IACPC,QAAQ,EAAEH,KAAA,CAAAI,SAAS;IACnBC,OAAK,EAAAf,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;IAClBY,WAAW,EAAC;2CAzDxBkB,WAAA,I,iBAqDqBzB,KAAA,CAAAwB,eAAe,E,GAM1BpC,mBAAA,CAIK;IAHH,SA5DZ8B,eAAA,EA4DkB,KAAK,EACHlB,KAAA,CAAAuB,mBAAmB;IAC1BJ,OAAK,EAAA7B,MAAA,QAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAkC,qBAAA,IAAAlC,QAAA,CAAAkC,qBAAA,CAAAhC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAqB;IAAA;+BAInCP,mBAAA,CA4BM,OA5BNuC,WA4BM,G,4BA3BJvC,mBAAA,CAAiC;IAA1B,OAAI;EAAS,GAAC,MAAI,sBACzBA,mBAAA,CAyBM,OAzBNwC,WAyBM,GAxBJxC,mBAAA,CAYM,OAZNyC,WAYM,G,gBAXJzC,mBAAA,CAUE;IATAS,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,SAAS;IAxE1B,uBAAAR,MAAA,SAAAA,MAAA,iBAAAS,MAAA;MAAA,OAyEuBC,KAAA,CAAA8B,YAAY,GAAA/B,MAAA;IAAA;IACrBG,QAAQ,EAAR,EAAQ;IACPC,QAAQ,EAAEH,KAAA,CAAAI,SAAS;IACnBC,OAAK,EAAAf,MAAA,SAAAA,MAAA;MAAA,OAAEE,QAAA,CAAAc,UAAA,IAAAd,QAAA,CAAAc,UAAA,CAAAZ,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAU;IAAA;IAClBoC,SAAS,EAAC,GAAG;IACbC,OAAO,EAAC,UAAU;IAClBzB,WAAW,EAAC;2CA/E1B0B,WAAA,I,cAyEuBjC,KAAA,CAAA8B,YAAY,E,KASzB1C,mBAAA,CAUM;IATJ,SAAM,cAAc;IACnB+B,OAAK,EAAA7B,MAAA,SAAAA,MAAA;MAAA,OAAEE,QAAA,CAAA0C,eAAA,IAAA1C,QAAA,CAAA0C,eAAA,CAAAxC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAe;IAAA;IACvBwC,KAAK,EAAC;yBAENjD,mBAAA,CAImBkD,SAAA,QA3F/BC,WAAA,CAwFuCrC,KAAA,CAAAsC,cAAc,EAxFrD,UAwFsBC,KAAK,EAAEC,KAAK;yBADtBtD,mBAAA,CAImB;MAFhBD,GAAG,EAAEuD,KAAK;MACVC,KAAK,EA1FpBC,eAAA,CA0FsBlD,QAAA,CAAAmD,cAAc;wBACpBJ,KAAK;wCAIfnD,mBAAA,CAKS;IALDS,IAAI,EAAC,QAAQ;IAAEM,QAAQ,EAAEH,KAAA,CAAAI,SAAS,KAAKZ,QAAA,CAAAoD;MACjC5C,KAAA,CAAAI,SAAS,I,cAArBlB,mBAAA,CAEO,QAlGf2D,WAAA,EAAAvD,MAAA,SAAAA,MAAA,QAiGUF,mBAAA,CAAsC;IAAnC,SAAM;EAAwB,4BAjG3C0D,gBAAA,CAiGgD,UACxC,E,qBACA5D,mBAAA,CAAsB,QAnG9B6D,WAAA,EAmGqB,IAAE,G,iBAnGvBC,WAAA,GAqGiBhD,KAAA,CAAAiD,YAAY,I,cAAvB/D,mBAAA,CAGM,OAHNgE,WAGM,G,4BAFJ9D,mBAAA,CAAyC;IAAtC,SAAM;EAA2B,6BAtG5C0D,gBAAA,CAsGiD,GACzC,GAAAK,gBAAA,CAAGnD,KAAA,CAAAiD,YAAY,iB,KAvGvBG,mBAAA,gBAyGMhE,mBAAA,CAEM,OAFNiE,WAEM,G,4BA3GZP,gBAAA,CAyG8B,SAChB,IAAAQ,YAAA,CAA2CC,sBAAA;IAA9BC,EAAE,EAAC;EAAQ;IA1GtC,WAAAC,QAAA,CA0GuC;MAAA,OAAInE,MAAA,SAAAA,MAAA,QA1G3CwD,gBAAA,CA0GuC,MAAI,E;;IA1G3CY,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}