{"ast":null,"code":"import _regeneratorRuntime from \"D:/computer_design/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/computer_design/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { API_URLS, axiosConfig } from '../config/api';\n\n// 创建 axios 实例\nvar api = axios.create(axiosConfig);\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      captcha: '0000',\n      errorMessage: '',\n      isLoading: false\n    };\n  },\n  methods: {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, _response$data$user, _error$response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.isLoading = true;\n              _this.errorMessage = '';\n              _context.prev = 2;\n              _context.next = 5;\n              return api.post(API_URLS.login, {\n                username: _this.username,\n                password: _this.password,\n                captcha: _this.captcha\n              });\n            case 5:\n              response = _context.sent;\n              console.log('Login response:', response.data); // 调试用\n\n              // 保存登录状态和用户信息\n              if (!(response.data && response.data.token)) {\n                _context.next = 18;\n                break;\n              }\n              localStorage.setItem('token', response.data.token);\n              localStorage.setItem('username', ((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.username) || _this.username);\n\n              // 重置表单\n              _this.username = '';\n              _this.password = '';\n              _this.captcha = '';\n\n              // 跳转到首页\n              _context.next = 15;\n              return _this.$router.push('/');\n            case 15:\n              // 刷新页面以更新所有组件的状态\n              window.location.reload();\n              _context.next = 19;\n              break;\n            case 18:\n              throw new Error('登录响应数据格式不正确');\n            case 19:\n              _context.next = 25;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Login error:', _context.t0); // 调试用\n              _this.errorMessage = ((_error$response = _context.t0.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || '登录失败，请稍后重试';\n            case 25:\n              _context.prev = 25;\n              _this.isLoading = false;\n              return _context.finish(25);\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 21, 25, 28]]);\n      }))();\n    }\n  },\n  // 如果已经登录，直接跳转到首页\n  created: function created() {\n    if (localStorage.getItem('token')) {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URLS","axiosConfig","api","create","data","username","password","captcha","errorMessage","isLoading","methods","handleSubmit","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_response$data$user","_error$response","wrap","_callee$","_context","prev","next","post","login","sent","console","log","token","localStorage","setItem","user","$router","push","window","location","reload","Error","t0","error","message","finish","stop","created","getItem"],"sources":["D:\\computer_design\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">账号:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"captcha\">验证码:</label>\r\n        <input type=\"text\" id=\"captcha\" v-model=\"captcha\" required />\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"isLoading\">\r\n        {{ isLoading ? '登录中...' : '登录' }}\r\n      </button>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URLS, axiosConfig } from '../config/api';\r\n\r\n// 创建 axios 实例\r\nconst api = axios.create(axiosConfig);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      captcha: '0000',\r\n      errorMessage: '',\r\n      isLoading: false\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      \r\n      try {\r\n        const response = await api.post(API_URLS.login, {\r\n          username: this.username,\r\n          password: this.password,\r\n          captcha: this.captcha,\r\n        });\r\n\r\n        console.log('Login response:', response.data); // 调试用\r\n\r\n        // 保存登录状态和用户信息\r\n        if (response.data && response.data.token) {\r\n          localStorage.setItem('token', response.data.token);\r\n          localStorage.setItem('username', response.data.user?.username || this.username);\r\n\r\n          // 重置表单\r\n          this.username = '';\r\n          this.password = '';\r\n          this.captcha = '';\r\n          \r\n          // 跳转到首页\r\n          await this.$router.push('/');\r\n          \r\n          // 刷新页面以更新所有组件的状态\r\n          window.location.reload();\r\n        } else {\r\n          throw new Error('登录响应数据格式不正确');\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error); // 调试用\r\n        this.errorMessage = error.response?.data?.message || '登录失败，请稍后重试';\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n  // 如果已经登录，直接跳转到首页\r\n  created() {\r\n    if (localStorage.getItem('token')) {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-form h2 {\r\n  text-align: center;\r\n  color: #2196F3;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-form div {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.login-form label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #666;\r\n}\r\n\r\n.login-form input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.login-form input:focus {\r\n  outline: none;\r\n  border-color: #2196F3;\r\n}\r\n\r\n.login-form button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.login-form button:hover:not(:disabled) {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.login-form button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error {\r\n  color: #f44336;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  font-size: 0.9em;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}