{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null\n    };\n  },\n  computed: {\n    sortedAchievements: function sortedAchievements() {\n      var _this = this;\n      return _toConsumableArray(this.achievementTypes).sort(function (a, b) {\n        var isUnlockedA = _this.isUnlocked(a.id);\n        var isUnlockedB = _this.isUnlocked(b.id);\n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n            _this2.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 5:\n            _context.next = 7;\n            return _this2.loadUserRank();\n          case 7:\n            _context.next = 9;\n            return _this2.loadAchievementTypes();\n          case 9:\n            _context.next = 11;\n            return _this2.loadUserAchievements();\n          case 11:\n            if (!(!_this2.userRank || !_this2.userRank.carbon_reduction)) {\n              _context.next = 16;\n              break;\n            }\n            _context.next = 14;\n            return _this2.loadCarbonReduction();\n          case 14:\n            _context.next = 17;\n            break;\n          case 16:\n            _this2.carbonReduction = _this2.userRank.carbon_reduction;\n          case 17:\n            _context.next = 22;\n            break;\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading achievements data:', _context.t0);\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 19]]);\n    }))();\n  },\n  methods: {\n    loadAchievementTypes: function loadAchievementTypes() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/api/achievement/types');\n            case 3:\n              response = _context2.sent;\n              _this3.achievementTypes = response.data;\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading achievement types:', _context2.t0);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    loadUserAchievements: function loadUserAchievements() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              _context3.next = 4;\n              return axios.get('http://localhost:5000/api/achievement/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context3.sent;\n              _this4.userAchievements = response.data;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading user achievements:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    loadCarbonReduction: function loadCarbonReduction() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, rankResponse, carbonResponse;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              token = localStorage.getItem('token');\n              _context4.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              rankResponse = _context4.sent;\n              if (!(rankResponse.data && rankResponse.data.carbon_reduction)) {\n                _context4.next = 9;\n                break;\n              }\n              _this5.carbonReduction = rankResponse.data.carbon_reduction;\n              _context4.next = 13;\n              break;\n            case 9:\n              _context4.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              carbonResponse = _context4.sent;\n              _this5.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n            case 13:\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error loading carbon reduction:', _context4.t0);\n              _this5.carbonReduction = 0;\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 15]]);\n      }))();\n    },\n    loadUserRank: function loadUserRank() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              token = localStorage.getItem('token');\n              _context5.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context5.sent;\n              _this6.userRank = response.data;\n              _context5.next = 11;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error loading user rank:', _context5.t0);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 8]]);\n      }))();\n    },\n    isUnlocked: function isUnlocked(achievementId) {\n      return this.userAchievements.some(function (a) {\n        return a.achievement_id === achievementId;\n      });\n    },\n    getUnlockDate: function getUnlockDate(achievementId) {\n      var achievement = this.userAchievements.find(function (a) {\n        return a.achievement_id === achievementId;\n      });\n      if (achievement) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    getUnlockedAchievementsCount: function getUnlockedAchievementsCount() {\n      var _this7 = this;\n      return this.userAchievements.filter(function (a) {\n        return _this7.achievementTypes.some(function (type) {\n          return type.id === a.achievement_id;\n        });\n      }).length;\n    },\n    checkNewAchievements: function checkNewAchievements() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              token = localStorage.getItem('token');\n              _context6.next = 4;\n              return axios.get('http://localhost:5000/api/achievement/check', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context6.sent;\n              _this8.newAchievements = response.data.newAchievements;\n              if (!(_this8.newAchievements.length > 0)) {\n                _context6.next = 18;\n                break;\n              }\n              alert('恭喜！您解锁了新成就');\n              _context6.next = 10;\n              return _this8.loadUserAchievements();\n            case 10:\n              _context6.next = 12;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 12:\n              _context6.next = 14;\n              return _this8.loadUserRank();\n            case 14:\n              _context6.next = 16;\n              return _this8.loadCarbonReduction();\n            case 16:\n              _context6.next = 19;\n              break;\n            case 18:\n              alert('暂未解锁新成就，继续努力！');\n            case 19:\n              _context6.next = 24;\n              break;\n            case 21:\n              _context6.prev = 21;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error checking achievements:', _context6.t0);\n            case 24:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 21]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","achievementTypes","userAchievements","newAchievements","carbonReduction","userRank","computed","sortedAchievements","_this","_toConsumableArray","sort","a","b","isUnlockedA","isUnlocked","id","isUnlockedB","localeCompare","created","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","loadUserRank","loadAchievementTypes","loadUserAchievements","carbon_reduction","loadCarbonReduction","t0","console","error","stop","methods","_this3","_callee2","response","_callee2$","_context2","get","sent","_this4","_callee3","_callee3$","_context3","headers","Authorization","concat","_this5","_callee4","rankResponse","carbonResponse","_callee4$","_context4","_this6","_callee5","_callee5$","_context5","achievementId","some","achievement_id","getUnlockDate","achievement","find","Date","date","toLocaleDateString","getUnlockedAchievementsCount","_this7","filter","type","length","checkNewAchievements","_this8","_callee6","_callee6$","_context6","alert","post"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\n  <div class=\"achievements-page\">\n    <h2>我的成就</h2>\n    \n    <div class=\"achievement-summary\">\n      <div class=\"summary-card\">\n        <h3>成就总数</h3>\n        <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes.length }}</div>\n      </div>\n      \n      <div class=\"summary-card\">\n        <h3>减排总量</h3>\n        <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\n      </div>\n      \n      <div class=\"summary-card\">\n        <h3>排行榜排名</h3>\n        <div class=\"summary-count rank-value\">#{{ userRank ? userRank.rank : 'N/A' }}</div>\n      </div>\n    </div>\n    \n    <div class=\"achievements-status\">\n      <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\n        <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\n      </p>\n      <p v-else class=\"status-message locked-message\">\n        <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\n      </p>\n    </div>\n    \n    <h3 class=\"section-title\">\n      <i v-if=\"getUnlockedAchievementsCount() > 0\" class=\"fas fa-unlock-alt\"></i>\n      <i v-else class=\"fas fa-info-circle\"></i> \n      {{ getUnlockedAchievementsCount() > 0 ? '已解锁的成就' : '可获得的成就' }}\n    </h3>\n    \n    <div class=\"achievement-container\">\n      <div v-for=\"achievement in sortedAchievements\" :key=\"achievement.id\" \n           v-if=\"isUnlocked(achievement.id)\"\n           class=\"achievement-card unlocked\"\n           :data-achievement-id=\"achievement.id\">\n        <div class=\"achievement-icon\">\n          <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\n        </div>\n        <div class=\"achievement-info\">\n          <h3>{{ achievement.name }}</h3>\n          <p>{{ achievement.description }}</p>\n          <div class=\"unlock-date\">\n            解锁于: {{ getUnlockDate(achievement.id) }}\n          </div>\n        </div>\n      </div>\n      \n      <div v-for=\"achievement in sortedAchievements\" :key=\"'locked-'+achievement.id\" \n           v-if=\"!isUnlocked(achievement.id)\"\n           class=\"achievement-card locked\"\n           :data-achievement-id=\"achievement.id\">\n        <div class=\"achievement-icon\">\n          <i :class=\"['fas', achievement.icon]\"></i>\n        </div>\n        <div class=\"achievement-info\">\n          <h3>{{ achievement.name }}</h3>\n          <p>{{ achievement.description }}</p>\n          <div class=\"locked-badge\">\n            未解锁\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"check-achievements\">\n      <button @click=\"checkNewAchievements\" class=\"check-btn\">\n        <i class=\"fas fa-sync-alt\"></i> 检查新成就\n      </button>\n    </div>\n    \n    <div v-if=\"newAchievements.length > 0\" class=\"new-achievements\">\n      <h3>新解锁成就</h3>\n      <div class=\"achievement-list\">\n        <div v-for=\"achievement in newAchievements\" :key=\"achievement.id\" class=\"new-achievement\">\n          <i :class=\"['fas', achievement.icon]\"></i>\n          <span>{{ achievement.achievement_name }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null\n    };\n  },\n  computed: {\n    sortedAchievements() {\n      return [...this.achievementTypes].sort((a, b) => {\n        const isUnlockedA = this.isUnlocked(a.id);\n        const isUnlockedB = this.isUnlocked(b.id);\n        \n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        \n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  async created() {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 先获取排行榜数据\n      await this.loadUserRank();\n      // 获取成就类型\n      await this.loadAchievementTypes();\n      // 获取用户成就\n      await this.loadUserAchievements();\n      // 最后获取碳减排量，优先使用排行榜数据\n      if (!this.userRank || !this.userRank.carbon_reduction) {\n        await this.loadCarbonReduction();\n      } else {\n        this.carbonReduction = this.userRank.carbon_reduction;\n      }\n    } catch (error) {\n      console.error('Error loading achievements data:', error);\n    }\n  },\n  methods: {\n    async loadAchievementTypes() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\n        this.achievementTypes = response.data;\n      } catch (error) {\n        console.error('Error loading achievement types:', error);\n      }\n    },\n    \n    async loadUserAchievements() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userAchievements = response.data;\n      } catch (error) {\n        console.error('Error loading user achievements:', error);\n      }\n    },\n    \n    async loadCarbonReduction() {\n      try {\n        const token = localStorage.getItem('token');\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\n          this.carbonReduction = rankResponse.data.carbon_reduction;\n        } else {\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n        }\n      } catch (error) {\n        console.error('Error loading carbon reduction:', error);\n        this.carbonReduction = 0;\n      }\n    },\n    \n    async loadUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userRank = response.data;\n      } catch (error) {\n        console.error('Error loading user rank:', error);\n      }\n    },\n    \n    isUnlocked(achievementId) {\n      return this.userAchievements.some(a => a.achievement_id === achievementId);\n    },\n    \n    getUnlockDate(achievementId) {\n      const achievement = this.userAchievements.find(a => a.achievement_id === achievementId);\n      if (achievement) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    \n    getUnlockedAchievementsCount() {\n      return this.userAchievements.filter(a => \n        this.achievementTypes.some(type => type.id === a.achievement_id)\n      ).length;\n    },\n    \n    async checkNewAchievements() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        this.newAchievements = response.data.newAchievements;\n        \n        if (this.newAchievements.length > 0) {\n          alert('恭喜！您解锁了新成就');\n          await this.loadUserAchievements();\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          await this.loadUserRank();\n          await this.loadCarbonReduction();\n        } else {\n          alert('暂未解锁新成就，继续努力！');\n        }\n      } catch (error) {\n        console.error('Error checking achievements:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.achievements-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.achievement-summary {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.summary-card {\n  flex: 1;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.summary-card h3 {\n  margin-top: 0;\n  color: #555;\n  font-size: 14px;\n}\n\n.summary-count {\n  font-size: 24px;\n  font-weight: bold;\n  color: #2196F3;\n}\n\n.carbon-value {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.rank-value {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.section-title {\n  margin: 30px 0 15px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #f0f0f0;\n  color: #424242;\n}\n\n.section-title i {\n  margin-right: 8px;\n  color: #4CAF50;\n}\n\n.achievements-status {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.status-message {\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: inline-block;\n}\n\n.unlocked-message {\n  background-color: rgba(76, 175, 80, 0.1);\n  color: #2E7D32;\n}\n\n.locked-message {\n  background-color: rgba(158, 158, 158, 0.1);\n  color: #616161;\n}\n\n.status-message i {\n  margin-right: 8px;\n}\n\n.achievement-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.achievement-card {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n}\n\n.achievement-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 15px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked {\n  background: linear-gradient(to right, #e8f5e9, #f5f5f5);\n  border-left: 4px solid #4CAF50;\n}\n\n.achievement-card.locked {\n  background-color: #f5f5f5;\n  opacity: 0.8;\n  border-left: 4px solid #e0e0e0;\n}\n\n.achievement-icon {\n  width: 50px;\n  height: 50px;\n  background-color: #e0e0e0;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked .achievement-icon {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  box-shadow: 0 4px 8px rgba(76,175,80,0.3);\n}\n\n.achievement-info {\n  flex: 1;\n}\n\n.achievement-info h3 {\n  margin: 0 0 5px 0;\n  font-size: 16px;\n}\n\n.achievement-info p {\n  margin: 0 0 10px 0;\n  font-size: 12px;\n  color: #666;\n}\n\n.unlock-date {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: rgba(76,175,80,0.2);\n  color: #2E7D32;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.locked-badge {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: #e0e0e0;\n  color: #757575;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.check-achievements {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.check-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.check-btn:hover {\n  background-color: #0d8bf0;\n}\n\n.new-achievements {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n}\n\n.new-achievements h3 {\n  margin-top: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.achievement-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.new-achievement {\n  background-color: #e8f5e9;\n  border-radius: 4px;\n  padding: 8px 12px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n}\n\n.new-achievement i {\n  color: #4CAF50;\n}\n</style>"],"mappings":";;;;;;;;;;;;;;AAyFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,WAAJA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,gBAAgB,EAAE,EAAE;MACpBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,CAAC;MAClBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkB,WAAlBA,kBAAkBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MACnB,OAAOC,kBAAA,CAAI,IAAI,CAACR,gBAAgB,EAAES,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;QAC/C,IAAMC,WAAU,GAAIL,KAAI,CAACM,UAAU,CAACH,CAAC,CAACI,EAAE,CAAC;QACzC,IAAMC,WAAU,GAAIR,KAAI,CAACM,UAAU,CAACF,CAAC,CAACG,EAAE,CAAC;QAEzC,IAAIF,WAAU,IAAK,CAACG,WAAW,EAAE,OAAO,CAAC,CAAC;QAC1C,IAAI,CAACH,WAAU,IAAKG,WAAW,EAAE,OAAO,CAAC;QAEzC,OAAOL,CAAC,CAACI,EAAE,CAACE,aAAa,CAACL,CAAC,CAACG,EAAE,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;EACKG,OAAO,WAAPA,OAAOA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,KAAA;MAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAENJ,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YAAA,IACtCP,KAAK;cAAAG,QAAA,CAAAE,IAAA;cAAA;YAAA;YACRV,MAAI,CAACa,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;YAAA,OAAAN,QAAA,CAAAO,MAAA;UAAA;YAAAP,QAAA,CAAAE,IAAA;YAAA,OAKvBV,MAAI,CAACgB,YAAY,CAAC,CAAC;UAAA;YAAAR,QAAA,CAAAE,IAAA;YAAA,OAEnBV,MAAI,CAACiB,oBAAoB,CAAC,CAAC;UAAA;YAAAT,QAAA,CAAAE,IAAA;YAAA,OAE3BV,MAAI,CAACkB,oBAAoB,CAAC,CAAC;UAAA;YAAA,MAE7B,CAAClB,MAAI,CAACd,QAAO,IAAK,CAACc,MAAI,CAACd,QAAQ,CAACiC,gBAAgB;cAAAX,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAC7CV,MAAI,CAACoB,mBAAmB,CAAC,CAAC;UAAA;YAAAZ,QAAA,CAAAE,IAAA;YAAA;UAAA;YAEhCV,MAAI,CAACf,eAAc,GAAIe,MAAI,CAACd,QAAQ,CAACiC,gBAAgB;UAAA;YAAAX,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;YAGvDc,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAAf,QAAA,CAAAa,EAAO,CAAC;UAAA;UAAA;YAAA,OAAAb,QAAA,CAAAgB,IAAA;QAAA;MAAA,GAAApB,OAAA;IAAA;EAE5D,CAAC;EACDqB,OAAO,EAAE;IACDR,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MAAA,IAAAS,MAAA;MAAA,OAAAzB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAwB,SAAA;QAAA,IAAAC,QAAA;QAAA,OAAA1B,mBAAA,GAAAI,IAAA,UAAAuB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAApB,IAAA;cAAA,OAEF9B,KAAK,CAACmD,GAAG,CAAC,6CAA6C,CAAC;YAAA;cAAzEH,QAAO,GAAAE,SAAA,CAAAE,IAAA;cACbN,MAAI,CAAC5C,gBAAe,GAAI8C,QAAQ,CAAC/C,IAAI;cAAAiD,SAAA,CAAApB,IAAA;cAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAAT,EAAA,GAAAS,SAAA;cAErCR,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAAO,SAAA,CAAAT,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAS,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAE5D,CAAC;IAEKT,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MAAA,IAAAe,MAAA;MAAA,OAAAhC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAA+B,SAAA;QAAA,IAAA7B,KAAA,EAAAuB,QAAA;QAAA,OAAA1B,mBAAA,GAAAI,IAAA,UAAA6B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3B,IAAA,GAAA2B,SAAA,CAAA1B,IAAA;YAAA;cAAA0B,SAAA,CAAA3B,IAAA;cAEnBJ,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAwB,SAAA,CAAA1B,IAAA;cAAA,OACpB9B,KAAK,CAACmD,GAAG,CAAC,4CAA4C,EAAE;gBAC7EM,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAFIuB,QAAO,GAAAQ,SAAA,CAAAJ,IAAA;cAGbC,MAAI,CAAClD,gBAAe,GAAI6C,QAAQ,CAAC/C,IAAI;cAAAuD,SAAA,CAAA1B,IAAA;cAAA;YAAA;cAAA0B,SAAA,CAAA3B,IAAA;cAAA2B,SAAA,CAAAf,EAAA,GAAAe,SAAA;cAErCd,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAAa,SAAA,CAAAf,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAe,SAAA,CAAAZ,IAAA;UAAA;QAAA,GAAAU,QAAA;MAAA;IAE5D,CAAC;IAEKd,mBAAmB,WAAnBA,mBAAmBA,CAAA,EAAG;MAAA,IAAAoB,MAAA;MAAA,OAAAvC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAsC,SAAA;QAAA,IAAApC,KAAA,EAAAqC,YAAA,EAAAC,cAAA;QAAA,OAAAzC,mBAAA,GAAAI,IAAA,UAAAsC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApC,IAAA,GAAAoC,SAAA,CAAAnC,IAAA;YAAA;cAAAmC,SAAA,CAAApC,IAAA;cAElBJ,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAiC,SAAA,CAAAnC,IAAA;cAAA,OAChB9B,KAAK,CAACmD,GAAG,CAAC,4CAA4C,EAAE;gBACjFM,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAFIqC,YAAW,GAAAG,SAAA,CAAAb,IAAA;cAAA,MAIbU,YAAY,CAAC7D,IAAG,IAAK6D,YAAY,CAAC7D,IAAI,CAACsC,gBAAgB;gBAAA0B,SAAA,CAAAnC,IAAA;gBAAA;cAAA;cACzD8B,MAAI,CAACvD,eAAc,GAAIyD,YAAY,CAAC7D,IAAI,CAACsC,gBAAgB;cAAA0B,SAAA,CAAAnC,IAAA;cAAA;YAAA;cAAAmC,SAAA,CAAAnC,IAAA;cAAA,OAE5B9B,KAAK,CAACmD,GAAG,CAAC,wDAAwD,EAAE;gBAC/FM,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAFIsC,cAAa,GAAAE,SAAA,CAAAb,IAAA;cAGnBQ,MAAI,CAACvD,eAAc,GAAI0D,cAAc,CAAC9D,IAAI,CAACsC,gBAAe,IAAK,CAAC;YAAA;cAAA0B,SAAA,CAAAnC,IAAA;cAAA;YAAA;cAAAmC,SAAA,CAAApC,IAAA;cAAAoC,SAAA,CAAAxB,EAAA,GAAAwB,SAAA;cAGlEvB,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAAsB,SAAA,CAAAxB,EAAO,CAAC;cACvDmB,MAAI,CAACvD,eAAc,GAAI,CAAC;YAAA;YAAA;cAAA,OAAA4D,SAAA,CAAArB,IAAA;UAAA;QAAA,GAAAiB,QAAA;MAAA;IAE5B,CAAC;IAEKzB,YAAY,WAAZA,YAAYA,CAAA,EAAG;MAAA,IAAA8B,MAAA;MAAA,OAAA7C,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAA4C,SAAA;QAAA,IAAA1C,KAAA,EAAAuB,QAAA;QAAA,OAAA1B,mBAAA,GAAAI,IAAA,UAAA0C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAvC,IAAA;YAAA;cAAAuC,SAAA,CAAAxC,IAAA;cAEXJ,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAqC,SAAA,CAAAvC,IAAA;cAAA,OACpB9B,KAAK,CAACmD,GAAG,CAAC,4CAA4C,EAAE;gBAC7EM,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAFIuB,QAAO,GAAAqB,SAAA,CAAAjB,IAAA;cAGbc,MAAI,CAAC5D,QAAO,GAAI0C,QAAQ,CAAC/C,IAAI;cAAAoE,SAAA,CAAAvC,IAAA;cAAA;YAAA;cAAAuC,SAAA,CAAAxC,IAAA;cAAAwC,SAAA,CAAA5B,EAAA,GAAA4B,SAAA;cAE7B3B,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAA0B,SAAA,CAAA5B,EAAO,CAAC;YAAA;YAAA;cAAA,OAAA4B,SAAA,CAAAzB,IAAA;UAAA;QAAA,GAAAuB,QAAA;MAAA;IAEpD,CAAC;IAEDpD,UAAU,WAAVA,UAAUA,CAACuD,aAAa,EAAE;MACxB,OAAO,IAAI,CAACnE,gBAAgB,CAACoE,IAAI,CAAC,UAAA3D,CAAA;QAAA,OAAKA,CAAC,CAAC4D,cAAa,KAAMF,aAAa;MAAA,EAAC;IAC5E,CAAC;IAEDG,aAAa,WAAbA,aAAaA,CAACH,aAAa,EAAE;MAC3B,IAAMI,WAAU,GAAI,IAAI,CAACvE,gBAAgB,CAACwE,IAAI,CAAC,UAAA/D,CAAA;QAAA,OAAKA,CAAC,CAAC4D,cAAa,KAAMF,aAAa;MAAA,EAAC;MACvF,IAAII,WAAW,EAAE;QACf,OAAO,IAAIE,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;MACxD;MACA,OAAO,EAAE;IACX,CAAC;IAEDC,4BAA4B,WAA5BA,4BAA4BA,CAAA,EAAG;MAAA,IAAAC,MAAA;MAC7B,OAAO,IAAI,CAAC7E,gBAAgB,CAAC8E,MAAM,CAAC,UAAArE,CAAA;QAAA,OAClCoE,MAAI,CAAC9E,gBAAgB,CAACqE,IAAI,CAAC,UAAAW,IAAG;UAAA,OAAKA,IAAI,CAAClE,EAAC,KAAMJ,CAAC,CAAC4D,cAAc;QAAA;MAAA,CACjE,CAAC,CAACW,MAAM;IACV,CAAC;IAEKC,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MAAA,IAAAC,MAAA;MAAA,OAAAhE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAA+D,SAAA;QAAA,IAAA7D,KAAA,EAAAuB,QAAA;QAAA,OAAA1B,mBAAA,GAAAI,IAAA,UAAA6D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;YAAA;cAAA0D,SAAA,CAAA3D,IAAA;cAEnBJ,KAAI,GAAIM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;cAAAwD,SAAA,CAAA1D,IAAA;cAAA,OACpB9B,KAAK,CAACmD,GAAG,CAAC,6CAA6C,EAAE;gBAC9EM,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAFIuB,QAAO,GAAAwC,SAAA,CAAApC,IAAA;cAIbiC,MAAI,CAACjF,eAAc,GAAI4C,QAAQ,CAAC/C,IAAI,CAACG,eAAe;cAAA,MAEhDiF,MAAI,CAACjF,eAAe,CAAC+E,MAAK,GAAI,CAAC;gBAAAK,SAAA,CAAA1D,IAAA;gBAAA;cAAA;cACjC2D,KAAK,CAAC,YAAY,CAAC;cAAAD,SAAA,CAAA1D,IAAA;cAAA,OACbuD,MAAI,CAAC/C,oBAAoB,CAAC,CAAC;YAAA;cAAAkD,SAAA,CAAA1D,IAAA;cAAA,OAC3B9B,KAAK,CAAC0F,IAAI,CAAC,8CAA8C,EAAE,CAAC,CAAC,EAAE;gBACnEjC,OAAO,EAAE;kBAAEC,aAAa,YAAAC,MAAA,CAAYlC,KAAK;gBAAG;cAC9C,CAAC,CAAC;YAAA;cAAA+D,SAAA,CAAA1D,IAAA;cAAA,OACIuD,MAAI,CAACjD,YAAY,CAAC,CAAC;YAAA;cAAAoD,SAAA,CAAA1D,IAAA;cAAA,OACnBuD,MAAI,CAAC7C,mBAAmB,CAAC,CAAC;YAAA;cAAAgD,SAAA,CAAA1D,IAAA;cAAA;YAAA;cAEhC2D,KAAK,CAAC,eAAe,CAAC;YAAA;cAAAD,SAAA,CAAA1D,IAAA;cAAA;YAAA;cAAA0D,SAAA,CAAA3D,IAAA;cAAA2D,SAAA,CAAA/C,EAAA,GAAA+C,SAAA;cAGxB9C,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAA6C,SAAA,CAAA/C,EAAO,CAAC;YAAA;YAAA;cAAA,OAAA+C,SAAA,CAAA5C,IAAA;UAAA;QAAA,GAAA0C,QAAA;MAAA;IAExD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}