{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"leaderboard-page\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"user-rank-card\"\n};\nvar _hoisted_4 = {\n  \"class\": \"user-rank-header\"\n};\nvar _hoisted_5 = {\n  \"class\": \"user-avatar\"\n};\nvar _hoisted_6 = {\n  \"class\": \"user-info\"\n};\nvar _hoisted_7 = {\n  \"class\": \"user-stats\"\n};\nvar _hoisted_8 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_9 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_10 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_11 = {\n  \"class\": \"stat-value\"\n};\nvar _hoisted_12 = {\n  \"class\": \"stat-label\"\n};\nvar _hoisted_13 = {\n  \"class\": \"stat-item\"\n};\nvar _hoisted_14 = {\n  \"class\": \"stat-value achievement\"\n};\nvar _hoisted_15 = {\n  \"class\": \"percentage\"\n};\nvar _hoisted_16 = {\n  \"class\": \"leaderboard-controls\"\n};\nvar _hoisted_17 = {\n  \"class\": \"update-section\"\n};\nvar _hoisted_18 = [\"disabled\"];\nvar _hoisted_19 = {\n  \"class\": \"filter-section\"\n};\nvar _hoisted_20 = {\n  \"class\": \"leaderboard-container\"\n};\nvar _hoisted_21 = {\n  key: 0,\n  \"class\": \"loading-indicator\"\n};\nvar _hoisted_22 = {\n  \"class\": \"rank-column\"\n};\nvar _hoisted_23 = {\n  \"class\": \"user-column\"\n};\nvar _hoisted_24 = {\n  \"class\": \"user-info-row\"\n};\nvar _hoisted_25 = {\n  key: 0,\n  \"class\": \"current-user-tag\"\n};\nvar _hoisted_26 = {\n  \"class\": \"reduction-column\"\n};\nvar _hoisted_27 = {\n  key: 0,\n  \"class\": \"no-data\"\n};\nvar _hoisted_28 = {\n  key: 2,\n  \"class\": \"pagination\"\n};\nvar _hoisted_29 = [\"disabled\"];\nvar _hoisted_30 = {\n  \"class\": \"page-info\"\n};\nvar _hoisted_31 = [\"disabled\"];\nvar _hoisted_32 = {\n  key: 3,\n  \"class\": \"total-entries\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"h2\", {\n    \"class\": \"main-title\"\n  }, \"碳减排排行榜\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 用户自己的排名信息卡片，更美观的展示 \"), $data.userRank ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", null, _toDisplayString($options.getInitials($data.username)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString($data.username), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    \"class\": \"user-status\"\n  }, \"您当前的碳减排状态\", -1 /* HOISTED */))]), _createElementVNode(\"div\", {\n    \"class\": _normalizeClass([\"rank-badge\", $options.getRankColorClass($data.userRank.rank)])\n  }, \" #\" + _toDisplayString($data.userRank.rank), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(Number($data.userRank.carbon_reduction).toFixed(1)), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"减排量 (kg CO₂)\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-trophy\", $options.getRankIconClass($data.userRank.rank)])\n  }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_12, _toDisplayString($options.getRankDescription($data.userRank.rank)), 1 /* TEXT */)]), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n    \"class\": \"stat-divider\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($options.getPercentile($data.userRank.rank)) + \"%\", 1 /* TEXT */)]), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"stat-label\"\n  }, \"击败了其他用户\", -1 /* HOISTED */))])])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.updateLeaderboard && $options.updateLeaderboard.apply($options, arguments);\n    }),\n    \"class\": \"update-btn\",\n    disabled: $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($data.loading ? '更新中...' : '更新排名'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_18)]), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.limit = $event;\n    }),\n    onChange: _cache[2] || (_cache[2] = function () {\n      return $options.loadLeaderboard && $options.loadLeaderboard.apply($options, arguments);\n    }),\n    \"class\": \"filter-select\"\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"option\", {\n    value: 10\n  }, \"显示10名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 20\n  }, \"显示20名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 50\n  }, \"显示50名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 100\n  }, \"显示100名\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.limit]])])]), _createElementVNode(\"div\", _hoisted_20, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    \"class\": \"leaderboard-row header\"\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"rank-column\"\n  }, \"排名\"), _createElementVNode(\"div\", {\n    \"class\": \"user-column\"\n  }, \"用户\"), _createElementVNode(\"div\", {\n    \"class\": \"reduction-column\"\n  }, \"减排量 (kg CO₂)\")], -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, _cache[11] || (_cache[11] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"div\", null, \"加载排名数据中...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedLeaderboard, function (entry, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": _normalizeClass([\"leaderboard-row\", {\n        'highlighted': $options.isCurrentUser(entry.user_id)\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"rank-number\", $options.getRankClass(entry.rank)])\n    }, _toDisplayString(entry.rank), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"user-avatar-small\", {\n        'current-user': $options.isCurrentUser(entry.user_id)\n      }])\n    }, _toDisplayString($options.getInitials(entry.username)), 3 /* TEXT, CLASS */), _createElementVNode(\"span\", null, _toDisplayString(entry.username), 1 /* TEXT */), $options.isCurrentUser(entry.user_id) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, \"当前用户\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_26, _toDisplayString(Number(entry.carbon_reduction).toFixed(1)), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $data.leaderboard.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, \" 暂无排行数据 \")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 分页控件 \"), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.changePage($data.currentPage - 1);\n    }),\n    disabled: $data.currentPage === 1,\n    \"class\": \"pagination-btn\"\n  }, _cache[13] || (_cache[13] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-left\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_29), _createElementVNode(\"div\", _hoisted_30, \" 第 \" + _toDisplayString($data.currentPage) + \" 页 / 共 \" + _toDisplayString($options.totalPages) + \" 页 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.changePage($data.currentPage + 1);\n    }),\n    disabled: $data.currentPage === $options.totalPages,\n    \"class\": \"pagination-btn\"\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-right\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_31)])) : _createCommentVNode(\"v-if\", true), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, \" 展示第 \" + _toDisplayString(($data.currentPage - 1) * $data.pageSize + 1) + \" - \" + _toDisplayString(Math.min($data.currentPage * $data.pageSize, $data.leaderboard.length)) + \" 条， 共 \" + _toDisplayString($data.leaderboard.length) + \" 条记录 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[16] || (_cache[16] = _createStaticVNode(\"<div class=\\\"leaderboard-tips\\\" data-v-7f8c9efd><h3 data-v-7f8c9efd>如何提高排名?</h3><ul data-v-7f8c9efd><li data-v-7f8c9efd><i class=\\\"fas fa-walking\\\" data-v-7f8c9efd></i> 多步行减少碳排放</li><li data-v-7f8c9efd><i class=\\\"fas fa-calculator\\\" data-v-7f8c9efd></i> 通过碳排放计算器记录您的低碳行为</li><li data-v-7f8c9efd><i class=\\\"fas fa-paw\\\" data-v-7f8c9efd></i> 喂养并升级您的虚拟宠物</li><li data-v-7f8c9efd><i class=\\\"fas fa-award\\\" data-v-7f8c9efd></i> 完成成就任务获得额外奖励</li></ul></div>\", 1))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","$data","errorMessage","_hoisted_2","_createTextVNode","_toDisplayString","_createCommentVNode","userRank","_hoisted_3","_hoisted_4","_hoisted_5","$options","getInitials","username","_hoisted_6","_normalizeClass","getRankColorClass","rank","_hoisted_7","_hoisted_8","_hoisted_9","Number","carbon_reduction","toFixed","_hoisted_10","_hoisted_11","getRankIconClass","_hoisted_12","getRankDescription","_hoisted_13","_hoisted_14","_hoisted_15","getPercentile","_hoisted_16","_hoisted_17","onClick","_cache","updateLeaderboard","apply","arguments","disabled","loading","_hoisted_18","_hoisted_19","$event","limit","onChange","loadLeaderboard","value","_hoisted_20","_hoisted_21","_Fragment","_renderList","displayedLeaderboard","entry","index","isCurrentUser","user_id","_hoisted_22","getRankClass","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","leaderboard","length","_hoisted_27","_hoisted_28","changePage","currentPage","_hoisted_29","_hoisted_30","totalPages","_hoisted_31","_hoisted_32","pageSize","Math","min","_createStaticVNode"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\n  <div class=\"leaderboard-page\">\n    <h2 class=\"main-title\">碳减排排行榜</h2>\n    \n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ errorMessage }}\n    </div>\n    \n    <!-- 用户自己的排名信息卡片，更美观的展示 -->\n    <div v-if=\"userRank\" class=\"user-rank-card\">\n      <div class=\"user-rank-header\">\n        <div class=\"user-avatar\">\n          <span>{{ getInitials(username) }}</span>\n        </div>\n        <div class=\"user-info\">\n          <h3>{{ username }}</h3>\n          <div class=\"user-status\">您当前的碳减排状态</div>\n        </div>\n        <div class=\"rank-badge\" :class=\"getRankColorClass(userRank.rank)\">\n          #{{ userRank.rank }}\n        </div>\n      </div>\n      \n      <div class=\"user-stats\">\n        <div class=\"stat-item\">\n          <div class=\"stat-value\">{{ Number(userRank.carbon_reduction).toFixed(1) }}</div>\n          <div class=\"stat-label\">减排量 (kg CO₂)</div>\n        </div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value\">\n            <i class=\"fas fa-trophy\" :class=\"getRankIconClass(userRank.rank)\"></i>\n          </div>\n          <div class=\"stat-label\">{{ getRankDescription(userRank.rank) }}</div>\n        </div>\n        \n        <div class=\"stat-divider\"></div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value achievement\">\n            <span class=\"percentage\">{{ getPercentile(userRank.rank) }}%</span>\n          </div>\n          <div class=\"stat-label\">击败了其他用户</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-controls\">\n      <div class=\"update-section\">\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\n          {{ loading ? '更新中...' : '更新排名' }}\n        </button>\n      </div>\n      \n      <div class=\"filter-section\">\n        <select v-model=\"limit\" @change=\"loadLeaderboard\" class=\"filter-select\">\n          <option :value=\"10\">显示10名</option>\n          <option :value=\"20\">显示20名</option>\n          <option :value=\"50\">显示50名</option>\n          <option :value=\"100\">显示100名</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-container\">\n      <div class=\"leaderboard-row header\">\n        <div class=\"rank-column\">排名</div>\n        <div class=\"user-column\">用户</div>\n        <div class=\"reduction-column\">减排量 (kg CO₂)</div>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading-indicator\">\n        <div class=\"spinner\"></div>\n        <div>加载排名数据中...</div>\n      </div>\n      \n      <template v-else>\n        <div v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \n             class=\"leaderboard-row\" \n             :class=\"{ 'highlighted': isCurrentUser(entry.user_id) }\">\n          <div class=\"rank-column\">\n            <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">{{ entry.rank }}</div>\n          </div>\n          <div class=\"user-column\">\n            <div class=\"user-info-row\">\n              <div class=\"user-avatar-small\" :class=\"{ 'current-user': isCurrentUser(entry.user_id) }\">\n                {{ getInitials(entry.username) }}\n              </div>\n              <span>{{ entry.username }}</span>\n              <span v-if=\"isCurrentUser(entry.user_id)\" class=\"current-user-tag\">当前用户</span>\n            </div>\n          </div>\n          <div class=\"reduction-column\">{{ Number(entry.carbon_reduction).toFixed(1) }}</div>\n        </div>\n        \n        <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\n          暂无排行数据\n        </div>\n      </template>\n    </div>\n    \n    <!-- 分页控件 -->\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\n      <button \n        @click=\"changePage(currentPage - 1)\" \n        :disabled=\"currentPage === 1\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      \n      <div class=\"page-info\">\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\n      </div>\n      \n      <button \n        @click=\"changePage(currentPage + 1)\" \n        :disabled=\"currentPage === totalPages\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n    \n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\n      共 {{ leaderboard.length }} 条记录\n    </div>\n    \n    <div class=\"leaderboard-tips\">\n      <h3>如何提高排名?</h3>\n      <ul>\n        <li><i class=\"fas fa-walking\"></i> 多步行减少碳排放</li>\n        <li><i class=\"fas fa-calculator\"></i> 通过碳排放计算器记录您的低碳行为</li>\n        <li><i class=\"fas fa-paw\"></i> 喂养并升级您的虚拟宠物</li>\n        <li><i class=\"fas fa-award\"></i> 完成成就任务获得额外奖励</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nconst api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\n\n// 添加响应拦截器\napi.interceptors.response.use(\n  responseInterceptor.success, \n  responseInterceptor.error\n);\n\n// 获取API基础URL\nconst getBaseUrl = () => {\n  const host = window.location.hostname;\n  const port = '5000';\n  const protocol = window.location.protocol;\n  \n  if (host === 'localhost' || host === '127.0.0.1') {\n    return `http://localhost:${port}/api`;\n  } else {\n    return `${protocol}//${host}:${port}/api`;\n  }\n};\n\nexport default {\n  data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl(),\n      totalUserCount: 200 // 估计的用户总数，可以从后端获取\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  async created() {\n    try {\n      console.log('API基础URL:', this.apiBaseUrl);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 获取用户信息\n      const userResponse = await axios.get(`${this.apiBaseUrl}/auth/user`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      this.username = userResponse.data.username;\n      console.log('成功获取用户信息:', this.username);\n      \n      // 加载排行榜数据\n      await this.loadLeaderboard();\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      this.handleError(error, '加载用户数据失败');\n    }\n  },\n  methods: {\n    // 获取用户名的首字母作为头像\n    getInitials(name) {\n      return name ? name.charAt(0).toUpperCase() : '?';\n    },\n    \n    // 获取排名描述\n    getRankDescription(rank) {\n      if (rank <= 10) return '优秀减排者';\n      if (rank <= 50) return '活跃减排者';\n      if (rank <= 100) return '进步减排者';\n      return '环保新手';\n    },\n    \n    // 获取百分比\n    getPercentile(rank) {\n      // 计算击败了多少百分比的用户\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\n      const percentile = Math.floor(((this.totalUserCount - rank) / this.totalUserCount) * 100);\n      return Math.max(0, Math.min(99, percentile));\n    },\n    \n    // 获取排名图标类\n    getRankIconClass(rank) {\n      if (rank <= 3) return 'text-gold';\n      if (rank <= 10) return 'text-silver';\n      if (rank <= 50) return 'text-bronze';\n      return 'text-normal';\n    },\n    \n    // 获取排名颜色类\n    getRankColorClass(rank) {\n      if (rank <= 3) return 'rank-top';\n      if (rank <= 10) return 'rank-excellent';\n      if (rank <= 50) return 'rank-good';\n      return 'rank-normal';\n    },\n    \n    // 处理错误的通用方法\n    handleError(error, defaultMessage) {\n      let errorMsg = defaultMessage;\n      \n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = `${defaultMessage}: ${error.message}`;\n      }\n      \n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    \n    async loadLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        console.log('正在加载排行榜数据，限制:', this.limit);\n        \n        // 直接使用axios\n        const response = await axios.get(`${this.apiBaseUrl}/leaderboard?limit=${this.limit}`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('排行榜数据:', response.data);\n        \n        if (response.data && response.data.leaderboard) {\n          this.leaderboard = response.data.leaderboard;\n          this.userRank = response.data.userRank;\n          \n          // 如果用户排名信息为null或carbon_reduction为0，尝试强制更新\n          if (!this.userRank || this.userRank.carbon_reduction === 0) {\n            console.log('用户排名数据为空或减排量为0，尝试更新...');\n            await this.forceUpdateUserRank();\n          }\n          \n          // 确保数据排序正确\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\n          \n          // 获取总用户数量\n          if (response.data.totalUserCount) {\n            this.totalUserCount = response.data.totalUserCount;\n            console.log('获取到总用户数:', this.totalUserCount);\n          }\n          \n          // 重置为第一页\n          this.currentPage = 1;\n        } else {\n          console.error('返回的数据格式不正确:', response.data);\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\n          this.leaderboard = [];\n        }\n      } catch (error) {\n        this.handleError(error, '加载排行榜失败');\n        this.leaderboard = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 强制更新当前用户排名\n    async forceUpdateUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log('强制更新当前用户排名...');\n        \n        // 调用更新接口\n        const response = await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        console.log('排名更新响应:', response.data);\n        \n        // 获取最新的用户排名\n        const userRankResponse = await axios.get(`${this.apiBaseUrl}/leaderboard/user`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (userRankResponse.data) {\n          console.log('更新后的用户排名:', userRankResponse.data);\n          this.userRank = userRankResponse.data;\n        }\n      } catch (error) {\n        console.error('强制更新用户排名失败:', error);\n      }\n    },\n    \n    changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    \n    async updateLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        // 直接使用axios\n        await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        await this.loadLeaderboard();\n        this.errorMessage = '';\n      } catch (error) {\n        this.handleError(error, '更新排行榜失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    \n    getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.leaderboard-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.main-title {\n  text-align: center;\n  color: #2196F3;\n  margin-bottom: 20px;\n  font-size: 1.8rem;\n}\n\n.user-rank-card {\n  background: linear-gradient(135deg, #bbdefb 0%, #e3f2fd 100%);\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 25px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.05);\n  border: 1px solid rgba(0,0,0,0.05);\n}\n\n.user-rank-header {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n}\n\n.user-avatar {\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-right: 15px;\n  box-shadow: 0 4px 10px rgba(33,150,243,0.4);\n  text-transform: uppercase;\n  position: relative;\n  overflow: hidden;\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-info h3 {\n  margin: 0 0 5px 0;\n  font-size: 1.3rem;\n  color: #333;\n}\n\n.user-status {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.rank-badge {\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 10px 15px;\n  border-radius: 8px;\n  color: white;\n}\n\n.rank-top {\n  background-color: #F57C00;\n}\n\n.rank-excellent {\n  background-color: #4CAF50;\n}\n\n.rank-good {\n  background-color: #2196F3;\n}\n\n.rank-normal {\n  background-color: #9E9E9E;\n}\n\n.user-stats {\n  display: flex;\n  padding: 15px;\n  background-color: rgba(255,255,255,0.7);\n}\n\n.stat-item {\n  flex: 1;\n  text-align: center;\n  padding: 10px;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #2196F3;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.stat-divider {\n  width: 1px;\n  background-color: rgba(0,0,0,0.1);\n  margin: 10px 5px;\n}\n\n.text-gold {\n  color: #F57C00;\n}\n\n.text-silver {\n  color: #607D8B;\n}\n\n.text-bronze {\n  color: #795548;\n}\n\n.leaderboard-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #d32f2f;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n.update-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.3s;\n}\n\n.update-btn:hover:not(:disabled) {\n  background-color: #1976D2;\n}\n\n.update-btn:disabled {\n  background-color: #90CAF9;\n  cursor: not-allowed;\n}\n\n.filter-select {\n  padding: 8px 12px;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n  background-color: white;\n  font-size: 0.9rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  cursor: pointer;\n}\n\n.leaderboard-container {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.08);\n  margin-bottom: 20px;\n  min-height: 200px;\n  position: relative;\n}\n\n.leaderboard-row {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: all 0.2s ease;\n}\n\n.leaderboard-row:hover {\n  background-color: #f9f9f9;\n  transform: translateY(-1px);\n}\n\n.leaderboard-row.header {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n  border-bottom: 2px solid #e0e0e0;\n}\n\n.leaderboard-row.highlighted {\n  background-color: #e3f2fd;\n  border-left: 4px solid #2196F3;\n}\n\n.rank-column {\n  width: 60px;\n  display: flex;\n  justify-content: center;\n}\n\n.rank-number {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: #f0f0f0;\n  font-weight: bold;\n}\n\n.rank-number.gold {\n  background-color: #FFD700;\n  color: white;\n  box-shadow: 0 2px 4px rgba(255,215,0,0.3);\n}\n\n.rank-number.silver {\n  background-color: #C0C0C0;\n  color: white;\n  box-shadow: 0 2px 4px rgba(192,192,192,0.3);\n}\n\n.rank-number.bronze {\n  background-color: #CD7F32;\n  color: white;\n  box-shadow: 0 2px 4px rgba(205,127,50,0.3);\n}\n\n.user-column {\n  flex: 1;\n  padding: 0 10px;\n  position: relative;\n}\n\n.current-user-tag {\n  display: inline-block;\n  font-size: 0.7rem;\n  background: #2196F3;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  margin-left: 8px;\n  vertical-align: middle;\n}\n\n.reduction-column {\n  width: 120px;\n  text-align: right;\n  font-weight: 500;\n  color: #2196F3;\n}\n\n.no-data {\n  padding: 30px;\n  text-align: center;\n  color: #999;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  color: #666;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #2196F3;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.leaderboard-tips {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.leaderboard-tips h3 {\n  color: #1976D2;\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n}\n\n.leaderboard-tips ul {\n  padding-left: 10px;\n  margin: 0;\n  list-style-type: none;\n}\n\n.leaderboard-tips li {\n  margin-bottom: 10px;\n  color: #555;\n  display: flex;\n  align-items: center;\n}\n\n.leaderboard-tips li i {\n  color: #2196F3;\n  margin-right: 10px;\n  width: 20px;\n  text-align: center;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n  gap: 15px;\n}\n\n.pagination-btn {\n  background-color: #f5f5f5;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background-color: #e0e0e0;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 5px rgba(0,0,0,0.15);\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-info {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.total-entries {\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 600px) {\n  .leaderboard-controls {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .user-rank-header {\n    flex-direction: column;\n    text-align: center;\n  }\n  \n  .user-avatar {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n  \n  .rank-badge {\n    margin-top: 10px;\n  }\n  \n  .user-stats {\n    flex-direction: column;\n  }\n  \n  .stat-divider {\n    height: 1px;\n    width: 100%;\n    margin: 5px 0;\n  }\n  \n  .leaderboard-row {\n    padding: 10px;\n  }\n  \n  .rank-number {\n    width: 25px;\n    height: 25px;\n    font-size: 0.9rem;\n  }\n  \n  .user-column {\n    font-size: 0.9rem;\n  }\n  \n  .reduction-column {\n    width: 100px;\n    font-size: 0.9rem;\n  }\n}\n\n.achievement {\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.percentage {\n  font-weight: bold;\n  color: #ff9800;\n  text-shadow: 0 1px 2px rgba(0,0,0,0.1);\n}\n\n.achievement:after {\n  content: '';\n  position: absolute;\n  width: 110%;\n  height: 5px;\n  bottom: -4px;\n  left: -5%;\n  background: linear-gradient(90deg, #ff9800, #ffeb3b);\n  border-radius: 3px;\n}\n\n.user-info-row {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-avatar-small {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #90CAF9, #64B5F6);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.9rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  flex-shrink: 0;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.user-avatar-small.current-user {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  box-shadow: 0 2px 6px rgba(33,150,243,0.3);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}