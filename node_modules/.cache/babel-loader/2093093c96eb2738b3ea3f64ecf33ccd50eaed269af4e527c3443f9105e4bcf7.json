{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"leaderboard-page\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_3 = {\n  \"class\": \"leaderboard-header\"\n};\nvar _hoisted_4 = {\n  \"class\": \"update-section\"\n};\nvar _hoisted_5 = [\"disabled\"];\nvar _hoisted_6 = {\n  \"class\": \"filter-section\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  \"class\": \"my-rank\"\n};\nvar _hoisted_8 = {\n  \"class\": \"rank-badge\"\n};\nvar _hoisted_9 = {\n  \"class\": \"rank-details\"\n};\nvar _hoisted_10 = {\n  \"class\": \"rank-username\"\n};\nvar _hoisted_11 = {\n  \"class\": \"rank-reduction\"\n};\nvar _hoisted_12 = {\n  \"class\": \"leaderboard-container\"\n};\nvar _hoisted_13 = {\n  key: 0,\n  \"class\": \"loading-indicator\"\n};\nvar _hoisted_14 = {\n  \"class\": \"rank-column\"\n};\nvar _hoisted_15 = {\n  \"class\": \"user-column\"\n};\nvar _hoisted_16 = {\n  \"class\": \"reduction-column\"\n};\nvar _hoisted_17 = {\n  key: 0,\n  \"class\": \"no-data\"\n};\nvar _hoisted_18 = {\n  key: 2,\n  \"class\": \"pagination\"\n};\nvar _hoisted_19 = [\"disabled\"];\nvar _hoisted_20 = {\n  \"class\": \"page-info\"\n};\nvar _hoisted_21 = [\"disabled\"];\nvar _hoisted_22 = {\n  key: 3,\n  \"class\": \"total-entries\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"碳减排排行榜\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.updateLeaderboard && $options.updateLeaderboard.apply($options, arguments);\n    }),\n    \"class\": \"update-btn\",\n    disabled: $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($data.loading ? '更新中...' : '更新排名'), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.limit = $event;\n    }),\n    onChange: _cache[2] || (_cache[2] = function () {\n      return $options.loadLeaderboard && $options.loadLeaderboard.apply($options, arguments);\n    })\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"option\", {\n    value: 10\n  }, \"显示10名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 20\n  }, \"显示20名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 50\n  }, \"显示50名\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: 100\n  }, \"显示100名\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.limit]])])]), $data.userRank ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, \"#\" + _toDisplayString($data.userRank.rank), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, \"减排量: \" + _toDisplayString(Number($data.userRank.carbon_reduction).toFixed(1)) + \" kg CO₂\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_12, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    \"class\": \"leaderboard-row header\"\n  }, [_createElementVNode(\"div\", {\n    \"class\": \"rank-column\"\n  }, \"排名\"), _createElementVNode(\"div\", {\n    \"class\": \"user-column\"\n  }, \"用户\"), _createElementVNode(\"div\", {\n    \"class\": \"reduction-column\"\n  }, \"减排量 (kg CO₂)\")], -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n    \"class\": \"spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"div\", null, \"加载排名数据中...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedLeaderboard, function (entry, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": _normalizeClass([\"leaderboard-row\", {\n        'highlighted': $options.isCurrentUser(entry.user_id)\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", {\n      \"class\": _normalizeClass([\"rank-number\", $options.getRankClass(entry.rank)])\n    }, _toDisplayString(entry.rank), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(entry.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_16, _toDisplayString(Number(entry.carbon_reduction).toFixed(1)), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */)), $data.leaderboard.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \" 暂无排行数据 \")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */))]), _createCommentVNode(\" 分页控件 \"), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.changePage($data.currentPage - 1);\n    }),\n    disabled: $data.currentPage === 1,\n    \"class\": \"pagination-btn\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-left\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_19), _createElementVNode(\"div\", _hoisted_20, \" 第 \" + _toDisplayString($data.currentPage) + \" 页 / 共 \" + _toDisplayString($options.totalPages) + \" 页 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.changePage($data.currentPage + 1);\n    }),\n    disabled: $data.currentPage === $options.totalPages,\n    \"class\": \"pagination-btn\"\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-chevron-right\"\n  }, null, -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_21)])) : _createCommentVNode(\"v-if\", true), $data.leaderboard.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, \" 展示第 \" + _toDisplayString(($data.currentPage - 1) * $data.pageSize + 1) + \" - \" + _toDisplayString(Math.min($data.currentPage * $data.pageSize, $data.leaderboard.length)) + \" 条， 共 \" + _toDisplayString($data.leaderboard.length) + \" 条记录 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    \"class\": \"leaderboard-tips\"\n  }, [_createElementVNode(\"h3\", null, \"如何提高排名?\"), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"多步行减少碳排放\"), _createElementVNode(\"li\", null, \"通过碳排放计算器记录您的低碳行为\"), _createElementVNode(\"li\", null, \"喂养并升级您的虚拟宠物\"), _createElementVNode(\"li\", null, \"完成成就任务获得额外奖励\")])], -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","$data","errorMessage","_hoisted_2","_createTextVNode","_toDisplayString","_createCommentVNode","_hoisted_3","_hoisted_4","onClick","_cache","$options","updateLeaderboard","apply","arguments","disabled","loading","_normalizeClass","_hoisted_5","_hoisted_6","$event","limit","onChange","loadLeaderboard","value","userRank","_hoisted_7","_hoisted_8","rank","_hoisted_9","_hoisted_10","username","_hoisted_11","Number","carbon_reduction","toFixed","_hoisted_12","_hoisted_13","_Fragment","_renderList","displayedLeaderboard","entry","index","isCurrentUser","user_id","_hoisted_14","getRankClass","_hoisted_15","_hoisted_16","leaderboard","length","_hoisted_17","_hoisted_18","changePage","currentPage","_hoisted_19","_hoisted_20","totalPages","_hoisted_21","_hoisted_22","pageSize","Math","min"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\n  <div class=\"leaderboard-page\">\n    <h2>碳减排排行榜</h2>\n    \n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ errorMessage }}\n    </div>\n    \n    <div class=\"leaderboard-header\">\n      <div class=\"update-section\">\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\n          {{ loading ? '更新中...' : '更新排名' }}\n        </button>\n      </div>\n      \n      <div class=\"filter-section\">\n        <select v-model=\"limit\" @change=\"loadLeaderboard\">\n          <option :value=\"10\">显示10名</option>\n          <option :value=\"20\">显示20名</option>\n          <option :value=\"50\">显示50名</option>\n          <option :value=\"100\">显示100名</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"my-rank\" v-if=\"userRank\">\n      <div class=\"rank-badge\">#{{ userRank.rank }}</div>\n      <div class=\"rank-details\">\n        <div class=\"rank-username\">{{ username }}</div>\n        <div class=\"rank-reduction\">减排量: {{ Number(userRank.carbon_reduction).toFixed(1) }} kg CO₂</div>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-container\">\n      <div class=\"leaderboard-row header\">\n        <div class=\"rank-column\">排名</div>\n        <div class=\"user-column\">用户</div>\n        <div class=\"reduction-column\">减排量 (kg CO₂)</div>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading-indicator\">\n        <div class=\"spinner\"></div>\n        <div>加载排名数据中...</div>\n      </div>\n      \n      <template v-else>\n        <div v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \n             class=\"leaderboard-row\" \n             :class=\"{ 'highlighted': isCurrentUser(entry.user_id) }\">\n          <div class=\"rank-column\">\n            <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">{{ entry.rank }}</div>\n          </div>\n          <div class=\"user-column\">{{ entry.username }}</div>\n          <div class=\"reduction-column\">{{ Number(entry.carbon_reduction).toFixed(1) }}</div>\n        </div>\n        \n        <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\n          暂无排行数据\n        </div>\n      </template>\n    </div>\n    \n    <!-- 分页控件 -->\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\n      <button \n        @click=\"changePage(currentPage - 1)\" \n        :disabled=\"currentPage === 1\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      \n      <div class=\"page-info\">\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\n      </div>\n      \n      <button \n        @click=\"changePage(currentPage + 1)\" \n        :disabled=\"currentPage === totalPages\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n    \n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\n      共 {{ leaderboard.length }} 条记录\n    </div>\n    \n    <div class=\"leaderboard-tips\">\n      <h3>如何提高排名?</h3>\n      <ul>\n        <li>多步行减少碳排放</li>\n        <li>通过碳排放计算器记录您的低碳行为</li>\n        <li>喂养并升级您的虚拟宠物</li>\n        <li>完成成就任务获得额外奖励</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nconst api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\n\n// 添加响应拦截器\napi.interceptors.response.use(\n  responseInterceptor.success, \n  responseInterceptor.error\n);\n\n// 获取API基础URL\nconst getBaseUrl = () => {\n  const host = window.location.hostname;\n  const port = '5000';\n  const protocol = window.location.protocol;\n  \n  if (host === 'localhost' || host === '127.0.0.1') {\n    return `http://localhost:${port}/api`;\n  } else {\n    return `${protocol}//${host}:${port}/api`;\n  }\n};\n\nexport default {\n  data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl()\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  async created() {\n    try {\n      console.log('API基础URL:', this.apiBaseUrl);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 获取用户信息\n      const userResponse = await axios.get(`${this.apiBaseUrl}/auth/user`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      this.username = userResponse.data.username;\n      console.log('成功获取用户信息:', this.username);\n      \n      // 加载排行榜数据\n      await this.loadLeaderboard();\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      this.handleError(error, '加载用户数据失败');\n    }\n  },\n  methods: {\n    // 处理错误的通用方法\n    handleError(error, defaultMessage) {\n      let errorMsg = defaultMessage;\n      \n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = `${defaultMessage}: ${error.message}`;\n      }\n      \n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    \n    async loadLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        console.log('正在加载排行榜数据，限制:', this.limit);\n        \n        // 直接使用axios\n        const response = await axios.get(`${this.apiBaseUrl}/leaderboard?limit=${this.limit}`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('排行榜数据:', response.data);\n        \n        if (response.data && response.data.leaderboard) {\n          this.leaderboard = response.data.leaderboard;\n          this.userRank = response.data.userRank;\n          \n          // 确保数据排序正确\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\n          \n          // 重置为第一页\n          this.currentPage = 1;\n        } else {\n          console.error('返回的数据格式不正确:', response.data);\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\n          this.leaderboard = [];\n        }\n      } catch (error) {\n        this.handleError(error, '加载排行榜失败');\n        this.leaderboard = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    \n    async updateLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        // 直接使用axios\n        await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        await this.loadLeaderboard();\n        this.errorMessage = '';\n      } catch (error) {\n        this.handleError(error, '更新排行榜失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    \n    getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.leaderboard-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.leaderboard-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.update-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.3s;\n}\n\n.update-btn:hover {\n  background-color: #1976D2;\n}\n\n.filter-section select {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.my-rank {\n  background-color: #e3f2fd;\n  border-radius: 8px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.rank-badge {\n  background-color: #2196F3;\n  color: white;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.rank-details {\n  flex: 1;\n}\n\n.rank-username {\n  font-weight: bold;\n  font-size: 1.1rem;\n}\n\n.rank-reduction {\n  color: #666;\n  margin-top: 5px;\n}\n\n.leaderboard-container {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 20px;\n  min-height: 200px;\n  position: relative;\n}\n\n.leaderboard-row {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: background-color 0.2s;\n}\n\n.leaderboard-row:hover {\n  background-color: #f9f9f9;\n}\n\n.leaderboard-row.header {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n}\n\n.leaderboard-row.highlighted {\n  background-color: #e3f2fd;\n}\n\n.rank-column {\n  width: 60px;\n  display: flex;\n  justify-content: center;\n}\n\n.rank-number {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: #f0f0f0;\n  font-weight: bold;\n}\n\n.rank-number.gold {\n  background-color: #FFD700;\n  color: white;\n}\n\n.rank-number.silver {\n  background-color: #C0C0C0;\n  color: white;\n}\n\n.rank-number.bronze {\n  background-color: #CD7F32;\n  color: white;\n}\n\n.user-column {\n  flex: 1;\n  padding: 0 10px;\n}\n\n.reduction-column {\n  width: 120px;\n  text-align: right;\n  font-weight: 500;\n  color: #2196F3;\n}\n\n.no-data {\n  padding: 30px;\n  text-align: center;\n  color: #999;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  color: #666;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #2196F3;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.leaderboard-tips {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n}\n\n.leaderboard-tips h3 {\n  color: #1976D2;\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.leaderboard-tips ul {\n  padding-left: 20px;\n  margin: 0;\n}\n\n.leaderboard-tips li {\n  margin-bottom: 8px;\n  color: #555;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n  gap: 15px;\n}\n\n.pagination-btn {\n  background-color: #f5f5f5;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background-color: #e0e0e0;\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-info {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.total-entries {\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #d32f2f;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n@media (max-width: 600px) {\n  .leaderboard-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .leaderboard-row {\n    padding: 10px;\n  }\n  \n  .rank-number {\n    width: 25px;\n    height: 25px;\n    font-size: 0.9rem;\n  }\n  \n  .user-column {\n    font-size: 0.9rem;\n  }\n  \n  .reduction-column {\n    width: 100px;\n    font-size: 0.9rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}