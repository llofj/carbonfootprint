{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"achievements-page\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_4 = {\n  key: 2,\n  \"class\": \"checking-achievements-modal\"\n};\nvar _hoisted_5 = {\n  \"class\": \"checking-content\"\n};\nvar _hoisted_6 = {\n  key: 0,\n  \"class\": \"check-result\"\n};\nvar _hoisted_7 = {\n  key: 1,\n  \"class\": \"check-result success\"\n};\nvar _hoisted_8 = {\n  \"class\": \"new-achievements-list\"\n};\nvar _hoisted_9 = {\n  key: 3\n};\nvar _hoisted_10 = {\n  \"class\": \"achievement-summary\"\n};\nvar _hoisted_11 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_12 = {\n  \"class\": \"summary-card-content\"\n};\nvar _hoisted_13 = {\n  \"class\": \"summary-count\"\n};\nvar _hoisted_14 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_15 = {\n  \"class\": \"summary-card-content\"\n};\nvar _hoisted_16 = {\n  \"class\": \"summary-count carbon-value\"\n};\nvar _hoisted_17 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_18 = {\n  \"class\": \"summary-card-content\"\n};\nvar _hoisted_19 = {\n  \"class\": \"summary-count rank-value\"\n};\nvar _hoisted_20 = {\n  key: 0\n};\nvar _hoisted_21 = {\n  \"class\": \"achievements-status\"\n};\nvar _hoisted_22 = {\n  key: 0,\n  \"class\": \"status-message unlocked-message\"\n};\nvar _hoisted_23 = {\n  key: 1,\n  \"class\": \"status-message locked-message\"\n};\nvar _hoisted_24 = {\n  key: 0\n};\nvar _hoisted_25 = {\n  \"class\": \"achievement-container\"\n};\nvar _hoisted_26 = [\"data-achievement-id\"];\nvar _hoisted_27 = {\n  \"class\": \"achievement-icon\"\n};\nvar _hoisted_28 = {\n  \"class\": \"achievement-info\"\n};\nvar _hoisted_29 = {\n  \"class\": \"unlock-date\"\n};\nvar _hoisted_30 = {\n  \"class\": \"achievement-container\"\n};\nvar _hoisted_31 = [\"data-achievement-id\"];\nvar _hoisted_32 = {\n  \"class\": \"achievement-icon\"\n};\nvar _hoisted_33 = {\n  \"class\": \"achievement-info\"\n};\nvar _hoisted_34 = {\n  \"class\": \"unlock-hint\"\n};\nvar _hoisted_35 = {\n  key: 1,\n  \"class\": \"empty-state\"\n};\nvar _hoisted_36 = {\n  \"class\": \"check-achievements\"\n};\nvar _hoisted_37 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[21] || (_cache[21] = _createElementVNode(\"h2\", {\n    \"class\": \"page-title\"\n  }, \"我的成就\", -1 /* HOISTED */)), _createCommentVNode(\" 错误提示 \"), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 加载中提示 \"), $data.loading && !$data.checkingAchievements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    \"class\": \"loading-message\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }), _createElementVNode(\"p\", null, \"加载成就数据中...\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 检查成就提示 \"), $data.checkingAchievements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \"正在检查新成就...\", -1 /* HOISTED */)), $data.checkCompleted && !$data.hasNewAchievements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-info-circle\"\n  }, null, -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"暂未解锁新成就，继续努力！\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.dismissCheckResult && $options.dismissCheckResult.apply($options, arguments);\n    }),\n    \"class\": \"dismiss-btn\"\n  }, \"返回\")])) : _createCommentVNode(\"v-if\", true), $data.checkCompleted && $data.hasNewAchievements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-trophy\"\n  }, null, -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"p\", null, \"恭喜！您解锁了新成就！\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.newAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: achievement.id,\n      \"class\": \"new-achievement-item\"\n    }, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon])\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(achievement.achievement_name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.dismissCheckResult && $options.dismissCheckResult.apply($options, arguments);\n    }),\n    \"class\": \"dismiss-btn success\"\n  }, \"查看成就\")])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 成就内容 - 仅在加载完成且无错误时显示 \"), !$data.loading && !$data.error && !$data.checkingAchievements ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n    \"class\": \"card-title\"\n  }, \"成就总数\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, _toDisplayString($options.getUnlockedAchievementsCount()) + \" / \" + _toDisplayString($data.achievementTypes && $data.achievementTypes.length || 0), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_cache[12] || (_cache[12] = _createElementVNode(\"div\", {\n    \"class\": \"card-title\"\n  }, \"减排总量\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, _toDisplayString($data.userRank && $data.userRank.carbon_reduction ? Number($data.userRank.carbon_reduction).toFixed(1) : $data.carbonReduction.toFixed(1)) + \" kg CO₂\", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    \"class\": \"card-title\"\n  }, \"排行榜排名\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, \"#\" + _toDisplayString($data.userRank && $data.userRank.rank ? $data.userRank.rank : 'N/A'), 1 /* TEXT */)])])]), $data.achievementTypes && $data.achievementTypes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [$options.getUnlockedAchievementsCount() > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, [_cache[14] || (_cache[14] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-medal\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" 您已解锁 \" + _toDisplayString($options.getUnlockedAchievementsCount()) + \" 项成就，继续努力！ \", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_23, _cache[15] || (_cache[15] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-lock\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 您尚未解锁任何成就，立即开始减碳行动吧！ \")])))]), _createCommentVNode(\" 已解锁成就 \"), $options.unlockedAchievements.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", {\n    \"class\": \"section-title\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-unlock-alt\"\n  }), _createTextVNode(\" 已解锁的成就 \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_25, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.unlockedAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: achievement.id,\n      \"class\": \"achievement-card unlocked\",\n      \"data-achievement-id\": achievement.id\n    }, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon]),\n      style: {\n        \"color\": \"white\"\n      }\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"h3\", null, _toDisplayString(achievement.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(achievement.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_29, \" 解锁于: \" + _toDisplayString($options.getUnlockDate(achievement.id)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_26);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 未解锁成就 \"), _cache[18] || (_cache[18] = _createElementVNode(\"h3\", {\n    \"class\": \"section-title\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-lock\"\n  }), _createTextVNode(\" 待解锁的成就 \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_30, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.lockedAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'locked-' + achievement.id,\n      \"class\": \"achievement-card locked\",\n      \"data-achievement-id\": achievement.id\n    }, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon])\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"h3\", null, _toDisplayString(achievement.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(achievement.description), 1 /* TEXT */), _cache[17] || (_cache[17] = _createElementVNode(\"div\", {\n      \"class\": \"locked-badge\"\n    }, [_createElementVNode(\"i\", {\n      \"class\": \"fas fa-lock\"\n    }), _createTextVNode(\" 未解锁 \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_34, _toDisplayString($options.getUnlockHint(achievement)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_31);\n  }), 128 /* KEYED_FRAGMENT */))])])) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, _cache[19] || (_cache[19] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-award empty-icon\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无可用成就\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n    \"class\": \"empty-description\"\n  }, \"系统尚未配置任何成就，请稍后再试\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.checkNewAchievements && $options.checkNewAchievements.apply($options, arguments);\n    }),\n    \"class\": \"check-btn\",\n    disabled: !$data.achievementTypes || $data.achievementTypes.length === 0 || $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.checkingAchievements\n    }])\n  }, null, 2 /* CLASS */), _cache[20] || (_cache[20] = _createTextVNode(\" 检查新成就 \"))], 8 /* PROPS */, _hoisted_37)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","error","_hoisted_2","_createTextVNode","_toDisplayString","loading","checkingAchievements","_hoisted_3","_cache","_hoisted_4","_hoisted_5","checkCompleted","hasNewAchievements","_hoisted_6","onClick","$options","dismissCheckResult","apply","arguments","_hoisted_7","_hoisted_8","_Fragment","_renderList","newAchievements","achievement","id","_normalizeClass","icon","achievement_name","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","getUnlockedAchievementsCount","achievementTypes","length","_hoisted_14","_hoisted_15","_hoisted_16","userRank","carbon_reduction","Number","toFixed","carbonReduction","_hoisted_17","_hoisted_18","_hoisted_19","rank","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","unlockedAchievements","_hoisted_24","_hoisted_25","_hoisted_27","style","_hoisted_28","name","description","_hoisted_29","getUnlockDate","_hoisted_26","_hoisted_30","lockedAchievements","_hoisted_32","_hoisted_33","_hoisted_34","getUnlockHint","_hoisted_31","_hoisted_35","_hoisted_36","checkNewAchievements","disabled","_hoisted_37"],"sources":["C:\\Users\\ASUS\\Desktop\\ECO_PAW\\carbonfootprint\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\r\n  <div class=\"achievements-page\">\r\n    <h2 class=\"page-title\">我的成就</h2>\r\n    \r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <i class=\"fas fa-exclamation-circle\"></i>\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <!-- 加载中提示 -->\r\n    <div v-if=\"loading && !checkingAchievements\" class=\"loading-container\">\r\n      <div class=\"loading-message\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>加载成就数据中...</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 检查成就提示 -->\r\n    <div v-if=\"checkingAchievements\" class=\"checking-achievements-modal\">\r\n      <div class=\"checking-content\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>正在检查新成就...</p>\r\n        <div v-if=\"checkCompleted && !hasNewAchievements\" class=\"check-result\">\r\n          <i class=\"fas fa-info-circle\"></i>\r\n          <p>暂未解锁新成就，继续努力！</p>\r\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn\">返回</button>\r\n        </div>\r\n        <div v-if=\"checkCompleted && hasNewAchievements\" class=\"check-result success\">\r\n          <i class=\"fas fa-trophy\"></i>\r\n          <p>恭喜！您解锁了新成就！</p>\r\n          <div class=\"new-achievements-list\">\r\n            <div v-for=\"achievement in newAchievements\" :key=\"achievement.id\" class=\"new-achievement-item\">\r\n              <i :class=\"['fas', achievement.icon]\"></i>\r\n              <span>{{ achievement.achievement_name }}</span>\r\n            </div>\r\n          </div>\r\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn success\">查看成就</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 成就内容 - 仅在加载完成且无错误时显示 -->\r\n    <div v-if=\"!loading && !error && !checkingAchievements\">\r\n      <div class=\"achievement-summary\">\r\n        <div class=\"summary-card\">\r\n          <div class=\"summary-card-content\">\r\n            <div class=\"card-title\">成就总数</div>\r\n            <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes && achievementTypes.length || 0 }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"summary-card\">\r\n          <div class=\"summary-card-content\">\r\n            <div class=\"card-title\">减排总量</div>\r\n            <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"summary-card\">\r\n          <div class=\"summary-card-content\">\r\n            <div class=\"card-title\">排行榜排名</div>\r\n            <div class=\"summary-count rank-value\">#{{ userRank && userRank.rank ? userRank.rank : 'N/A' }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"achievementTypes && achievementTypes.length > 0\">\r\n        <div class=\"achievements-status\">\r\n          <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\r\n            <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\r\n          </p>\r\n          <p v-else class=\"status-message locked-message\">\r\n            <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\r\n          </p>\r\n        </div>\r\n        \r\n        <!-- 已解锁成就 -->\r\n        <div v-if=\"unlockedAchievements.length > 0\">\r\n          <h3 class=\"section-title\">\r\n            <i class=\"fas fa-unlock-alt\"></i> 已解锁的成就\r\n          </h3>\r\n          \r\n          <div class=\"achievement-container\">\r\n            <div v-for=\"achievement in unlockedAchievements\" :key=\"achievement.id\" \r\n                 class=\"achievement-card unlocked\"\r\n                 :data-achievement-id=\"achievement.id\">\r\n              <div class=\"achievement-icon\">\r\n                <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\r\n              </div>\r\n              <div class=\"achievement-info\">\r\n                <h3>{{ achievement.name }}</h3>\r\n                <p>{{ achievement.description }}</p>\r\n                <div class=\"unlock-date\">\r\n                  解锁于: {{ getUnlockDate(achievement.id) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 未解锁成就 -->\r\n        <h3 class=\"section-title\">\r\n          <i class=\"fas fa-lock\"></i> 待解锁的成就\r\n        </h3>\r\n        \r\n        <div class=\"achievement-container\">\r\n          <div v-for=\"achievement in lockedAchievements\" :key=\"'locked-'+achievement.id\" \r\n               class=\"achievement-card locked\"\r\n               :data-achievement-id=\"achievement.id\">\r\n            <div class=\"achievement-icon\">\r\n              <i :class=\"['fas', achievement.icon]\"></i>\r\n            </div>\r\n            <div class=\"achievement-info\">\r\n              <h3>{{ achievement.name }}</h3>\r\n              <p>{{ achievement.description }}</p>\r\n              <div class=\"locked-badge\">\r\n                <i class=\"fas fa-lock\"></i> 未解锁\r\n              </div>\r\n              <div class=\"unlock-hint\">\r\n                {{ getUnlockHint(achievement) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-else-if=\"!loading\" class=\"empty-state\">\r\n        <i class=\"fas fa-award empty-icon\"></i>\r\n        <p>暂无可用成就</p>\r\n        <p class=\"empty-description\">系统尚未配置任何成就，请稍后再试</p>\r\n      </div>\r\n      \r\n      <div class=\"check-achievements\">\r\n        <button @click=\"checkNewAchievements\" class=\"check-btn\" :disabled=\"!achievementTypes || achievementTypes.length === 0 || loading\">\r\n          <i class=\"fas fa-sync-alt\" :class=\"{'fa-spin': checkingAchievements}\"></i> 检查新成就\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      achievementTypes: [],\r\n      userAchievements: [],\r\n      newAchievements: [],\r\n      carbonReduction: 0,\r\n      userRank: null,\r\n      loading: true,\r\n      error: null,\r\n      checkingAchievements: false,\r\n      checkCompleted: false, \r\n      hasNewAchievements: false\r\n    };\r\n  },\r\n  computed: {\r\n    unlockedAchievements() {\r\n      if (!this.achievementTypes || !this.userAchievements) return [];\r\n      \r\n      return this.achievementTypes.filter(achievement => \r\n        achievement && achievement.id && this.isUnlocked(achievement.id)\r\n      );\r\n    },\r\n    lockedAchievements() {\r\n      if (!this.achievementTypes || !this.userAchievements) return [];\r\n      \r\n      return this.achievementTypes.filter(achievement => \r\n        achievement && achievement.id && !this.isUnlocked(achievement.id)\r\n      );\r\n    },\r\n    sortedAchievements() {\r\n      // 检查achievementTypes是否存在且为数组\r\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\r\n        return [];\r\n      }\r\n      \r\n      return [...this.achievementTypes].sort((a, b) => {\r\n        // 确保a和b对象都有id属性\r\n        if (!a || !b || !a.id || !b.id) return 0;\r\n        \r\n        const isUnlockedA = this.isUnlocked(a.id);\r\n        const isUnlockedB = this.isUnlocked(b.id);\r\n        \r\n        if (isUnlockedA && !isUnlockedB) return -1;\r\n        if (!isUnlockedA && isUnlockedB) return 1;\r\n        \r\n        return a.id.localeCompare(b.id);\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    try {\r\n      this.loading = true;\r\n      this.error = null;\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n      \r\n      // 先获取排行榜数据\r\n      await this.loadUserRank();\r\n      // 获取成就类型\r\n      await this.loadAchievementTypes();\r\n      // 获取用户成就\r\n      await this.loadUserAchievements();\r\n      // 最后获取碳减排量，优先使用排行榜数据\r\n      if (!this.userRank || !this.userRank.carbon_reduction) {\r\n        await this.loadCarbonReduction();\r\n      } else {\r\n        this.carbonReduction = this.userRank.carbon_reduction;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading achievements data:', error);\r\n      this.error = '加载成就数据失败，请稍后再试';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    async loadAchievementTypes() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\r\n        \r\n        // 确保响应数据是一个数组且数组中的每个项目都有id属性\r\n        if (response.data && Array.isArray(response.data)) {\r\n          // 深度复制数据以避免引用问题\r\n          const validAchievements = response.data\r\n            .filter(item => item && item.id)\r\n            .map(item => ({...item}));\r\n            \r\n          // 确保复制后的数据仍然有效\r\n          if (validAchievements.length > 0) {\r\n            this.achievementTypes = validAchievements;\r\n          } else {\r\n            console.error('No valid achievement types found in response');\r\n            this.achievementTypes = [];\r\n          }\r\n        } else {\r\n          console.error('Achievement types data is not an array or is empty:', response.data);\r\n          this.achievementTypes = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading achievement types:', error);\r\n        this.achievementTypes = [];\r\n        throw error; // 重新抛出错误以便上层处理\r\n      }\r\n    },\r\n    \r\n    async loadUserAchievements() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        this.userAchievements = response.data;\r\n      } catch (error) {\r\n        console.error('Error loading user achievements:', error);\r\n      }\r\n    },\r\n    \r\n    async loadCarbonReduction() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\r\n          this.carbonReduction = rankResponse.data.carbon_reduction;\r\n        } else {\r\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading carbon reduction:', error);\r\n        this.carbonReduction = 0;\r\n      }\r\n    },\r\n    \r\n    async loadUserRank() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        this.userRank = response.data;\r\n      } catch (error) {\r\n        console.error('Error loading user rank:', error);\r\n      }\r\n    },\r\n    \r\n    isUnlocked(achievementId) {\r\n      // 确保userAchievements存在且为数组\r\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\r\n        return false;\r\n      }\r\n      return this.userAchievements.some(a => a && a.achievement_id === achievementId);\r\n    },\r\n    \r\n    getUnlockDate(achievementId) {\r\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\r\n        return '';\r\n      }\r\n      const achievement = this.userAchievements.find(a => a && a.achievement_id === achievementId);\r\n      if (achievement && achievement.date) {\r\n        return new Date(achievement.date).toLocaleDateString();\r\n      }\r\n      return '';\r\n    },\r\n    \r\n    getUnlockedAchievementsCount() {\r\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || \r\n          !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\r\n        return 0;\r\n      }\r\n      return this.userAchievements.filter(a => \r\n        a && a.achievement_id && this.achievementTypes.some(type => type && type.id === a.achievement_id)\r\n      ).length;\r\n    },\r\n    \r\n    // 获取解锁成就的提示信息\r\n    getUnlockHint(achievement) {\r\n      if (!achievement) return '';\r\n      \r\n      const hints = {\r\n        'green_commuter': '多步行减少碳排放，累计超过5kg CO₂',\r\n        'carbon_saver': '单日减少碳排放量达到10kg',\r\n        'pet_lover': '升级您的虚拟宠物至5级',\r\n        'eco_warrior': '累计碳减排量达到50kg CO₂',\r\n        'stepping_master': '单日行走步数超过20000步',\r\n        'diet_hero': '减少肉类消费减排量达到10kg CO₂',\r\n        'pet_trainer': '通过训练获得1000经验值',\r\n        'pet_expert': '宠物等级达到10级',\r\n        'pet_master': '宠物等级达到20级',\r\n        'experience_collector': '累计获得5000经验值'\r\n      };\r\n      \r\n      return hints[achievement.id] || '继续减碳行动解锁此成就';\r\n    },\r\n    \r\n    async checkNewAchievements() {\r\n      try {\r\n        this.checkingAchievements = true;\r\n        this.checkCompleted = false;\r\n        this.hasNewAchievements = false;\r\n        this.error = null;\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.$router.push('/login');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        if (!response || !response.data) {\r\n          throw new Error('服务器返回无效响应');\r\n        }\r\n        \r\n        this.newAchievements = Array.isArray(response.data.newAchievements) \r\n          ? response.data.newAchievements.filter(a => a && a.id) \r\n          : [];\r\n        \r\n        this.checkCompleted = true;\r\n        this.hasNewAchievements = this.newAchievements.length > 0;\r\n        \r\n        if (this.hasNewAchievements) {\r\n          // 重新加载用户成就\r\n          await this.loadUserAchievements();\r\n          // 更新排行榜数据\r\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          await this.loadUserRank();\r\n          await this.loadCarbonReduction();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking achievements:', error);\r\n        this.error = '检查新成就失败，请稍后再试';\r\n        this.checkCompleted = true;\r\n      }\r\n    },\r\n    \r\n    // 关闭检查结果模态框\r\n    dismissCheckResult() {\r\n      this.checkingAchievements = false;\r\n      this.checkCompleted = false;\r\n      this.hasNewAchievements = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.achievements-page {\r\n  max-width: 1050px;\r\n  min-height: 80vh;\r\n  margin: 0 auto;\r\n  padding: 30px 35px;\r\n  font-family: 'Arial', sans-serif;\r\n  position: relative;\r\n  background-color: rgba(255, 255, 255, 0.85);\r\n  border-radius: 20px;\r\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(12px);\r\n  border: 1px solid rgba(255, 255, 255, 0.6);\r\n  overflow: hidden;\r\n  z-index: 2;\r\n}\r\n\r\n/* 添加壁纸背景效果 */\r\n.achievements-page::before {\r\n  content: '';\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-image: url('../assets/carbon_5.jpg');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-attachment: fixed;\r\n  filter: brightness(0.9) saturate(1.1) contrast(1.1);\r\n  z-index: -1;\r\n  opacity: 0.9;\r\n}\r\n\r\n/* 添加装饰元素 */\r\n.achievements-page::after {\r\n  content: '🏆';\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  font-size: 40px;\r\n  opacity: 0.1;\r\n  transform: rotate(15deg);\r\n  filter: blur(2px);\r\n  animation: float 6s ease-in-out infinite;\r\n  z-index: -1;\r\n}\r\n\r\n@keyframes float {\r\n  0%, 100% { transform: translateY(0) rotate(15deg); }\r\n  50% { transform: translateY(-15px) rotate(12deg); }\r\n}\r\n\r\n/* 修改页面标题样式，与虚拟宠物页面保持一致 */\r\n.page-title {\r\n  color: #1e3d59;\r\n  text-align: center;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .page-title {\r\n    font-size: 32px;\r\n  }\r\n  \r\n  .achievement-summary {\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .summary-card {\r\n    padding: 18px;\r\n  }\r\n  \r\n  .summary-count, .carbon-value, .rank-value {\r\n    font-size: 36px;\r\n  }\r\n}\r\n\r\n.page-actions {\r\n  display: none;\r\n}\r\n\r\n/* 统一数据卡片样式 */\r\n.achievement-summary {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n  perspective: 1000px;\r\n  padding: 10px 5px;\r\n}\r\n\r\n.summary-card {\r\n  flex: 1;\r\n  background: rgba(255, 255, 255, 0.85);\r\n  border-radius: 20px;\r\n  padding: 20px 15px;\r\n  text-align: center;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\r\n  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n  position: relative;\r\n  overflow: hidden;\r\n  animation: cardAppear 0.6s forwards;\r\n  animation-delay: calc(var(--i, 0) * 0.15s);\r\n  opacity: 0;\r\n  transform: translateY(15px) rotateX(10deg);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgba(255, 255, 255, 0.6);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-height: 150px;\r\n}\r\n\r\n.summary-card h3 {\r\n  margin: 0 0 15px 0;\r\n  color: #1e3d59;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  position: relative;\r\n  display: block;\r\n  letter-spacing: 0.5px;\r\n  z-index: 2;\r\n  opacity: 0.7;\r\n  text-align: center;\r\n}\r\n\r\n.summary-count {\r\n  font-size: 42px;\r\n  font-weight: 700;\r\n  margin: 10px 0 0 0;\r\n  position: relative;\r\n  display: block;\r\n  color: #1e3d59;\r\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  text-shadow: 0 3px 5px rgba(0,0,0,0.05);\r\n  z-index: 2;\r\n  line-height: 1.2;\r\n}\r\n\r\n.carbon-value, .rank-value {\r\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 42px;\r\n  font-weight: 700;\r\n  line-height: 1.2;\r\n  margin: 10px 0 0 0;\r\n  display: block;\r\n}\r\n\r\n/* 调整卡片内部布局 */\r\n.summary-card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n/* 将绿色系改为蓝色系 */\r\n.section-title {\r\n  margin: 40px 0 25px;\r\n  padding-bottom: 12px;\r\n  border-bottom: 1px solid rgba(0,0,0,0.08);\r\n  color: #1e3d59;\r\n  font-size: 22px;\r\n  position: relative;\r\n  animation: fadeIn 0.6s ease-out;\r\n  animation-delay: 0.3s;\r\n  opacity: 0;\r\n  animation-fill-mode: forwards;\r\n  font-weight: 600;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.section-title::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -1px;\r\n  left: 0;\r\n  width: 100px;\r\n  height: 3px;\r\n  border-radius: 1.5px;\r\n}\r\n\r\n.section-title:nth-of-type(1)::after {\r\n  background: linear-gradient(90deg, #1e3d59, #64B5F6);\r\n}\r\n\r\n.section-title:nth-of-type(2)::after {\r\n  background: linear-gradient(90deg, #e74c3c, #c0392b);\r\n}\r\n\r\n.section-title i {\r\n  margin-right: 12px;\r\n  position: relative;\r\n  top: 1px;\r\n}\r\n\r\n.section-title:nth-of-type(1) i {\r\n  color: #1e3d59;\r\n}\r\n\r\n.section-title:nth-of-type(2) i {\r\n  color: #e74c3c;\r\n}\r\n\r\n.achievements-status {\r\n  margin: 35px 0;\r\n  text-align: center;\r\n}\r\n\r\n.status-message {\r\n  padding: 16px 28px;\r\n  border-radius: 50px;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  box-shadow: 0 8px 20px rgba(0,0,0,0.1);\r\n  animation: fadeIn 0.6s ease-out;\r\n  animation-delay: 0.3s;\r\n  opacity: 0;\r\n  animation-fill-mode: forwards;\r\n  position: relative;\r\n  overflow: hidden;\r\n  backdrop-filter: blur(4px);\r\n}\r\n\r\n.status-message::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -10px;\r\n  left: -10px;\r\n  right: -10px;\r\n  bottom: -10px;\r\n  background: linear-gradient(45deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0) 100%);\r\n  transform: rotate(25deg) translateX(-200%);\r\n  animation: shimmer 3s infinite;\r\n}\r\n\r\n@keyframes shimmer {\r\n  to { transform: rotate(25deg) translateX(200%); }\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.unlocked-message {\r\n  background-color: rgba(33, 150, 243, 0.12);\r\n  color: #044a87;\r\n  border: 1px solid rgba(33, 150, 243, 0.3);\r\n}\r\n\r\n.locked-message {\r\n  background-color: rgba(158, 158, 158, 0.12);\r\n  color: #424242;\r\n  border: 1px solid rgba(158, 158, 158, 0.3);\r\n}\r\n\r\n.status-message i {\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.achievement-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  gap: 25px;\r\n  margin-bottom: 40px;\r\n  border-top: none;\r\n  padding-top: 5px;\r\n  perspective: 1000px;\r\n}\r\n\r\n.achievement-card {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 16px;\r\n  padding: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 22px;\r\n  box-shadow: 0 10px 30px rgba(0,0,0,0.08);\r\n  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n  border-left: 5px solid transparent;\r\n  position: relative;\r\n  overflow: hidden;\r\n  animation: cardFadeIn 0.6s forwards;\r\n  animation-delay: calc(var(--j, 0) * 0.1s);\r\n  opacity: 0;\r\n  transform: translateY(15px);\r\n  backdrop-filter: blur(4px);\r\n}\r\n\r\n.achievement-card:nth-child(3n+1) { --j: 1; }\r\n.achievement-card:nth-child(3n+2) { --j: 2; }\r\n.achievement-card:nth-child(3n+3) { --j: 3; }\r\n\r\n@keyframes cardFadeIn {\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.achievement-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: radial-gradient(circle at top right, rgba(255,255,255,0.8), transparent 70%);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.achievement-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 15px 35px rgba(30, 61, 89, 0.2);\r\n}\r\n\r\n.achievement-card:hover::before {\r\n  opacity: 1;\r\n}\r\n\r\n.achievement-card.unlocked {\r\n  background: linear-gradient(to right, rgba(30, 61, 89, 0.08), rgba(255, 255, 255, 0.9));\r\n  border-left: 5px solid #1e3d59;\r\n}\r\n\r\n.achievement-card.locked {\r\n  background: rgba(250, 250, 250, 0.85);\r\n  opacity: 0.9;\r\n  border-left: 5px solid #bdbdbd;\r\n}\r\n\r\n.achievement-icon {\r\n  width: 65px;\r\n  height: 65px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  transition: all 0.5s ease;\r\n  box-shadow: 0 8px 20px rgba(0,0,0,0.15);\r\n  flex-shrink: 0;\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.achievement-card.unlocked .achievement-icon {\r\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\r\n  box-shadow: 0 10px 25px rgba(30, 61, 89, 0.4);\r\n  transform: scale(1.05);\r\n}\r\n\r\n.achievement-card.unlocked:hover .achievement-icon {\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n.achievement-info {\r\n  flex: 1;\r\n}\r\n\r\n.achievement-info h3 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 18px;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n  position: relative;\r\n}\r\n\r\n.achievement-card.unlocked .achievement-info h3 {\r\n  background: linear-gradient(135deg, #2196F3, #1976D2);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n}\r\n\r\n.achievement-info p {\r\n  margin: 0 0 12px 0;\r\n  font-size: 14px;\r\n  color: #555;\r\n  line-height: 1.5;\r\n}\r\n\r\n.unlock-date, .locked-badge {\r\n  display: inline-block;\r\n  padding: 6px 14px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  margin-top: 10px;\r\n  font-weight: 500;\r\n  letter-spacing: 0.5px;\r\n  position: relative;\r\n  z-index: 2;\r\n  backdrop-filter: blur(2px);\r\n  box-shadow: 0 3px 10px rgba(0,0,0,0.06);\r\n}\r\n\r\n.unlock-date {\r\n  background-color: rgba(30, 61, 89, 0.1);\r\n  color: #1e3d59;\r\n  border: 1px solid rgba(30, 61, 89, 0.2);\r\n}\r\n\r\n.locked-badge {\r\n  background-color: rgba(224, 224, 224, 0.5);\r\n  color: #616161;\r\n  border: 1px solid rgba(224, 224, 224, 0.8);\r\n}\r\n\r\n.unlock-hint {\r\n  font-size: 13px;\r\n  color: #757575;\r\n  margin-top: 12px;\r\n  font-style: italic;\r\n  line-height: 1.5;\r\n  padding-left: 10px;\r\n  border-left: 3px solid #e0e0e0;\r\n  transition: all 0.3s ease;\r\n  background-color: rgba(250, 250, 250, 0.5);\r\n  padding: 8px 12px;\r\n  border-radius: 0 8px 8px 0;\r\n}\r\n\r\n.achievement-card:hover .unlock-hint {\r\n  border-left-color: #1e3d59;\r\n  color: #4e4e4e;\r\n  background-color: rgba(250, 250, 250, 0.8);\r\n}\r\n\r\n.check-achievements {\r\n  text-align: center;\r\n  margin: 40px 0 10px;\r\n}\r\n\r\n/* 修改按钮颜色为蓝色系 */\r\n.check-btn {\r\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\r\n  color: white;\r\n  border: none;\r\n  padding: 14px 30px;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 10px 30px rgba(30, 61, 89, 0.3);\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.check-btn:hover {\r\n  background: linear-gradient(135deg, #15324a, #42A5F5);\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 15px 35px rgba(30, 61, 89, 0.4);\r\n}\r\n\r\n.check-btn:active {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.check-btn:disabled {\r\n  background: linear-gradient(135deg, #B0BEC5, #90A4AE);\r\n  cursor: not-allowed;\r\n  transform: none;\r\n  box-shadow: 0 3px 10px rgba(176,190,197,0.3);\r\n}\r\n\r\n.error-message {\r\n  background-color: #fff5f5;\r\n  color: #e53935;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 15px;\r\n  border-left: 5px solid #e53935;\r\n  box-shadow: 0 8px 25px rgba(229,57,53,0.15);\r\n  animation: shake 0.5s ease-in-out;\r\n}\r\n\r\n@keyframes shake {\r\n  0%, 100% { transform: translateX(0); }\r\n  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\r\n  20%, 40%, 60%, 80% { transform: translateX(5px); }\r\n}\r\n\r\n.error-message i {\r\n  font-size: 24px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 70px 30px;\r\n  background-color: rgba(249, 249, 249, 0.6);\r\n  border-radius: 15px;\r\n  margin: 50px 0;\r\n  border: 1px dashed #e0e0e0;\r\n  animation: fadeIn 0.6s ease-out;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 70px;\r\n  color: #bdbdbd;\r\n  margin-bottom: 20px;\r\n  animation: bounceIn 1s ease-out;\r\n}\r\n\r\n@keyframes bounceIn {\r\n  0% { transform: scale(0.5); opacity: 0; }\r\n  50% { transform: scale(1.2); }\r\n  100% { transform: scale(1); opacity: 1; }\r\n}\r\n\r\n.empty-state p {\r\n  margin: 10px 0;\r\n  color: #424242;\r\n  font-size: 20px;\r\n}\r\n\r\n.empty-description {\r\n  font-size: 15px;\r\n  color: #757575;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  line-height: 1.6;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 300px;\r\n  margin: 40px 0;\r\n}\r\n\r\n.loading-message {\r\n  text-align: center;\r\n  color: #424242;\r\n}\r\n\r\n.loading-message i {\r\n  font-size: 50px;\r\n  color: #2196F3;\r\n  margin-bottom: 20px;\r\n  display: block;\r\n  animation: spin 1.5s infinite linear;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-message p {\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 检查成就模态框 */\r\n.checking-achievements-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  animation: fadeIn 0.3s ease-out;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.checking-content {\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n  padding: 40px 30px;\r\n  width: 95%;\r\n  max-width: 500px;\r\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  animation: modalSlideUp 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n@keyframes modalSlideUp {\r\n  from { transform: translateY(50px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.checking-content i.fa-spinner {\r\n  font-size: 70px;\r\n  color: #2196F3;\r\n  margin-bottom: 30px;\r\n  display: block;\r\n  animation: spin 1.5s infinite linear;\r\n}\r\n\r\n.checking-content p {\r\n  font-size: 22px;\r\n  color: #1e3d59;\r\n  margin-bottom: 25px;\r\n  font-weight: 500;\r\n}\r\n\r\n.check-result {\r\n  margin-top: 30px;\r\n  padding: 30px;\r\n  border-radius: 15px;\r\n  background-color: #f5f5f5;\r\n  animation: fadeIn 0.5s ease-out;\r\n  box-shadow: inset 0 2px 10px rgba(0,0,0,0.05);\r\n}\r\n\r\n.check-result.success {\r\n  background-color: #E8F5E9;\r\n}\r\n\r\n.check-result i {\r\n  font-size: 50px;\r\n  color: #607D8B;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.check-result.success i {\r\n  color: #4CAF50;\r\n  animation: trophy 1s ease-out;\r\n}\r\n\r\n@keyframes trophy {\r\n  0% { transform: scale(0.8) rotate(-15deg); opacity: 0; }\r\n  50% { transform: scale(1.2) rotate(10deg); }\r\n  100% { transform: scale(1) rotate(0); opacity: 1; }\r\n}\r\n\r\n.check-result p {\r\n  font-size: 20px;\r\n  margin-bottom: 20px;\r\n  color: #424242;\r\n}\r\n\r\n.dismiss-btn {\r\n  background-color: #607D8B;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 40px;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-top: 25px;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 8px 20px rgba(96,125,139,0.3);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.dismiss-btn::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\r\n  transform: translateX(-100%);\r\n  transition: transform 0.6s ease;\r\n}\r\n\r\n.dismiss-btn:hover {\r\n  background-color: #455A64;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 12px 30px rgba(96,125,139,0.4);\r\n}\r\n\r\n.dismiss-btn:hover::before {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.dismiss-btn.success {\r\n  background-color: #2196F3;\r\n  box-shadow: 0 8px 25px rgba(33, 150, 243, 0.3);\r\n}\r\n\r\n.dismiss-btn.success:hover {\r\n  background-color: #1976D2;\r\n  box-shadow: 0 12px 30px rgba(33, 150, 243, 0.4);\r\n}\r\n\r\n.new-achievements-list {\r\n  margin: 25px 0;\r\n}\r\n\r\n.new-achievement-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin: 15px 0;\r\n  padding: 18px;\r\n  background-color: rgba(33, 150, 243, 0.08);\r\n  border-radius: 12px;\r\n  font-size: 16px;\r\n  border-left: 3px solid #2196F3;\r\n  text-align: left;\r\n  animation: slideIn 0.5s ease-out;\r\n  animation-delay: calc(var(--k, 0) * 0.2s);\r\n  opacity: 0;\r\n  transform: translateX(-20px);\r\n  animation-fill-mode: forwards;\r\n  box-shadow: 0 4px 15px rgba(33, 150, 243, 0.15);\r\n}\r\n\r\n.new-achievement-item:nth-child(1) { --k: 1; }\r\n.new-achievement-item:nth-child(2) { --k: 2; }\r\n.new-achievement-item:nth-child(3) { --k: 3; }\r\n\r\n@keyframes slideIn {\r\n  to { transform: translateX(0); opacity: 1; }\r\n}\r\n\r\n.new-achievement-item i {\r\n  color: #2196F3;\r\n  font-size: 22px;\r\n  margin: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: rgba(33, 150, 243, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n/* 恢复卡片动画相关代码 */\r\n.summary-card:nth-child(1) { --i: 1; }\r\n.summary-card:nth-child(2) { --i: 2; }\r\n.summary-card:nth-child(3) { --i: 3; }\r\n\r\n@keyframes cardAppear {\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0) rotateX(0);\r\n  }\r\n}\r\n\r\n/* 修改脉冲动画使用蓝色 */\r\n@keyframes pulse {\r\n  0% { transform: scale(1.05); }\r\n  50% { transform: scale(1.15); box-shadow: 0 10px 30px rgba(30, 61, 89, 0.6); }\r\n  100% { transform: scale(1.05); }\r\n}\r\n\r\n/* 添加卡片标题的样式 */\r\n.card-title {\r\n  color: #1e3d59;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  opacity: 0.7;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}