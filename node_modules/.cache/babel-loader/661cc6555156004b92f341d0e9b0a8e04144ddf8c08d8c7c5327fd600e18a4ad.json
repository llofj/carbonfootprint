{"ast":null,"code":"import _objectSpread from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/EcoPaw/carbonfootprint_\\u672C\\u5730\\u7248/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null,\n      checkingAchievements: false,\n      checkCompleted: false,\n      hasNewAchievements: false\n    };\n  },\n  computed: {\n    unlockedAchievements: function unlockedAchievements() {\n      var _this = this;\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      return this.achievementTypes.filter(function (achievement) {\n        return achievement && achievement.id && _this.isUnlocked(achievement.id);\n      });\n    },\n    lockedAchievements: function lockedAchievements() {\n      var _this2 = this;\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      return this.achievementTypes.filter(function (achievement) {\n        return achievement && achievement.id && !_this2.isUnlocked(achievement.id);\n      });\n    },\n    sortedAchievements: function sortedAchievements() {\n      var _this3 = this;\n      // 检查achievementTypes是否存在且为数组\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      return _toConsumableArray(this.achievementTypes).sort(function (a, b) {\n        // 确保a和b对象都有id属性\n        if (!a || !b || !a.id || !b.id) return 0;\n        var isUnlockedA = _this3.isUnlocked(a.id);\n        var isUnlockedB = _this3.isUnlocked(b.id);\n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _this4.loading = true;\n            _this4.error = null;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 7;\n              break;\n            }\n            _this4.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 7:\n            _context.next = 9;\n            return _this4.loadUserRank();\n          case 9:\n            _context.next = 11;\n            return _this4.loadAchievementTypes();\n          case 11:\n            _context.next = 13;\n            return _this4.loadUserAchievements();\n          case 13:\n            if (!(!_this4.userRank || !_this4.userRank.carbon_reduction)) {\n              _context.next = 18;\n              break;\n            }\n            _context.next = 16;\n            return _this4.loadCarbonReduction();\n          case 16:\n            _context.next = 19;\n            break;\n          case 18:\n            _this4.carbonReduction = _this4.userRank.carbon_reduction;\n          case 19:\n            _context.next = 25;\n            break;\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading achievements data:', _context.t0);\n            _this4.error = '加载成就数据失败，请稍后再试';\n          case 25:\n            _context.prev = 25;\n            _this4.loading = false;\n            return _context.finish(25);\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 21, 25, 28]]);\n    }))();\n  },\n  methods: {\n    loadAchievementTypes: function loadAchievementTypes() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, validAchievements;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/api/achievement/types');\n            case 3:\n              response = _context2.sent;\n              // 确保响应数据是一个数组且数组中的每个项目都有id属性\n              if (response.data && Array.isArray(response.data)) {\n                // 深度复制数据以避免引用问题\n                validAchievements = response.data.filter(function (item) {\n                  return item && item.id;\n                }).map(function (item) {\n                  return _objectSpread({}, item);\n                }); // 确保复制后的数据仍然有效\n                if (validAchievements.length > 0) {\n                  _this5.achievementTypes = validAchievements;\n                } else {\n                  console.error('No valid achievement types found in response');\n                  _this5.achievementTypes = [];\n                }\n              } else {\n                console.error('Achievement types data is not an array or is empty:', response.data);\n                _this5.achievementTypes = [];\n              }\n              _context2.next = 12;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading achievement types:', _context2.t0);\n              _this5.achievementTypes = [];\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    loadUserAchievements: function loadUserAchievements() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              _context3.next = 4;\n              return axios.get('http://localhost:5000/api/achievement/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context3.sent;\n              _this6.userAchievements = response.data;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading user achievements:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    loadCarbonReduction: function loadCarbonReduction() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, rankResponse, carbonResponse;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              token = localStorage.getItem('token');\n              _context4.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              rankResponse = _context4.sent;\n              if (!(rankResponse.data && rankResponse.data.carbon_reduction)) {\n                _context4.next = 9;\n                break;\n              }\n              _this7.carbonReduction = rankResponse.data.carbon_reduction;\n              _context4.next = 13;\n              break;\n            case 9:\n              _context4.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              carbonResponse = _context4.sent;\n              _this7.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n            case 13:\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error loading carbon reduction:', _context4.t0);\n              _this7.carbonReduction = 0;\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 15]]);\n      }))();\n    },\n    loadUserRank: function loadUserRank() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              token = localStorage.getItem('token');\n              _context5.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context5.sent;\n              _this8.userRank = response.data;\n              _context5.next = 11;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error loading user rank:', _context5.t0);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 8]]);\n      }))();\n    },\n    isUnlocked: function isUnlocked(achievementId) {\n      // 确保userAchievements存在且为数组\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n    },\n    getUnlockDate: function getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      var achievement = this.userAchievements.find(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    getUnlockedAchievementsCount: function getUnlockedAchievementsCount() {\n      var _this9 = this;\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(function (a) {\n        return a && a.achievement_id && _this9.achievementTypes.some(function (type) {\n          return type && type.id === a.achievement_id;\n        });\n      }).length;\n    },\n    // 获取解锁成就的提示信息\n    getUnlockHint: function getUnlockHint(achievement) {\n      if (!achievement) return '';\n      var hints = {\n        'green_commuter': '多步行减少碳排放，累计超过5kg CO₂',\n        'carbon_saver': '单日减少碳排放量达到10kg',\n        'pet_lover': '升级您的虚拟宠物至5级',\n        'eco_warrior': '累计碳减排量达到50kg CO₂',\n        'stepping_master': '单日行走步数超过20000步',\n        'diet_hero': '减少肉类消费减排量达到10kg CO₂',\n        'pet_trainer': '通过训练获得1000经验值',\n        'pet_expert': '宠物等级达到10级',\n        'pet_master': '宠物等级达到20级',\n        'experience_collector': '累计获得5000经验值'\n      };\n      return hints[achievement.id] || '继续减碳行动解锁此成就';\n    },\n    checkNewAchievements: function checkNewAchievements() {\n      var _this10 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _this10.checkingAchievements = true;\n              _this10.checkCompleted = false;\n              _this10.hasNewAchievements = false;\n              _this10.error = null;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context6.next = 9;\n                break;\n              }\n              _this10.$router.push('/login');\n              return _context6.abrupt(\"return\");\n            case 9:\n              _context6.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/check', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              response = _context6.sent;\n              if (!(!response || !response.data)) {\n                _context6.next = 14;\n                break;\n              }\n              throw new Error('服务器返回无效响应');\n            case 14:\n              _this10.newAchievements = Array.isArray(response.data.newAchievements) ? response.data.newAchievements.filter(function (a) {\n                return a && a.id;\n              }) : [];\n              _this10.checkCompleted = true;\n              _this10.hasNewAchievements = _this10.newAchievements.length > 0;\n              if (!_this10.hasNewAchievements) {\n                _context6.next = 26;\n                break;\n              }\n              _context6.next = 20;\n              return _this10.loadUserAchievements();\n            case 20:\n              _context6.next = 22;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 22:\n              _context6.next = 24;\n              return _this10.loadUserRank();\n            case 24:\n              _context6.next = 26;\n              return _this10.loadCarbonReduction();\n            case 26:\n              _context6.next = 33;\n              break;\n            case 28:\n              _context6.prev = 28;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error checking achievements:', _context6.t0);\n              _this10.error = '检查新成就失败，请稍后再试';\n              _this10.checkCompleted = true;\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 28]]);\n      }))();\n    },\n    // 关闭检查结果模态框\n    dismissCheckResult: function dismissCheckResult() {\n      this.checkingAchievements = false;\n      this.checkCompleted = false;\n      this.hasNewAchievements = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","achievementTypes","userAchievements","newAchievements","carbonReduction","userRank","loading","error","checkingAchievements","checkCompleted","hasNewAchievements","computed","unlockedAchievements","_this","filter","achievement","id","isUnlocked","lockedAchievements","_this2","sortedAchievements","_this3","Array","isArray","length","_toConsumableArray","sort","a","b","isUnlockedA","isUnlockedB","localeCompare","created","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","loadUserRank","loadAchievementTypes","loadUserAchievements","carbon_reduction","loadCarbonReduction","t0","console","finish","stop","methods","_this5","_callee2","response","validAchievements","_callee2$","_context2","get","sent","item","map","_objectSpread","_this6","_callee3","_callee3$","_context3","headers","Authorization","concat","_this7","_callee4","rankResponse","carbonResponse","_callee4$","_context4","_this8","_callee5","_callee5$","_context5","achievementId","some","achievement_id","getUnlockDate","find","date","Date","toLocaleDateString","getUnlockedAchievementsCount","_this9","type","getUnlockHint","hints","checkNewAchievements","_this10","_callee6","_callee6$","_context6","Error","post","dismissCheckResult"],"sources":["D:\\EcoPaw\\carbonfootprint_本地版\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\n  <div class=\"achievements-page\">\n    <h2 class=\"page-title\">我的成就</h2>\n    \n    <!-- 错误提示 -->\n    <div v-if=\"error\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ error }}\n    </div>\n    \n    <!-- 加载中提示 -->\n    <div v-if=\"loading && !checkingAchievements\" class=\"loading-container\">\n      <div class=\"loading-message\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        <p>加载成就数据中...</p>\n      </div>\n    </div>\n    \n    <!-- 检查成就提示 -->\n    <div v-if=\"checkingAchievements\" class=\"checking-achievements-modal\">\n      <div class=\"checking-content\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        <p>正在检查新成就...</p>\n        <div v-if=\"checkCompleted && !hasNewAchievements\" class=\"check-result\">\n          <i class=\"fas fa-info-circle\"></i>\n          <p>暂未解锁新成就，继续努力！</p>\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn\">返回</button>\n        </div>\n        <div v-if=\"checkCompleted && hasNewAchievements\" class=\"check-result success\">\n          <i class=\"fas fa-trophy\"></i>\n          <p>恭喜！您解锁了新成就！</p>\n          <div class=\"new-achievements-list\">\n            <div v-for=\"achievement in newAchievements\" :key=\"achievement.id\" class=\"new-achievement-item\">\n              <i :class=\"['fas', achievement.icon]\"></i>\n              <span>{{ achievement.achievement_name }}</span>\n            </div>\n          </div>\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn success\">查看成就</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 成就内容 - 仅在加载完成且无错误时显示 -->\n    <div v-if=\"!loading && !error && !checkingAchievements\">\n      <div class=\"achievement-summary\">\n        <div class=\"summary-card\">\n          <div class=\"summary-card-content\">\n            <div class=\"card-title\">成就总数</div>\n            <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes && achievementTypes.length || 0 }}</div>\n          </div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <div class=\"summary-card-content\">\n            <div class=\"card-title\">减排总量</div>\n            <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\n          </div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <div class=\"summary-card-content\">\n            <div class=\"card-title\">排行榜排名</div>\n            <div class=\"summary-count rank-value\">#{{ userRank && userRank.rank ? userRank.rank : 'N/A' }}</div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"achievementTypes && achievementTypes.length > 0\">\n        <div class=\"achievements-status\">\n          <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\n            <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\n          </p>\n          <p v-else class=\"status-message locked-message\">\n            <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\n          </p>\n        </div>\n        \n        <!-- 已解锁成就 -->\n        <div v-if=\"unlockedAchievements.length > 0\">\n          <h3 class=\"section-title\">\n            <i class=\"fas fa-unlock-alt\"></i> 已解锁的成就\n          </h3>\n          \n          <div class=\"achievement-container\">\n            <div v-for=\"achievement in unlockedAchievements\" :key=\"achievement.id\" \n                 class=\"achievement-card unlocked\"\n                 :data-achievement-id=\"achievement.id\">\n              <div class=\"achievement-icon\">\n                <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\n              </div>\n              <div class=\"achievement-info\">\n                <h3>{{ achievement.name }}</h3>\n                <p>{{ achievement.description }}</p>\n                <div class=\"unlock-date\">\n                  解锁于: {{ getUnlockDate(achievement.id) }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 未解锁成就 -->\n        <h3 class=\"section-title\">\n          <i class=\"fas fa-lock\"></i> 待解锁的成就\n        </h3>\n        \n        <div class=\"achievement-container\">\n          <div v-for=\"achievement in lockedAchievements\" :key=\"'locked-'+achievement.id\" \n               class=\"achievement-card locked\"\n               :data-achievement-id=\"achievement.id\">\n            <div class=\"achievement-icon\">\n              <i :class=\"['fas', achievement.icon]\"></i>\n            </div>\n            <div class=\"achievement-info\">\n              <h3>{{ achievement.name }}</h3>\n              <p>{{ achievement.description }}</p>\n              <div class=\"locked-badge\">\n                <i class=\"fas fa-lock\"></i> 未解锁\n              </div>\n              <div class=\"unlock-hint\">\n                {{ getUnlockHint(achievement) }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-else-if=\"!loading\" class=\"empty-state\">\n        <i class=\"fas fa-award empty-icon\"></i>\n        <p>暂无可用成就</p>\n        <p class=\"empty-description\">系统尚未配置任何成就，请稍后再试</p>\n      </div>\n      \n      <div class=\"check-achievements\">\n        <button @click=\"checkNewAchievements\" class=\"check-btn\" :disabled=\"!achievementTypes || achievementTypes.length === 0 || loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{'fa-spin': checkingAchievements}\"></i> 检查新成就\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null,\n      checkingAchievements: false,\n      checkCompleted: false, \n      hasNewAchievements: false\n    };\n  },\n  computed: {\n    unlockedAchievements() {\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      \n      return this.achievementTypes.filter(achievement => \n        achievement && achievement.id && this.isUnlocked(achievement.id)\n      );\n    },\n    lockedAchievements() {\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      \n      return this.achievementTypes.filter(achievement => \n        achievement && achievement.id && !this.isUnlocked(achievement.id)\n      );\n    },\n    sortedAchievements() {\n      // 检查achievementTypes是否存在且为数组\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      \n      return [...this.achievementTypes].sort((a, b) => {\n        // 确保a和b对象都有id属性\n        if (!a || !b || !a.id || !b.id) return 0;\n        \n        const isUnlockedA = this.isUnlocked(a.id);\n        const isUnlockedB = this.isUnlocked(b.id);\n        \n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        \n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  async created() {\n    try {\n      this.loading = true;\n      this.error = null;\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 先获取排行榜数据\n      await this.loadUserRank();\n      // 获取成就类型\n      await this.loadAchievementTypes();\n      // 获取用户成就\n      await this.loadUserAchievements();\n      // 最后获取碳减排量，优先使用排行榜数据\n      if (!this.userRank || !this.userRank.carbon_reduction) {\n        await this.loadCarbonReduction();\n      } else {\n        this.carbonReduction = this.userRank.carbon_reduction;\n      }\n    } catch (error) {\n      console.error('Error loading achievements data:', error);\n      this.error = '加载成就数据失败，请稍后再试';\n    } finally {\n      this.loading = false;\n    }\n  },\n  methods: {\n    async loadAchievementTypes() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\n        \n        // 确保响应数据是一个数组且数组中的每个项目都有id属性\n        if (response.data && Array.isArray(response.data)) {\n          // 深度复制数据以避免引用问题\n          const validAchievements = response.data\n            .filter(item => item && item.id)\n            .map(item => ({...item}));\n            \n          // 确保复制后的数据仍然有效\n          if (validAchievements.length > 0) {\n            this.achievementTypes = validAchievements;\n          } else {\n            console.error('No valid achievement types found in response');\n            this.achievementTypes = [];\n          }\n        } else {\n          console.error('Achievement types data is not an array or is empty:', response.data);\n          this.achievementTypes = [];\n        }\n      } catch (error) {\n        console.error('Error loading achievement types:', error);\n        this.achievementTypes = [];\n        throw error; // 重新抛出错误以便上层处理\n      }\n    },\n    \n    async loadUserAchievements() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userAchievements = response.data;\n      } catch (error) {\n        console.error('Error loading user achievements:', error);\n      }\n    },\n    \n    async loadCarbonReduction() {\n      try {\n        const token = localStorage.getItem('token');\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\n          this.carbonReduction = rankResponse.data.carbon_reduction;\n        } else {\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n        }\n      } catch (error) {\n        console.error('Error loading carbon reduction:', error);\n        this.carbonReduction = 0;\n      }\n    },\n    \n    async loadUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userRank = response.data;\n      } catch (error) {\n        console.error('Error loading user rank:', error);\n      }\n    },\n    \n    isUnlocked(achievementId) {\n      // 确保userAchievements存在且为数组\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(a => a && a.achievement_id === achievementId);\n    },\n    \n    getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      const achievement = this.userAchievements.find(a => a && a.achievement_id === achievementId);\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    \n    getUnlockedAchievementsCount() {\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || \n          !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(a => \n        a && a.achievement_id && this.achievementTypes.some(type => type && type.id === a.achievement_id)\n      ).length;\n    },\n    \n    // 获取解锁成就的提示信息\n    getUnlockHint(achievement) {\n      if (!achievement) return '';\n      \n      const hints = {\n        'green_commuter': '多步行减少碳排放，累计超过5kg CO₂',\n        'carbon_saver': '单日减少碳排放量达到10kg',\n        'pet_lover': '升级您的虚拟宠物至5级',\n        'eco_warrior': '累计碳减排量达到50kg CO₂',\n        'stepping_master': '单日行走步数超过20000步',\n        'diet_hero': '减少肉类消费减排量达到10kg CO₂',\n        'pet_trainer': '通过训练获得1000经验值',\n        'pet_expert': '宠物等级达到10级',\n        'pet_master': '宠物等级达到20级',\n        'experience_collector': '累计获得5000经验值'\n      };\n      \n      return hints[achievement.id] || '继续减碳行动解锁此成就';\n    },\n    \n    async checkNewAchievements() {\n      try {\n        this.checkingAchievements = true;\n        this.checkCompleted = false;\n        this.hasNewAchievements = false;\n        this.error = null;\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (!response || !response.data) {\n          throw new Error('服务器返回无效响应');\n        }\n        \n        this.newAchievements = Array.isArray(response.data.newAchievements) \n          ? response.data.newAchievements.filter(a => a && a.id) \n          : [];\n        \n        this.checkCompleted = true;\n        this.hasNewAchievements = this.newAchievements.length > 0;\n        \n        if (this.hasNewAchievements) {\n          // 重新加载用户成就\n          await this.loadUserAchievements();\n          // 更新排行榜数据\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          await this.loadUserRank();\n          await this.loadCarbonReduction();\n        }\n      } catch (error) {\n        console.error('Error checking achievements:', error);\n        this.error = '检查新成就失败，请稍后再试';\n        this.checkCompleted = true;\n      }\n    },\n    \n    // 关闭检查结果模态框\n    dismissCheckResult() {\n      this.checkingAchievements = false;\n      this.checkCompleted = false;\n      this.hasNewAchievements = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.achievements-page {\n  max-width: 1050px;\n  min-height: 80vh;\n  margin: 0 auto;\n  padding: 30px 35px;\n  font-family: 'Arial', sans-serif;\n  position: relative;\n  background-color: rgba(255, 255, 255, 0.85);\n  border-radius: 20px;\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(12px);\n  border: 1px solid rgba(255, 255, 255, 0.6);\n  overflow: hidden;\n  z-index: 2;\n}\n\n/* 添加壁纸背景效果 */\n.achievements-page::before {\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('../assets/carbon_5.jpg');\n  background-size: cover;\n  background-position: center;\n  background-attachment: fixed;\n  filter: brightness(0.9) saturate(1.1) contrast(1.1);\n  z-index: -1;\n  opacity: 0.9;\n}\n\n/* 添加装饰元素 */\n.achievements-page::after {\n  content: '🏆';\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  font-size: 40px;\n  opacity: 0.1;\n  transform: rotate(15deg);\n  filter: blur(2px);\n  animation: float 6s ease-in-out infinite;\n  z-index: -1;\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0) rotate(15deg); }\n  50% { transform: translateY(-15px) rotate(12deg); }\n}\n\n/* 修改页面标题样式，与虚拟宠物页面保持一致 */\n.page-title {\n  color: #1e3d59;\n  text-align: center;\n  margin-bottom: 0.5rem;\n  font-size: 32px;\n  font-weight: 600;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n@media (max-width: 768px) {\n  .page-title {\n    font-size: 32px;\n  }\n  \n  .achievement-summary {\n    flex-direction: column;\n    gap: 20px;\n  }\n  \n  .summary-card {\n    padding: 18px;\n  }\n  \n  .summary-count, .carbon-value, .rank-value {\n    font-size: 36px;\n  }\n}\n\n.page-actions {\n  display: none;\n}\n\n/* 统一数据卡片样式 */\n.achievement-summary {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 40px;\n  perspective: 1000px;\n  padding: 10px 5px;\n}\n\n.summary-card {\n  flex: 1;\n  background: rgba(255, 255, 255, 0.85);\n  border-radius: 20px;\n  padding: 20px 15px;\n  text-align: center;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);\n  position: relative;\n  overflow: hidden;\n  animation: cardAppear 0.6s forwards;\n  animation-delay: calc(var(--i, 0) * 0.15s);\n  opacity: 0;\n  transform: translateY(15px) rotateX(10deg);\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.6);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 150px;\n}\n\n.summary-card h3 {\n  margin: 0 0 15px 0;\n  color: #1e3d59;\n  font-size: 16px;\n  font-weight: 500;\n  position: relative;\n  display: block;\n  letter-spacing: 0.5px;\n  z-index: 2;\n  opacity: 0.7;\n  text-align: center;\n}\n\n.summary-count {\n  font-size: 42px;\n  font-weight: 700;\n  margin: 10px 0 0 0;\n  position: relative;\n  display: block;\n  color: #1e3d59;\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 0 3px 5px rgba(0,0,0,0.05);\n  z-index: 2;\n  line-height: 1.2;\n}\n\n.carbon-value, .rank-value {\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 42px;\n  font-weight: 700;\n  line-height: 1.2;\n  margin: 10px 0 0 0;\n  display: block;\n}\n\n/* 调整卡片内部布局 */\n.summary-card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n}\n\n/* 将绿色系改为蓝色系 */\n.section-title {\n  margin: 40px 0 25px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid rgba(0,0,0,0.08);\n  color: #1e3d59;\n  font-size: 22px;\n  position: relative;\n  animation: fadeIn 0.6s ease-out;\n  animation-delay: 0.3s;\n  opacity: 0;\n  animation-fill-mode: forwards;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n}\n\n.section-title::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  width: 100px;\n  height: 3px;\n  border-radius: 1.5px;\n}\n\n.section-title:nth-of-type(1)::after {\n  background: linear-gradient(90deg, #1e3d59, #64B5F6);\n}\n\n.section-title:nth-of-type(2)::after {\n  background: linear-gradient(90deg, #e74c3c, #c0392b);\n}\n\n.section-title i {\n  margin-right: 12px;\n  position: relative;\n  top: 1px;\n}\n\n.section-title:nth-of-type(1) i {\n  color: #1e3d59;\n}\n\n.section-title:nth-of-type(2) i {\n  color: #e74c3c;\n}\n\n.achievements-status {\n  margin: 35px 0;\n  text-align: center;\n}\n\n.status-message {\n  padding: 16px 28px;\n  border-radius: 50px;\n  display: inline-block;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0 8px 20px rgba(0,0,0,0.1);\n  animation: fadeIn 0.6s ease-out;\n  animation-delay: 0.3s;\n  opacity: 0;\n  animation-fill-mode: forwards;\n  position: relative;\n  overflow: hidden;\n  backdrop-filter: blur(4px);\n}\n\n.status-message::before {\n  content: '';\n  position: absolute;\n  top: -10px;\n  left: -10px;\n  right: -10px;\n  bottom: -10px;\n  background: linear-gradient(45deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0) 100%);\n  transform: rotate(25deg) translateX(-200%);\n  animation: shimmer 3s infinite;\n}\n\n@keyframes shimmer {\n  to { transform: rotate(25deg) translateX(200%); }\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.unlocked-message {\n  background-color: rgba(33, 150, 243, 0.12);\n  color: #044a87;\n  border: 1px solid rgba(33, 150, 243, 0.3);\n}\n\n.locked-message {\n  background-color: rgba(158, 158, 158, 0.12);\n  color: #424242;\n  border: 1px solid rgba(158, 158, 158, 0.3);\n}\n\n.status-message i {\n  margin-right: 10px;\n  font-size: 18px;\n}\n\n.achievement-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 25px;\n  margin-bottom: 40px;\n  border-top: none;\n  padding-top: 5px;\n  perspective: 1000px;\n}\n\n.achievement-card {\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 16px;\n  padding: 22px;\n  display: flex;\n  align-items: center;\n  gap: 22px;\n  box-shadow: 0 10px 30px rgba(0,0,0,0.08);\n  transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);\n  border-left: 5px solid transparent;\n  position: relative;\n  overflow: hidden;\n  animation: cardFadeIn 0.6s forwards;\n  animation-delay: calc(var(--j, 0) * 0.1s);\n  opacity: 0;\n  transform: translateY(15px);\n  backdrop-filter: blur(4px);\n}\n\n.achievement-card:nth-child(3n+1) { --j: 1; }\n.achievement-card:nth-child(3n+2) { --j: 2; }\n.achievement-card:nth-child(3n+3) { --j: 3; }\n\n@keyframes cardFadeIn {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.achievement-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle at top right, rgba(255,255,255,0.8), transparent 70%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.achievement-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 35px rgba(30, 61, 89, 0.2);\n}\n\n.achievement-card:hover::before {\n  opacity: 1;\n}\n\n.achievement-card.unlocked {\n  background: linear-gradient(to right, rgba(30, 61, 89, 0.08), rgba(255, 255, 255, 0.9));\n  border-left: 5px solid #1e3d59;\n}\n\n.achievement-card.locked {\n  background: rgba(250, 250, 250, 0.85);\n  opacity: 0.9;\n  border-left: 5px solid #bdbdbd;\n}\n\n.achievement-icon {\n  width: 65px;\n  height: 65px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  transition: all 0.5s ease;\n  box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  flex-shrink: 0;\n  position: relative;\n  z-index: 2;\n}\n\n.achievement-card.unlocked .achievement-icon {\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\n  box-shadow: 0 10px 25px rgba(30, 61, 89, 0.4);\n  transform: scale(1.05);\n}\n\n.achievement-card.unlocked:hover .achievement-icon {\n  animation: pulse 2s infinite;\n}\n\n.achievement-info {\n  flex: 1;\n}\n\n.achievement-info h3 {\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  color: #2c3e50;\n  font-weight: 600;\n  position: relative;\n}\n\n.achievement-card.unlocked .achievement-info h3 {\n  background: linear-gradient(135deg, #2196F3, #1976D2);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n}\n\n.achievement-info p {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  color: #555;\n  line-height: 1.5;\n}\n\n.unlock-date, .locked-badge {\n  display: inline-block;\n  padding: 6px 14px;\n  border-radius: 50px;\n  font-size: 12px;\n  margin-top: 10px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  position: relative;\n  z-index: 2;\n  backdrop-filter: blur(2px);\n  box-shadow: 0 3px 10px rgba(0,0,0,0.06);\n}\n\n.unlock-date {\n  background-color: rgba(30, 61, 89, 0.1);\n  color: #1e3d59;\n  border: 1px solid rgba(30, 61, 89, 0.2);\n}\n\n.locked-badge {\n  background-color: rgba(224, 224, 224, 0.5);\n  color: #616161;\n  border: 1px solid rgba(224, 224, 224, 0.8);\n}\n\n.unlock-hint {\n  font-size: 13px;\n  color: #757575;\n  margin-top: 12px;\n  font-style: italic;\n  line-height: 1.5;\n  padding-left: 10px;\n  border-left: 3px solid #e0e0e0;\n  transition: all 0.3s ease;\n  background-color: rgba(250, 250, 250, 0.5);\n  padding: 8px 12px;\n  border-radius: 0 8px 8px 0;\n}\n\n.achievement-card:hover .unlock-hint {\n  border-left-color: #1e3d59;\n  color: #4e4e4e;\n  background-color: rgba(250, 250, 250, 0.8);\n}\n\n.check-achievements {\n  text-align: center;\n  margin: 40px 0 10px;\n}\n\n/* 修改按钮颜色为蓝色系 */\n.check-btn {\n  background: linear-gradient(135deg, #1e3d59, #64B5F6);\n  color: white;\n  border: none;\n  padding: 14px 30px;\n  border-radius: 50px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  box-shadow: 0 10px 30px rgba(30, 61, 89, 0.3);\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n  position: relative;\n  overflow: hidden;\n  letter-spacing: 0.5px;\n}\n\n.check-btn:hover {\n  background: linear-gradient(135deg, #15324a, #42A5F5);\n  transform: translateY(-5px);\n  box-shadow: 0 15px 35px rgba(30, 61, 89, 0.4);\n}\n\n.check-btn:active {\n  transform: translateY(-2px);\n}\n\n.check-btn:disabled {\n  background: linear-gradient(135deg, #B0BEC5, #90A4AE);\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: 0 3px 10px rgba(176,190,197,0.3);\n}\n\n.error-message {\n  background-color: #fff5f5;\n  color: #e53935;\n  padding: 20px;\n  border-radius: 12px;\n  margin-bottom: 30px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  font-size: 15px;\n  border-left: 5px solid #e53935;\n  box-shadow: 0 8px 25px rgba(229,57,53,0.15);\n  animation: shake 0.5s ease-in-out;\n}\n\n@keyframes shake {\n  0%, 100% { transform: translateX(0); }\n  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\n  20%, 40%, 60%, 80% { transform: translateX(5px); }\n}\n\n.error-message i {\n  font-size: 24px;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 70px 30px;\n  background-color: rgba(249, 249, 249, 0.6);\n  border-radius: 15px;\n  margin: 50px 0;\n  border: 1px dashed #e0e0e0;\n  animation: fadeIn 0.6s ease-out;\n}\n\n.empty-icon {\n  font-size: 70px;\n  color: #bdbdbd;\n  margin-bottom: 20px;\n  animation: bounceIn 1s ease-out;\n}\n\n@keyframes bounceIn {\n  0% { transform: scale(0.5); opacity: 0; }\n  50% { transform: scale(1.2); }\n  100% { transform: scale(1); opacity: 1; }\n}\n\n.empty-state p {\n  margin: 10px 0;\n  color: #424242;\n  font-size: 20px;\n}\n\n.empty-description {\n  font-size: 15px;\n  color: #757575;\n  max-width: 500px;\n  margin: 0 auto;\n  line-height: 1.6;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n  margin: 40px 0;\n}\n\n.loading-message {\n  text-align: center;\n  color: #424242;\n}\n\n.loading-message i {\n  font-size: 50px;\n  color: #2196F3;\n  margin-bottom: 20px;\n  display: block;\n  animation: spin 1.5s infinite linear;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n.loading-message p {\n  font-size: 18px;\n  font-weight: 500;\n}\n\n/* 检查成就模态框 */\n.checking-achievements-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.75);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n  backdrop-filter: blur(5px);\n}\n\n.checking-content {\n  background-color: #fff;\n  border-radius: 20px;\n  padding: 40px 30px;\n  width: 95%;\n  max-width: 500px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n  text-align: center;\n  animation: modalSlideUp 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n@keyframes modalSlideUp {\n  from { transform: translateY(50px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n}\n\n.checking-content i.fa-spinner {\n  font-size: 70px;\n  color: #2196F3;\n  margin-bottom: 30px;\n  display: block;\n  animation: spin 1.5s infinite linear;\n}\n\n.checking-content p {\n  font-size: 22px;\n  color: #1e3d59;\n  margin-bottom: 25px;\n  font-weight: 500;\n}\n\n.check-result {\n  margin-top: 30px;\n  padding: 30px;\n  border-radius: 15px;\n  background-color: #f5f5f5;\n  animation: fadeIn 0.5s ease-out;\n  box-shadow: inset 0 2px 10px rgba(0,0,0,0.05);\n}\n\n.check-result.success {\n  background-color: #E8F5E9;\n}\n\n.check-result i {\n  font-size: 50px;\n  color: #607D8B;\n  margin-bottom: 20px;\n}\n\n.check-result.success i {\n  color: #4CAF50;\n  animation: trophy 1s ease-out;\n}\n\n@keyframes trophy {\n  0% { transform: scale(0.8) rotate(-15deg); opacity: 0; }\n  50% { transform: scale(1.2) rotate(10deg); }\n  100% { transform: scale(1) rotate(0); opacity: 1; }\n}\n\n.check-result p {\n  font-size: 20px;\n  margin-bottom: 20px;\n  color: #424242;\n}\n\n.dismiss-btn {\n  background-color: #607D8B;\n  color: white;\n  border: none;\n  padding: 12px 40px;\n  border-radius: 50px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  margin-top: 25px;\n  transition: all 0.3s ease;\n  box-shadow: 0 8px 20px rgba(96,125,139,0.3);\n  position: relative;\n  overflow: hidden;\n}\n\n.dismiss-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.2), transparent);\n  transform: translateX(-100%);\n  transition: transform 0.6s ease;\n}\n\n.dismiss-btn:hover {\n  background-color: #455A64;\n  transform: translateY(-3px);\n  box-shadow: 0 12px 30px rgba(96,125,139,0.4);\n}\n\n.dismiss-btn:hover::before {\n  transform: translateX(100%);\n}\n\n.dismiss-btn.success {\n  background-color: #2196F3;\n  box-shadow: 0 8px 25px rgba(33, 150, 243, 0.3);\n}\n\n.dismiss-btn.success:hover {\n  background-color: #1976D2;\n  box-shadow: 0 12px 30px rgba(33, 150, 243, 0.4);\n}\n\n.new-achievements-list {\n  margin: 25px 0;\n}\n\n.new-achievement-item {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin: 15px 0;\n  padding: 18px;\n  background-color: rgba(33, 150, 243, 0.08);\n  border-radius: 12px;\n  font-size: 16px;\n  border-left: 3px solid #2196F3;\n  text-align: left;\n  animation: slideIn 0.5s ease-out;\n  animation-delay: calc(var(--k, 0) * 0.2s);\n  opacity: 0;\n  transform: translateX(-20px);\n  animation-fill-mode: forwards;\n  box-shadow: 0 4px 15px rgba(33, 150, 243, 0.15);\n}\n\n.new-achievement-item:nth-child(1) { --k: 1; }\n.new-achievement-item:nth-child(2) { --k: 2; }\n.new-achievement-item:nth-child(3) { --k: 3; }\n\n@keyframes slideIn {\n  to { transform: translateX(0); opacity: 1; }\n}\n\n.new-achievement-item i {\n  color: #2196F3;\n  font-size: 22px;\n  margin: 0;\n  width: 40px;\n  height: 40px;\n  background: rgba(33, 150, 243, 0.1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n}\n\n/* 恢复卡片动画相关代码 */\n.summary-card:nth-child(1) { --i: 1; }\n.summary-card:nth-child(2) { --i: 2; }\n.summary-card:nth-child(3) { --i: 3; }\n\n@keyframes cardAppear {\n  to {\n    opacity: 1;\n    transform: translateY(0) rotateX(0);\n  }\n}\n\n/* 修改脉冲动画使用蓝色 */\n@keyframes pulse {\n  0% { transform: scale(1.05); }\n  50% { transform: scale(1.15); box-shadow: 0 10px 30px rgba(30, 61, 89, 0.6); }\n  100% { transform: scale(1.05); }\n}\n\n/* 添加卡片标题的样式 */\n.card-title {\n  color: #1e3d59;\n  font-size: 16px;\n  font-weight: 500;\n  opacity: 0.7;\n  margin-bottom: 15px;\n  text-align: center;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}