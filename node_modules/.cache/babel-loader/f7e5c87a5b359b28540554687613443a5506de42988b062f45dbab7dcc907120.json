{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 10\n    };\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, userResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n            _this.$router.push('/');\n            return _context.abrupt(\"return\");\n          case 5:\n            _context.next = 7;\n            return axios.get('http://localhost:5000/api/auth/user', {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n          case 7:\n            userResponse = _context.sent;\n            _this.username = userResponse.data.username;\n            _context.next = 11;\n            return _this.loadLeaderboard();\n          case 11:\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading leaderboard data:', _context.t0);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 13]]);\n    }))();\n  },\n  methods: {\n    loadLeaderboard: function loadLeaderboard() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              token = localStorage.getItem('token');\n              _context2.next = 4;\n              return axios.get(\"http://localhost:5000/api/leaderboard?limit=\".concat(_this2.limit), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context2.sent;\n              _this2.leaderboard = response.data.leaderboard;\n              _this2.userRank = response.data.userRank;\n              _context2.next = 12;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading leaderboard:', _context2.t0);\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 9]]);\n      }))();\n    },\n    updateLeaderboard: function updateLeaderboard() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              _context3.next = 4;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              _context3.next = 6;\n              return _this3.loadLeaderboard();\n            case 6:\n              alert('排行榜已更新');\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error updating leaderboard:', _context3.t0);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 9]]);\n      }))();\n    },\n    isCurrentUser: function isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    getRankClass: function getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","leaderboard","userRank","username","limit","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","userResponse","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","get","headers","Authorization","concat","sent","loadLeaderboard","t0","console","error","stop","methods","_this2","_callee2","response","_callee2$","_context2","updateLeaderboard","_this3","_callee3","_callee3$","_context3","post","alert","isCurrentUser","userId","user_id","getRankClass","rank"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"leaderboard-page\">\r\n    <h2>碳减排排行榜</h2>\r\n    \r\n    <div class=\"leaderboard-header\">\r\n      <div class=\"update-section\">\r\n        <button @click=\"updateLeaderboard\" class=\"update-btn\">\r\n          <i class=\"fas fa-sync-alt\"></i> 更新排名\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"filter-section\">\r\n        <select v-model=\"limit\" @change=\"loadLeaderboard\">\r\n          <option :value=\"5\">显示前5名</option>\r\n          <option :value=\"10\">显示前10名</option>\r\n          <option :value=\"20\">显示前20名</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"my-rank\" v-if=\"userRank\">\r\n      <div class=\"rank-badge\">#{{ userRank.rank }}</div>\r\n      <div class=\"rank-details\">\r\n        <div class=\"rank-username\">{{ username }}</div>\r\n        <div class=\"rank-reduction\">减排量: {{ userRank.carbon_reduction.toFixed(1) }} kg CO₂</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"leaderboard-container\">\r\n      <div class=\"leaderboard-row header\">\r\n        <div class=\"rank-column\">排名</div>\r\n        <div class=\"user-column\">用户</div>\r\n        <div class=\"reduction-column\">减排量 (kg CO₂)</div>\r\n      </div>\r\n      \r\n      <div v-for=\"(entry, index) in leaderboard\" :key=\"index\" \r\n           class=\"leaderboard-row\" \r\n           :class=\"{ 'highlighted': isCurrentUser(entry.user_id) }\">\r\n        <div class=\"rank-column\">\r\n          <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">{{ entry.rank }}</div>\r\n        </div>\r\n        <div class=\"user-column\">{{ entry.username }}</div>\r\n        <div class=\"reduction-column\">{{ entry.carbon_reduction.toFixed(1) }}</div>\r\n      </div>\r\n      \r\n      <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\r\n        暂无排行数据\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"leaderboard-tips\">\r\n      <h3>如何提高排名?</h3>\r\n      <ul>\r\n        <li>多步行减少碳排放</li>\r\n        <li>通过碳排放计算器记录您的低碳行为</li>\r\n        <li>喂养并升级您的虚拟宠物</li>\r\n        <li>完成成就任务获得额外奖励</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      leaderboard: [],\r\n      userRank: null,\r\n      username: '',\r\n      limit: 10\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/');\r\n        return;\r\n      }\r\n      \r\n      // 获取用户信息\r\n      const userResponse = await axios.get('http://localhost:5000/api/auth/user', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      this.username = userResponse.data.username;\r\n      \r\n      await this.loadLeaderboard();\r\n    } catch (error) {\r\n      console.error('Error loading leaderboard data:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async loadLeaderboard() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5000/api/leaderboard?limit=${this.limit}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        this.leaderboard = response.data.leaderboard;\r\n        this.userRank = response.data.userRank;\r\n      } catch (error) {\r\n        console.error('Error loading leaderboard:', error);\r\n      }\r\n    },\r\n    \r\n    async updateLeaderboard() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        await this.loadLeaderboard();\r\n        alert('排行榜已更新');\r\n      } catch (error) {\r\n        console.error('Error updating leaderboard:', error);\r\n      }\r\n    },\r\n    \r\n    isCurrentUser(userId) {\r\n      return this.userRank && this.userRank.user_id === userId;\r\n    },\r\n    \r\n    getRankClass(rank) {\r\n      if (rank === 1) return 'gold';\r\n      if (rank === 2) return 'silver';\r\n      if (rank === 3) return 'bronze';\r\n      return '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.leaderboard-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.leaderboard-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.update-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 20px;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.update-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.filter-section select {\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.my-rank {\r\n  background-color: #e3f2fd;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.rank-badge {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n}\r\n\r\n.rank-details {\r\n  flex: 1;\r\n}\r\n\r\n.rank-username {\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n}\r\n\r\n.rank-reduction {\r\n  color: #4CAF50;\r\n  font-size: 14px;\r\n}\r\n\r\n.leaderboard-container {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.leaderboard-row {\r\n  display: flex;\r\n  padding: 12px 15px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.leaderboard-row:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.leaderboard-row.header {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.leaderboard-row.highlighted {\r\n  background-color: #e8f5e9;\r\n}\r\n\r\n.rank-column {\r\n  width: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-column {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.reduction-column {\r\n  width: 150px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  color: #4CAF50;\r\n  font-weight: bold;\r\n}\r\n\r\n.rank-number {\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background-color: #eee;\r\n  font-size: 14px;\r\n}\r\n\r\n.rank-number.gold {\r\n  background-color: #FFD700;\r\n  color: #fff;\r\n}\r\n\r\n.rank-number.silver {\r\n  background-color: #C0C0C0;\r\n  color: #fff;\r\n}\r\n\r\n.rank-number.bronze {\r\n  background-color: #CD7F32;\r\n  color: #fff;\r\n}\r\n\r\n.no-data {\r\n  padding: 30px;\r\n  text-align: center;\r\n  color: #999;\r\n  font-style: italic;\r\n}\r\n\r\n.leaderboard-tips {\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.leaderboard-tips h3 {\r\n  margin-top: 0;\r\n  color: #555;\r\n}\r\n\r\n.leaderboard-tips ul {\r\n  margin: 0;\r\n  padding-left: 20px;\r\n}\r\n\r\n.leaderboard-tips li {\r\n  margin-bottom: 8px;\r\n  color: #666;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}