{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"achievements-page\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"error-message\"\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"loading-container\"\n};\nvar _hoisted_4 = {\n  key: 2\n};\nvar _hoisted_5 = {\n  \"class\": \"achievement-summary\"\n};\nvar _hoisted_6 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_7 = {\n  \"class\": \"summary-count\"\n};\nvar _hoisted_8 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_9 = {\n  \"class\": \"summary-count carbon-value\"\n};\nvar _hoisted_10 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_11 = {\n  \"class\": \"summary-count rank-value\"\n};\nvar _hoisted_12 = {\n  key: 0\n};\nvar _hoisted_13 = {\n  \"class\": \"achievements-status\"\n};\nvar _hoisted_14 = {\n  key: 0,\n  \"class\": \"status-message unlocked-message\"\n};\nvar _hoisted_15 = {\n  key: 1,\n  \"class\": \"status-message locked-message\"\n};\nvar _hoisted_16 = {\n  \"class\": \"section-title\"\n};\nvar _hoisted_17 = {\n  key: 0,\n  \"class\": \"fas fa-unlock-alt\"\n};\nvar _hoisted_18 = {\n  key: 1,\n  \"class\": \"fas fa-info-circle\"\n};\nvar _hoisted_19 = {\n  \"class\": \"achievement-container\"\n};\nvar _hoisted_20 = [\"data-achievement-id\"];\nvar _hoisted_21 = {\n  \"class\": \"achievement-icon\"\n};\nvar _hoisted_22 = {\n  \"class\": \"achievement-info\"\n};\nvar _hoisted_23 = {\n  \"class\": \"unlock-date\"\n};\nvar _hoisted_24 = [\"data-achievement-id\"];\nvar _hoisted_25 = {\n  \"class\": \"achievement-icon\"\n};\nvar _hoisted_26 = {\n  \"class\": \"achievement-info\"\n};\nvar _hoisted_27 = {\n  key: 1,\n  \"class\": \"empty-state\"\n};\nvar _hoisted_28 = {\n  \"class\": \"check-achievements\"\n};\nvar _hoisted_29 = [\"disabled\"];\nvar _hoisted_30 = {\n  key: 2,\n  \"class\": \"new-achievements\"\n};\nvar _hoisted_31 = {\n  \"class\": \"achievement-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"我的成就\", -1 /* HOISTED */)), _createCommentVNode(\" 错误提示 \"), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.error), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 加载中提示 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    \"class\": \"loading-message\"\n  }, [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }), _createElementVNode(\"p\", null, \"加载成就数据中...\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 成就内容 - 仅在加载完成且无错误时显示 \"), !$data.loading && !$data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"成就总数\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, _toDisplayString($options.getUnlockedAchievementsCount()) + \" / \" + _toDisplayString($data.achievementTypes && $data.achievementTypes.length || 0), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"减排总量\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, _toDisplayString($data.userRank && $data.userRank.carbon_reduction ? Number($data.userRank.carbon_reduction).toFixed(1) : $data.carbonReduction.toFixed(1)) + \" kg CO₂\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"排行榜排名\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, \"#\" + _toDisplayString($data.userRank && $data.userRank.rank ? $data.userRank.rank : 'N/A'), 1 /* TEXT */)])]), $data.achievementTypes && $data.achievementTypes.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [$options.getUnlockedAchievementsCount() > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, [_cache[6] || (_cache[6] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-medal\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" 您已解锁 \" + _toDisplayString($options.getUnlockedAchievementsCount()) + \" 项成就，继续努力！ \", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_15, _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-lock\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 您尚未解锁任何成就，立即开始减碳行动吧！ \")])))]), _createElementVNode(\"h3\", _hoisted_16, [$options.getUnlockedAchievementsCount() > 0 ? (_openBlock(), _createElementBlock(\"i\", _hoisted_17)) : (_openBlock(), _createElementBlock(\"i\", _hoisted_18)), _createTextVNode(\" \" + _toDisplayString($options.getUnlockedAchievementsCount() > 0 ? '已解锁的成就' : '可获得的成就'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_ctx.achievement && _ctx.achievement.id && $options.isUnlocked(_ctx.achievement.id) ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($options.sortedAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: achievement && achievement.id,\n      \"class\": \"achievement-card unlocked\",\n      \"data-achievement-id\": achievement.id\n    }, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon]),\n      style: {\n        \"color\": \"white\"\n      }\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"h3\", null, _toDisplayString(achievement.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(achievement.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_23, \" 解锁于: \" + _toDisplayString($options.getUnlockDate(achievement.id)), 1 /* TEXT */)])], 8 /* PROPS */, _hoisted_20);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _ctx.achievement && _ctx.achievement.id && !$options.isUnlocked(_ctx.achievement.id) ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 1\n  }, _renderList($options.sortedAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'locked-' + (achievement && achievement.id),\n      \"class\": \"achievement-card locked\",\n      \"data-achievement-id\": achievement.id\n    }, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon])\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"h3\", null, _toDisplayString(achievement.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(achievement.description), 1 /* TEXT */), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n      \"class\": \"locked-badge\"\n    }, \" 未解锁 \", -1 /* HOISTED */))])], 8 /* PROPS */, _hoisted_24);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])) : !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-award empty-icon\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"暂无可用成就\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n    \"class\": \"empty-description\"\n  }, \"系统尚未配置任何成就，请稍后再试\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.checkNewAchievements && $options.checkNewAchievements.apply($options, arguments);\n    }),\n    \"class\": \"check-btn\",\n    disabled: !$data.achievementTypes || $data.achievementTypes.length === 0 || $data.loading\n  }, [_createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas fa-sync-alt\", {\n      'fa-spin': $data.loading\n    }])\n  }, null, 2 /* CLASS */), _cache[10] || (_cache[10] = _createTextVNode(\" 检查新成就 \"))], 8 /* PROPS */, _hoisted_29)]), $data.newAchievements && $data.newAchievements.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"新解锁成就\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_31, [_ctx.achievement ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList($data.newAchievements, function (achievement) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: achievement && achievement.id,\n      \"class\": \"new-achievement\"\n    }, [_createElementVNode(\"i\", {\n      \"class\": _normalizeClass(['fas', achievement.icon])\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", null, _toDisplayString(achievement.achievement_name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","error","_hoisted_2","_createTextVNode","_toDisplayString","loading","_hoisted_3","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","$options","getUnlockedAchievementsCount","achievementTypes","length","_hoisted_8","_hoisted_9","userRank","carbon_reduction","Number","toFixed","carbonReduction","_hoisted_10","_hoisted_11","rank","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_ctx","achievement","id","isUnlocked","_Fragment","_renderList","sortedAchievements","_hoisted_21","_normalizeClass","icon","style","_hoisted_22","name","description","_hoisted_23","getUnlockDate","_hoisted_20","_hoisted_25","_hoisted_26","_hoisted_24","_hoisted_27","_hoisted_28","onClick","checkNewAchievements","apply","arguments","disabled","_hoisted_29","newAchievements","_hoisted_30","_hoisted_31","achievement_name"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\n  <div class=\"achievements-page\">\n    <h2>我的成就</h2>\n    \n    <!-- 错误提示 -->\n    <div v-if=\"error\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ error }}\n    </div>\n    \n    <!-- 加载中提示 -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <div class=\"loading-message\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        <p>加载成就数据中...</p>\n      </div>\n    </div>\n    \n    <!-- 成就内容 - 仅在加载完成且无错误时显示 -->\n    <div v-if=\"!loading && !error\">\n      <div class=\"achievement-summary\">\n        <div class=\"summary-card\">\n          <h3>成就总数</h3>\n          <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes && achievementTypes.length || 0 }}</div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <h3>减排总量</h3>\n          <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\n        </div>\n        \n        <div class=\"summary-card\">\n          <h3>排行榜排名</h3>\n          <div class=\"summary-count rank-value\">#{{ userRank && userRank.rank ? userRank.rank : 'N/A' }}</div>\n        </div>\n      </div>\n      \n      <div v-if=\"achievementTypes && achievementTypes.length > 0\">\n        <div class=\"achievements-status\">\n          <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\n            <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\n          </p>\n          <p v-else class=\"status-message locked-message\">\n            <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\n          </p>\n        </div>\n        \n        <h3 class=\"section-title\">\n          <i v-if=\"getUnlockedAchievementsCount() > 0\" class=\"fas fa-unlock-alt\"></i>\n          <i v-else class=\"fas fa-info-circle\"></i> \n          {{ getUnlockedAchievementsCount() > 0 ? '已解锁的成就' : '可获得的成就' }}\n        </h3>\n        \n        <div class=\"achievement-container\">\n          <div v-for=\"achievement in sortedAchievements\" :key=\"achievement && achievement.id\" \n               v-if=\"achievement && achievement.id && isUnlocked(achievement.id)\"\n               class=\"achievement-card unlocked\"\n               :data-achievement-id=\"achievement.id\">\n            <div class=\"achievement-icon\">\n              <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\n            </div>\n            <div class=\"achievement-info\">\n              <h3>{{ achievement.name }}</h3>\n              <p>{{ achievement.description }}</p>\n              <div class=\"unlock-date\">\n                解锁于: {{ getUnlockDate(achievement.id) }}\n              </div>\n            </div>\n          </div>\n          \n          <div v-for=\"achievement in sortedAchievements\" :key=\"'locked-'+(achievement && achievement.id)\" \n               v-if=\"achievement && achievement.id && !isUnlocked(achievement.id)\"\n               class=\"achievement-card locked\"\n               :data-achievement-id=\"achievement.id\">\n            <div class=\"achievement-icon\">\n              <i :class=\"['fas', achievement.icon]\"></i>\n            </div>\n            <div class=\"achievement-info\">\n              <h3>{{ achievement.name }}</h3>\n              <p>{{ achievement.description }}</p>\n              <div class=\"locked-badge\">\n                未解锁\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"!loading\" class=\"empty-state\">\n        <i class=\"fas fa-award empty-icon\"></i>\n        <p>暂无可用成就</p>\n        <p class=\"empty-description\">系统尚未配置任何成就，请稍后再试</p>\n      </div>\n      \n      <div class=\"check-achievements\">\n        <button @click=\"checkNewAchievements\" class=\"check-btn\" :disabled=\"!achievementTypes || achievementTypes.length === 0 || loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{'fa-spin': loading}\"></i> 检查新成就\n        </button>\n      </div>\n      \n      <div v-if=\"newAchievements && newAchievements.length > 0\" class=\"new-achievements\">\n        <h3>新解锁成就</h3>\n        <div class=\"achievement-list\">\n          <div v-for=\"achievement in newAchievements\" :key=\"achievement && achievement.id\" \n               v-if=\"achievement\"\n               class=\"new-achievement\">\n            <i :class=\"['fas', achievement.icon]\"></i>\n            <span>{{ achievement.achievement_name }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null\n    };\n  },\n  computed: {\n    sortedAchievements() {\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      \n      return [...this.achievementTypes].sort((a, b) => {\n        if (!a || !b || !a.id || !b.id) return 0;\n        \n        const isUnlockedA = this.isUnlocked(a.id);\n        const isUnlockedB = this.isUnlocked(b.id);\n        \n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        \n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  async created() {\n    try {\n      this.loading = true;\n      this.error = null;\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 先获取排行榜数据\n      await this.loadUserRank();\n      // 获取成就类型\n      await this.loadAchievementTypes();\n      // 获取用户成就\n      await this.loadUserAchievements();\n      // 最后获取碳减排量，优先使用排行榜数据\n      if (!this.userRank || !this.userRank.carbon_reduction) {\n        await this.loadCarbonReduction();\n      } else {\n        this.carbonReduction = this.userRank.carbon_reduction;\n      }\n    } catch (error) {\n      console.error('Error loading achievements data:', error);\n      this.error = '加载成就数据失败，请稍后再试';\n    } finally {\n      this.loading = false;\n    }\n  },\n  methods: {\n    async loadAchievementTypes() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\n        \n        // 确保响应数据是一个数组且数组中的每个项目都有id属性\n        if (response.data && Array.isArray(response.data)) {\n          // 深度复制数据以避免引用问题\n          const validAchievements = response.data\n            .filter(item => item && item.id)\n            .map(item => ({...item}));\n            \n          // 确保复制后的数据仍然有效\n          if (validAchievements.length > 0) {\n            this.achievementTypes = validAchievements;\n          } else {\n            console.error('No valid achievement types found in response');\n            this.achievementTypes = [];\n          }\n        } else {\n          console.error('Achievement types data is not an array or is empty:', response.data);\n          this.achievementTypes = [];\n        }\n      } catch (error) {\n        console.error('Error loading achievement types:', error);\n        this.achievementTypes = [];\n        throw error; // 重新抛出错误以便上层处理\n      }\n    },\n    \n    async loadUserAchievements() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userAchievements = response.data;\n      } catch (error) {\n        console.error('Error loading user achievements:', error);\n      }\n    },\n    \n    async loadCarbonReduction() {\n      try {\n        const token = localStorage.getItem('token');\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\n          this.carbonReduction = rankResponse.data.carbon_reduction;\n        } else {\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n        }\n      } catch (error) {\n        console.error('Error loading carbon reduction:', error);\n        this.carbonReduction = 0;\n      }\n    },\n    \n    async loadUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        this.userRank = response.data;\n      } catch (error) {\n        console.error('Error loading user rank:', error);\n      }\n    },\n    \n    isUnlocked(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(a => a && a.achievement_id === achievementId);\n    },\n    \n    getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      const achievement = this.userAchievements.find(a => a && a.achievement_id === achievementId);\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    \n    getUnlockedAchievementsCount() {\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || \n          !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(a => \n        a && a.achievement_id && this.achievementTypes.some(type => type && type.id === a.achievement_id)\n      ).length;\n    },\n    \n    async checkNewAchievements() {\n      try {\n        this.loading = true;\n        this.error = null;\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        if (!response || !response.data) {\n          throw new Error('服务器返回无效响应');\n        }\n        \n        this.newAchievements = Array.isArray(response.data.newAchievements) \n          ? response.data.newAchievements.filter(a => a && a.id) \n          : [];\n        \n        if (this.newAchievements.length > 0) {\n          alert('恭喜！您解锁了新成就');\n          // 重新加载用户成就\n          await this.loadUserAchievements();\n          // 更新排行榜数据\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          await this.loadUserRank();\n          await this.loadCarbonReduction();\n        } else {\n          alert('暂未解锁新成就，继续努力！');\n        }\n      } catch (error) {\n        console.error('Error checking achievements:', error);\n        this.error = '检查新成就失败，请稍后再试';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.achievements-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.achievement-summary {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.summary-card {\n  flex: 1;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.summary-card h3 {\n  margin-top: 0;\n  color: #555;\n  font-size: 14px;\n}\n\n.summary-count {\n  font-size: 24px;\n  font-weight: bold;\n  color: #2196F3;\n}\n\n.carbon-value {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.rank-value {\n  background: linear-gradient(135deg, #2196F3, #03A9F4);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  font-size: 26px;\n  font-weight: bold;\n}\n\n.section-title {\n  margin: 30px 0 15px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #f0f0f0;\n  color: #424242;\n}\n\n.section-title i {\n  margin-right: 8px;\n  color: #4CAF50;\n}\n\n.achievements-status {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.status-message {\n  padding: 10px 15px;\n  border-radius: 8px;\n  display: inline-block;\n}\n\n.unlocked-message {\n  background-color: rgba(76, 175, 80, 0.1);\n  color: #2E7D32;\n}\n\n.locked-message {\n  background-color: rgba(158, 158, 158, 0.1);\n  color: #616161;\n}\n\n.status-message i {\n  margin-right: 8px;\n}\n\n.achievement-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.achievement-card {\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n  border-left: 4px solid transparent;\n}\n\n.achievement-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 15px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked {\n  background: linear-gradient(to right, #e8f5e9, #f5f5f5);\n  border-left: 4px solid #4CAF50;\n}\n\n.achievement-card.locked {\n  background-color: #f5f5f5;\n  opacity: 0.8;\n  border-left: 4px solid #e0e0e0;\n}\n\n.achievement-icon {\n  width: 50px;\n  height: 50px;\n  background-color: #e0e0e0;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.2rem;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.achievement-card.unlocked .achievement-icon {\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\n  box-shadow: 0 4px 8px rgba(76,175,80,0.3);\n}\n\n.achievement-info {\n  flex: 1;\n}\n\n.achievement-info h3 {\n  margin: 0 0 5px 0;\n  font-size: 16px;\n}\n\n.achievement-info p {\n  margin: 0 0 10px 0;\n  font-size: 12px;\n  color: #666;\n}\n\n.unlock-date {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: rgba(76,175,80,0.2);\n  color: #2E7D32;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.locked-badge {\n  display: inline-block;\n  padding: 4px 8px;\n  background-color: #e0e0e0;\n  color: #757575;\n  border-radius: 4px;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.check-achievements {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.check-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.check-btn:hover {\n  background-color: #0d8bf0;\n}\n\n.new-achievements {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n}\n\n.new-achievements h3 {\n  margin-top: 0;\n  color: #333;\n  font-size: 18px;\n}\n\n.achievement-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.new-achievement {\n  background-color: #e8f5e9;\n  border-radius: 4px;\n  padding: 8px 12px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n}\n\n.new-achievement i {\n  color: #4CAF50;\n}\n\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 200px;\n  margin: 30px 0;\n}\n\n.loading-message {\n  text-align: center;\n  color: #757575;\n}\n\n.loading-message i {\n  font-size: 40px;\n  color: #2196F3;\n  margin-bottom: 15px;\n  display: block;\n}\n\n.check-btn:disabled {\n  background-color: #b0bec5;\n  cursor: not-allowed;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #c62828;\n  padding: 15px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  border-left: 4px solid #c62828;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 40px 20px;\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  margin: 30px 0;\n}\n\n.empty-icon {\n  font-size: 50px;\n  color: #bdbdbd;\n  margin-bottom: 15px;\n}\n\n.empty-state p {\n  margin: 5px 0;\n  color: #616161;\n}\n\n.empty-description {\n  font-size: 14px;\n  color: #9e9e9e;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}