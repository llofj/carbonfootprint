{"ast":null,"code":"import _objectSpread from \"D:/computer_design/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// API 基础配置\nvar isDevelopment = process.env.NODE_ENV === 'development';\n\n// 根据环境设置基础 URL - 确保连接到正确的数据库服务器\nvar baseURL = isDevelopment ? 'http://localhost:5000/api' // 开发环境 - 连接本地服务器\n: 'https://api.ecopaw.com'; // 生产环境\n\n// API 端点\nexport var API_URLS = {\n  login: '/auth/login',\n  logout: '/auth/logout',\n  register: '/auth/register',\n  captcha: '/auth/captcha',\n  profile: '/user/profile',\n  calculator: '/carbon/calculate',\n  pet: '/pet',\n  achievements: '/achievement',\n  ranking: '/leaderboard'\n};\n\n// axios 配置\nexport var axiosConfig = {\n  baseURL: baseURL,\n  timeout: 15000,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, image/svg+xml'\n  }\n};\n\n// 请求拦截器配置\nexport var requestInterceptor = function requestInterceptor(config) {\n  console.log('请求拦截器处理请求:', config.url);\n\n  // 如果是获取验证码的请求，修改 headers\n  if (config.url === API_URLS.captcha) {\n    config.headers['Accept'] = 'image/svg+xml';\n    config.responseType = 'text';\n    return config;\n  }\n  var token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = \"Bearer \".concat(token);\n  }\n\n  // 添加调试log\n  if (config.data) {\n    try {\n      // 清理敏感信息后的日志\n      var logData = _objectSpread({}, config.data);\n      if (logData.password) {\n        logData.password = '******';\n      }\n      console.log('请求数据:', logData);\n    } catch (e) {\n      console.error('请求日志记录失败:', e);\n    }\n  }\n  return config;\n};\n\n// 响应拦截器配置\nexport var responseInterceptor = {\n  success: function success(response) {\n    console.log('响应拦截器接收到响应:', {\n      url: response.config.url,\n      status: response.status,\n      statusText: response.statusText\n    });\n    return response;\n  },\n  error: function error(_error) {\n    console.error('API Error:', _error);\n\n    // 如果有响应\n    if (_error.response) {\n      console.log('错误响应信息:', {\n        status: _error.response.status,\n        statusText: _error.response.statusText,\n        data: _error.response.data\n      });\n\n      // 处理401错误（未授权）\n      if (_error.response.status === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        if (window.location.pathname !== '/login') {\n          window.location.href = '/login';\n        }\n      }\n    } else if (_error.request) {\n      // 请求已发送但没有收到响应\n      console.log('没有收到响应:', _error.request);\n    } else {\n      // 设置请求时发生错误\n      console.log('请求设置错误:', _error.message);\n    }\n    return Promise.reject(_error);\n  }\n};","map":{"version":3,"names":["isDevelopment","process","env","NODE_ENV","baseURL","API_URLS","login","logout","register","captcha","profile","calculator","pet","achievements","ranking","axiosConfig","timeout","withCredentials","headers","requestInterceptor","config","console","log","url","responseType","token","localStorage","getItem","Authorization","concat","data","logData","_objectSpread","password","e","error","responseInterceptor","success","response","status","statusText","removeItem","window","location","pathname","href","request","message","Promise","reject"],"sources":["D:/computer_design/src/config/api.js"],"sourcesContent":["// API 基础配置\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\n// 根据环境设置基础 URL - 确保连接到正确的数据库服务器\r\nconst baseURL = isDevelopment \r\n  ? 'http://localhost:5000/api'  // 开发环境 - 连接本地服务器\r\n  : 'https://api.ecopaw.com';    // 生产环境\r\n\r\n// API 端点\r\nexport const API_URLS = {\r\n  login: '/auth/login',\r\n  logout: '/auth/logout',\r\n  register: '/auth/register',\r\n  captcha: '/auth/captcha',\r\n  profile: '/user/profile',\r\n  calculator: '/carbon/calculate',\r\n  pet: '/pet',\r\n  achievements: '/achievement',\r\n  ranking: '/leaderboard'\r\n};\r\n\r\n// axios 配置\r\nexport const axiosConfig = {\r\n  baseURL,\r\n  timeout: 15000,\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json, image/svg+xml'\r\n  }\r\n};\r\n\r\n// 请求拦截器配置\r\nexport const requestInterceptor = (config) => {\r\n  console.log('请求拦截器处理请求:', config.url);\r\n  \r\n  // 如果是获取验证码的请求，修改 headers\r\n  if (config.url === API_URLS.captcha) {\r\n    config.headers['Accept'] = 'image/svg+xml';\r\n    config.responseType = 'text';\r\n    return config;\r\n  }\r\n  \r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  \r\n  // 添加调试log\r\n  if (config.data) {\r\n    try {\r\n      // 清理敏感信息后的日志\r\n      const logData = { ...config.data };\r\n      if (logData.password) {\r\n        logData.password = '******';\r\n      }\r\n      console.log('请求数据:', logData);\r\n    } catch (e) {\r\n      console.error('请求日志记录失败:', e);\r\n    }\r\n  }\r\n  \r\n  return config;\r\n};\r\n\r\n// 响应拦截器配置\r\nexport const responseInterceptor = {\r\n  success: (response) => {\r\n    console.log('响应拦截器接收到响应:', {\r\n      url: response.config.url,\r\n      status: response.status,\r\n      statusText: response.statusText\r\n    });\r\n    return response;\r\n  },\r\n  error: (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    // 如果有响应\r\n    if (error.response) {\r\n      console.log('错误响应信息:', {\r\n        status: error.response.status,\r\n        statusText: error.response.statusText,\r\n        data: error.response.data\r\n      });\r\n      \r\n      // 处理401错误（未授权）\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        if (window.location.pathname !== '/login') {\r\n          window.location.href = '/login';\r\n        }\r\n      }\r\n    } else if (error.request) {\r\n      // 请求已发送但没有收到响应\r\n      console.log('没有收到响应:', error.request);\r\n    } else {\r\n      // 设置请求时发生错误\r\n      console.log('请求设置错误:', error.message);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n}; "],"mappings":";;AAAA;AACA,IAAMA,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;;AAE5D;AACA,IAAMC,OAAO,GAAGJ,aAAa,GACzB,2BAA2B,CAAE;AAAA,EAC7B,wBAAwB,CAAC,CAAI;;AAEjC;AACA,OAAO,IAAMK,QAAQ,GAAG;EACtBC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,cAAc;EACtBC,QAAQ,EAAE,gBAAgB;EAC1BC,OAAO,EAAE,eAAe;EACxBC,OAAO,EAAE,eAAe;EACxBC,UAAU,EAAE,mBAAmB;EAC/BC,GAAG,EAAE,MAAM;EACXC,YAAY,EAAE,cAAc;EAC5BC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,IAAMC,WAAW,GAAG;EACzBX,OAAO,EAAPA,OAAO;EACPY,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC;;AAED;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,MAAM,EAAK;EAC5CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,MAAM,CAACG,GAAG,CAAC;;EAErC;EACA,IAAIH,MAAM,CAACG,GAAG,KAAKlB,QAAQ,CAACI,OAAO,EAAE;IACnCW,MAAM,CAACF,OAAO,CAAC,QAAQ,CAAC,GAAG,eAAe;IAC1CE,MAAM,CAACI,YAAY,GAAG,MAAM;IAC5B,OAAOJ,MAAM;EACf;EAEA,IAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTL,MAAM,CAACF,OAAO,CAACU,aAAa,aAAAC,MAAA,CAAaJ,KAAK,CAAE;EAClD;;EAEA;EACA,IAAIL,MAAM,CAACU,IAAI,EAAE;IACf,IAAI;MACF;MACA,IAAMC,OAAO,GAAAC,aAAA,KAAQZ,MAAM,CAACU,IAAI,CAAE;MAClC,IAAIC,OAAO,CAACE,QAAQ,EAAE;QACpBF,OAAO,CAACE,QAAQ,GAAG,QAAQ;MAC7B;MACAZ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAES,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVb,OAAO,CAACc,KAAK,CAAC,WAAW,EAAED,CAAC,CAAC;IAC/B;EACF;EAEA,OAAOd,MAAM;AACf,CAAC;;AAED;AACA,OAAO,IAAMgB,mBAAmB,GAAG;EACjCC,OAAO,EAAE,SAATA,OAAOA,CAAGC,QAAQ,EAAK;IACrBjB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;MACzBC,GAAG,EAAEe,QAAQ,CAAClB,MAAM,CAACG,GAAG;MACxBgB,MAAM,EAAED,QAAQ,CAACC,MAAM;MACvBC,UAAU,EAAEF,QAAQ,CAACE;IACvB,CAAC,CAAC;IACF,OAAOF,QAAQ;EACjB,CAAC;EACDH,KAAK,EAAE,SAAPA,KAAKA,CAAGA,MAAK,EAAK;IAChBd,OAAO,CAACc,KAAK,CAAC,YAAY,EAAEA,MAAK,CAAC;;IAElC;IACA,IAAIA,MAAK,CAACG,QAAQ,EAAE;MAClBjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;QACrBiB,MAAM,EAAEJ,MAAK,CAACG,QAAQ,CAACC,MAAM;QAC7BC,UAAU,EAAEL,MAAK,CAACG,QAAQ,CAACE,UAAU;QACrCV,IAAI,EAAEK,MAAK,CAACG,QAAQ,CAACR;MACvB,CAAC,CAAC;;MAEF;MACA,IAAIK,MAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACjCb,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;QAChCf,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;QACnC,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAE;UACzCF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,QAAQ;QACjC;MACF;IACF,CAAC,MAAM,IAAIV,MAAK,CAACW,OAAO,EAAE;MACxB;MACAzB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,MAAK,CAACW,OAAO,CAAC;IACvC,CAAC,MAAM;MACL;MACAzB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,MAAK,CAACY,OAAO,CAAC;IACvC;IAEA,OAAOC,OAAO,CAACC,MAAM,CAACd,MAAK,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}