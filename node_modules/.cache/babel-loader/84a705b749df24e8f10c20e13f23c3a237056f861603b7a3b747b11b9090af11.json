{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nvar api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, function (error) {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\napi.interceptors.response.use(responseInterceptor.success, responseInterceptor.error);\nexport default {\n  data: function data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: ''\n    };\n  },\n  computed: {\n    totalPages: function totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard: function displayedLeaderboard() {\n      var start = (this.currentPage - 1) * this.pageSize;\n      var end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, userResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 5;\n              break;\n            }\n            _this.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 5:\n            _context.next = 7;\n            return api.get('/auth/user');\n          case 7:\n            userResponse = _context.sent;\n            _this.username = userResponse.data.username;\n            console.log('成功获取用户信息:', _this.username);\n\n            // 加载排行榜数据\n            _context.next = 12;\n            return _this.loadLeaderboard();\n          case 12:\n            _context.next = 18;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading user data:', _context.t0);\n            _this.handleError(_context.t0, '加载用户数据失败');\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 14]]);\n    }))();\n  },\n  methods: {\n    // 处理错误的通用方法\n    handleError: function handleError(error, defaultMessage) {\n      var errorMsg = defaultMessage;\n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = \"\".concat(defaultMessage, \": \").concat(error.message);\n      }\n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    loadLeaderboard: function loadLeaderboard() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this2.loading = true;\n              _this2.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context2.next = 7;\n                break;\n              }\n              _this2.$router.push('/login');\n              return _context2.abrupt(\"return\");\n            case 7:\n              console.log('正在加载排行榜数据，限制:', _this2.limit);\n\n              // 直接使用axios而不是api实例，避免可能的拦截器问题\n              _context2.next = 10;\n              return axios.get(\"http://localhost:5000/api/leaderboard?limit=\".concat(_this2.limit), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 10:\n              response = _context2.sent;\n              console.log('排行榜数据:', response.data);\n              if (response.data && response.data.leaderboard) {\n                _this2.leaderboard = response.data.leaderboard;\n                _this2.userRank = response.data.userRank;\n\n                // 确保数据排序正确\n                _this2.leaderboard.sort(function (a, b) {\n                  return a.rank - b.rank;\n                });\n\n                // 重置为第一页\n                _this2.currentPage = 1;\n              } else {\n                console.error('返回的数据格式不正确:', response.data);\n                _this2.errorMessage = '返回数据格式不正确，请稍后再试';\n                _this2.leaderboard = [];\n              }\n              _context2.next = 19;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.handleError(_context2.t0, '加载排行榜失败');\n              _this2.leaderboard = [];\n            case 19:\n              _context2.prev = 19;\n              _this2.loading = false;\n              return _context2.finish(19);\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 15, 19, 22]]);\n      }))();\n    },\n    changePage: function changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    updateLeaderboard: function updateLeaderboard() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _this3.loading = true;\n              _this3.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context3.next = 7;\n                break;\n              }\n              _this3.$router.push('/login');\n              return _context3.abrupt(\"return\");\n            case 7:\n              _context3.next = 9;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 9:\n              _context3.next = 11;\n              return _this3.loadLeaderboard();\n            case 11:\n              _this3.errorMessage = '';\n              _context3.next = 17;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](0);\n              _this3.handleError(_context3.t0, '更新排行榜失败');\n            case 17:\n              _context3.prev = 17;\n              _this3.loading = false;\n              return _context3.finish(17);\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 14, 17, 20]]);\n      }))();\n    },\n    isCurrentUser: function isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    getRankClass: function getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URLS","axiosConfig","requestInterceptor","responseInterceptor","api","create","interceptors","request","use","error","Promise","reject","response","success","data","leaderboard","userRank","username","limit","currentPage","pageSize","loading","errorMessage","computed","totalPages","Math","ceil","length","displayedLeaderboard","start","end","slice","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","userResponse","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","get","sent","console","log","loadLeaderboard","t0","handleError","stop","methods","defaultMessage","errorMsg","message","concat","_this2","_callee2","_callee2$","_context2","headers","Authorization","sort","a","b","rank","finish","changePage","pageNumber","updateLeaderboard","_this3","_callee3","_callee3$","_context3","post","isCurrentUser","userId","user_id","getRankClass"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\n  <div class=\"leaderboard-page\">\n    <h2>碳减排排行榜</h2>\n    \n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ errorMessage }}\n    </div>\n    \n    <div class=\"leaderboard-header\">\n      <div class=\"update-section\">\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\n          {{ loading ? '更新中...' : '更新排名' }}\n        </button>\n      </div>\n      \n      <div class=\"filter-section\">\n        <select v-model=\"limit\" @change=\"loadLeaderboard\">\n          <option :value=\"10\">显示10名</option>\n          <option :value=\"20\">显示20名</option>\n          <option :value=\"50\">显示50名</option>\n          <option :value=\"100\">显示100名</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"my-rank\" v-if=\"userRank\">\n      <div class=\"rank-badge\">#{{ userRank.rank }}</div>\n      <div class=\"rank-details\">\n        <div class=\"rank-username\">{{ username }}</div>\n        <div class=\"rank-reduction\">减排量: {{ Number(userRank.carbon_reduction).toFixed(1) }} kg CO₂</div>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-container\">\n      <div class=\"leaderboard-row header\">\n        <div class=\"rank-column\">排名</div>\n        <div class=\"user-column\">用户</div>\n        <div class=\"reduction-column\">减排量 (kg CO₂)</div>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading-indicator\">\n        <div class=\"spinner\"></div>\n        <div>加载排名数据中...</div>\n      </div>\n      \n      <template v-else>\n        <div v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \n             class=\"leaderboard-row\" \n             :class=\"{ 'highlighted': isCurrentUser(entry.user_id) }\">\n          <div class=\"rank-column\">\n            <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">{{ entry.rank }}</div>\n          </div>\n          <div class=\"user-column\">{{ entry.username }}</div>\n          <div class=\"reduction-column\">{{ Number(entry.carbon_reduction).toFixed(1) }}</div>\n        </div>\n        \n        <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\n          暂无排行数据\n        </div>\n      </template>\n    </div>\n    \n    <!-- 分页控件 -->\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\n      <button \n        @click=\"changePage(currentPage - 1)\" \n        :disabled=\"currentPage === 1\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      \n      <div class=\"page-info\">\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\n      </div>\n      \n      <button \n        @click=\"changePage(currentPage + 1)\" \n        :disabled=\"currentPage === totalPages\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n    \n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\n      共 {{ leaderboard.length }} 条记录\n    </div>\n    \n    <div class=\"leaderboard-tips\">\n      <h3>如何提高排名?</h3>\n      <ul>\n        <li>多步行减少碳排放</li>\n        <li>通过碳排放计算器记录您的低碳行为</li>\n        <li>喂养并升级您的虚拟宠物</li>\n        <li>完成成就任务获得额外奖励</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nconst api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\n\n// 添加响应拦截器\napi.interceptors.response.use(\n  responseInterceptor.success, \n  responseInterceptor.error\n);\n\nexport default {\n  data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: ''\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  async created() {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 获取用户信息\n      const userResponse = await api.get('/auth/user');\n      this.username = userResponse.data.username;\n      \n      console.log('成功获取用户信息:', this.username);\n      \n      // 加载排行榜数据\n      await this.loadLeaderboard();\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      this.handleError(error, '加载用户数据失败');\n    }\n  },\n  methods: {\n    // 处理错误的通用方法\n    handleError(error, defaultMessage) {\n      let errorMsg = defaultMessage;\n      \n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = `${defaultMessage}: ${error.message}`;\n      }\n      \n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    \n    async loadLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        console.log('正在加载排行榜数据，限制:', this.limit);\n        \n        // 直接使用axios而不是api实例，避免可能的拦截器问题\n        const response = await axios.get(`http://localhost:5000/api/leaderboard?limit=${this.limit}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        console.log('排行榜数据:', response.data);\n        \n        if (response.data && response.data.leaderboard) {\n          this.leaderboard = response.data.leaderboard;\n          this.userRank = response.data.userRank;\n          \n          // 确保数据排序正确\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\n          \n          // 重置为第一页\n          this.currentPage = 1;\n        } else {\n          console.error('返回的数据格式不正确:', response.data);\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\n          this.leaderboard = [];\n        }\n      } catch (error) {\n        this.handleError(error, '加载排行榜失败');\n        this.leaderboard = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    \n    async updateLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        // 直接使用axios而不是api实例，避免可能的拦截器问题\n        await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        await this.loadLeaderboard();\n        this.errorMessage = '';\n      } catch (error) {\n        this.handleError(error, '更新排行榜失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    \n    getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.leaderboard-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.leaderboard-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.update-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.3s;\n}\n\n.update-btn:hover {\n  background-color: #1976D2;\n}\n\n.filter-section select {\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.my-rank {\n  background-color: #e3f2fd;\n  border-radius: 8px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.rank-badge {\n  background-color: #2196F3;\n  color: white;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n}\n\n.rank-details {\n  flex: 1;\n}\n\n.rank-username {\n  font-weight: bold;\n  font-size: 1.1rem;\n}\n\n.rank-reduction {\n  color: #666;\n  margin-top: 5px;\n}\n\n.leaderboard-container {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin-bottom: 20px;\n  min-height: 200px;\n  position: relative;\n}\n\n.leaderboard-row {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: background-color 0.2s;\n}\n\n.leaderboard-row:hover {\n  background-color: #f9f9f9;\n}\n\n.leaderboard-row.header {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n}\n\n.leaderboard-row.highlighted {\n  background-color: #e3f2fd;\n}\n\n.rank-column {\n  width: 60px;\n  display: flex;\n  justify-content: center;\n}\n\n.rank-number {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: #f0f0f0;\n  font-weight: bold;\n}\n\n.rank-number.gold {\n  background-color: #FFD700;\n  color: white;\n}\n\n.rank-number.silver {\n  background-color: #C0C0C0;\n  color: white;\n}\n\n.rank-number.bronze {\n  background-color: #CD7F32;\n  color: white;\n}\n\n.user-column {\n  flex: 1;\n  padding: 0 10px;\n}\n\n.reduction-column {\n  width: 120px;\n  text-align: right;\n  font-weight: 500;\n  color: #2196F3;\n}\n\n.no-data {\n  padding: 30px;\n  text-align: center;\n  color: #999;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  color: #666;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #2196F3;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.leaderboard-tips {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 15px;\n  margin-top: 20px;\n}\n\n.leaderboard-tips h3 {\n  color: #1976D2;\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.leaderboard-tips ul {\n  padding-left: 20px;\n  margin: 0;\n}\n\n.leaderboard-tips li {\n  margin-bottom: 8px;\n  color: #555;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n  gap: 15px;\n}\n\n.pagination-btn {\n  background-color: #f5f5f5;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background-color: #e0e0e0;\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-info {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.total-entries {\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #d32f2f;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n@media (max-width: 600px) {\n  .leaderboard-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .leaderboard-row {\n    padding: 10px;\n  }\n  \n  .rank-number {\n    width: 25px;\n    height: 25px;\n    font-size: 0.9rem;\n  }\n  \n  .user-column {\n    font-size: 0.9rem;\n  }\n  \n  .reduction-column {\n    width: 100px;\n    font-size: 0.9rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}