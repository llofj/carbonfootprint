{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-form\"\n};\nvar _hoisted_2 = [\"disabled\"];\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $options.handleSubmit && $options.handleSubmit.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    \"for\": \"username\"\n  }, \"账号:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.username = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    \"for\": \"password\"\n  }, \"密码:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.password = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    \"for\": \"captcha\"\n  }, \"验证码:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"captcha\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.captcha = $event;\n    }),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.captcha]])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isLoading\n  }, _toDisplayString($data.isLoading ? '登录中...' : '登录'), 9 /* TEXT, PROPS */, _hoisted_2), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","$options","handleSubmit","apply","arguments","type","id","$event","$data","username","required","password","captcha","disabled","isLoading","_hoisted_2","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode"],"sources":["D:\\computer_design\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">账号:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">密码:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"captcha\">验证码:</label>\r\n        <input type=\"text\" id=\"captcha\" v-model=\"captcha\" required />\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"isLoading\">\r\n        {{ isLoading ? '登录中...' : '登录' }}\r\n      </button>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      captcha: '0000',\r\n      errorMessage: '',\r\n      isLoading: false\r\n    };\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      \r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n          username: this.username,\r\n          password: this.password,\r\n          captcha: this.captcha,\r\n        });\r\n\r\n        // 保存登录状态和用户信息\r\n        localStorage.setItem('token', response.data.token);\r\n        localStorage.setItem('username', response.data.username);\r\n\r\n        // 重置表单\r\n        this.username = '';\r\n        this.password = '';\r\n        this.captcha = '';\r\n        \r\n        // 跳转到首页\r\n        await this.$router.push('/');\r\n        \r\n        // 刷新页面以更新所有组件的状态\r\n        window.location.reload();\r\n      } catch (error) {\r\n        this.errorMessage = error.response?.data?.message || '登录失败，请稍后重试';\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n  // 如果已经登录，直接跳转到首页\r\n  created() {\r\n    if (localStorage.getItem('token')) {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-form h2 {\r\n  text-align: center;\r\n  color: #2196F3;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-form div {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.login-form label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #666;\r\n}\r\n\r\n.login-form input {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.login-form input:focus {\r\n  outline: none;\r\n  border-color: #2196F3;\r\n}\r\n\r\n.login-form button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.login-form button:hover:not(:disabled) {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.login-form button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error {\r\n  color: #f44336;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  font-size: 0.9em;\r\n}\r\n</style>"],"mappings":";;EACO,SAAM;AAAY;iBADzB;;EAAAA,GAAA;EAmB6B,SAAM;;;uBAlBjCC,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBJC,mBAAA,CAAW,YAAP,IAAE,sBACNA,mBAAA,CAiBO;IAjBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA;MAAA,OAG2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,CAAAC,KAAA,CAAAF,QAAA,EAAAG,SAAA,CAAY;IAAA;MACjCP,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1B,OAAI;EAAU,GAAC,KAAG,sB,gBACzBA,mBAAA,CAA+D;IAAxDQ,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;IANxC,uBAAAP,MAAA,QAAAA,MAAA,gBAAAQ,MAAA;MAAA,OAMkDC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAC,QAAQ,E,KAEpDZ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1B,OAAI;EAAU,GAAC,KAAG,sB,gBACzBA,mBAAA,CAAmE;IAA5DQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAV5C,uBAAAP,MAAA,QAAAA,MAAA,gBAAAQ,MAAA;MAAA,OAUsDC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAG,QAAQ,E,KAExDd,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1B,OAAI;EAAS,GAAC,MAAI,sB,gBACzBA,mBAAA,CAA6D;IAAtDQ,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,SAAS;IAdvC,uBAAAP,MAAA,QAAAA,MAAA,gBAAAQ,MAAA;MAAA,OAciDC,KAAA,CAAAI,OAAO,GAAAL,MAAA;IAAA;IAAEG,QAAQ,EAAR;iDAATF,KAAA,CAAAI,OAAO,E,KAElDf,mBAAA,CAES;IAFDQ,IAAI,EAAC,QAAQ;IAAEQ,QAAQ,EAAEL,KAAA,CAAAM;sBAC5BN,KAAA,CAAAM,SAAS,0CAjBpBC,UAAA,GAmBeP,KAAA,CAAAQ,YAAY,I,cAArBrB,mBAAA,CAA2D,KAA3DsB,UAA2D,EAAAC,gBAAA,CAAnBV,KAAA,CAAAQ,YAAY,oBAnB1DG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}