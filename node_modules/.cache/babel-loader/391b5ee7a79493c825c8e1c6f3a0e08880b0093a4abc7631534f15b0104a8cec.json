{"ast":null,"code":"import _objectSpread from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      achievementTypes: [],\n      userAchievements: [],\n      newAchievements: [],\n      carbonReduction: 0,\n      userRank: null,\n      loading: true,\n      error: null,\n      checkingAchievements: false,\n      checkCompleted: false,\n      hasNewAchievements: false\n    };\n  },\n  computed: {\n    unlockedAchievements: function unlockedAchievements() {\n      var _this = this;\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      return this.achievementTypes.filter(function (achievement) {\n        return achievement && achievement.id && _this.isUnlocked(achievement.id);\n      });\n    },\n    lockedAchievements: function lockedAchievements() {\n      var _this2 = this;\n      if (!this.achievementTypes || !this.userAchievements) return [];\n      return this.achievementTypes.filter(function (achievement) {\n        return achievement && achievement.id && !_this2.isUnlocked(achievement.id);\n      });\n    },\n    sortedAchievements: function sortedAchievements() {\n      var _this3 = this;\n      // 检查achievementTypes是否存在且为数组\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\n        return [];\n      }\n      return _toConsumableArray(this.achievementTypes).sort(function (a, b) {\n        // 确保a和b对象都有id属性\n        if (!a || !b || !a.id || !b.id) return 0;\n        var isUnlockedA = _this3.isUnlocked(a.id);\n        var isUnlockedB = _this3.isUnlocked(b.id);\n        if (isUnlockedA && !isUnlockedB) return -1;\n        if (!isUnlockedA && isUnlockedB) return 1;\n        return a.id.localeCompare(b.id);\n      });\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _this4.loading = true;\n            _this4.error = null;\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 7;\n              break;\n            }\n            _this4.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 7:\n            _context.next = 9;\n            return _this4.loadUserRank();\n          case 9:\n            _context.next = 11;\n            return _this4.loadAchievementTypes();\n          case 11:\n            _context.next = 13;\n            return _this4.loadUserAchievements();\n          case 13:\n            if (!(!_this4.userRank || !_this4.userRank.carbon_reduction)) {\n              _context.next = 18;\n              break;\n            }\n            _context.next = 16;\n            return _this4.loadCarbonReduction();\n          case 16:\n            _context.next = 19;\n            break;\n          case 18:\n            _this4.carbonReduction = _this4.userRank.carbon_reduction;\n          case 19:\n            _context.next = 25;\n            break;\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading achievements data:', _context.t0);\n            _this4.error = '加载成就数据失败，请稍后再试';\n          case 25:\n            _context.prev = 25;\n            _this4.loading = false;\n            return _context.finish(25);\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 21, 25, 28]]);\n    }))();\n  },\n  methods: {\n    loadAchievementTypes: function loadAchievementTypes() {\n      var _this5 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, validAchievements;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('http://localhost:5000/api/achievement/types');\n            case 3:\n              response = _context2.sent;\n              // 确保响应数据是一个数组且数组中的每个项目都有id属性\n              if (response.data && Array.isArray(response.data)) {\n                // 深度复制数据以避免引用问题\n                validAchievements = response.data.filter(function (item) {\n                  return item && item.id;\n                }).map(function (item) {\n                  return _objectSpread({}, item);\n                }); // 确保复制后的数据仍然有效\n                if (validAchievements.length > 0) {\n                  _this5.achievementTypes = validAchievements;\n                } else {\n                  console.error('No valid achievement types found in response');\n                  _this5.achievementTypes = [];\n                }\n              } else {\n                console.error('Achievement types data is not an array or is empty:', response.data);\n                _this5.achievementTypes = [];\n              }\n              _context2.next = 12;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error loading achievement types:', _context2.t0);\n              _this5.achievementTypes = [];\n              throw _context2.t0;\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    loadUserAchievements: function loadUserAchievements() {\n      var _this6 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              _context3.next = 4;\n              return axios.get('http://localhost:5000/api/achievement/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context3.sent;\n              _this6.userAchievements = response.data;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading user achievements:', _context3.t0);\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 8]]);\n      }))();\n    },\n    loadCarbonReduction: function loadCarbonReduction() {\n      var _this7 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token, rankResponse, carbonResponse;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              token = localStorage.getItem('token');\n              _context4.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              rankResponse = _context4.sent;\n              if (!(rankResponse.data && rankResponse.data.carbon_reduction)) {\n                _context4.next = 9;\n                break;\n              }\n              _this7.carbonReduction = rankResponse.data.carbon_reduction;\n              _context4.next = 13;\n              break;\n            case 9:\n              _context4.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              carbonResponse = _context4.sent;\n              _this7.carbonReduction = carbonResponse.data.carbon_reduction || 0;\n            case 13:\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error loading carbon reduction:', _context4.t0);\n              _this7.carbonReduction = 0;\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 15]]);\n      }))();\n    },\n    loadUserRank: function loadUserRank() {\n      var _this8 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              token = localStorage.getItem('token');\n              _context5.next = 4;\n              return axios.get('http://localhost:5000/api/leaderboard/user', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 4:\n              response = _context5.sent;\n              _this8.userRank = response.data;\n              _context5.next = 11;\n              break;\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('Error loading user rank:', _context5.t0);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[0, 8]]);\n      }))();\n    },\n    isUnlocked: function isUnlocked(achievementId) {\n      // 确保userAchievements存在且为数组\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return false;\n      }\n      return this.userAchievements.some(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n    },\n    getUnlockDate: function getUnlockDate(achievementId) {\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\n        return '';\n      }\n      var achievement = this.userAchievements.find(function (a) {\n        return a && a.achievement_id === achievementId;\n      });\n      if (achievement && achievement.date) {\n        return new Date(achievement.date).toLocaleDateString();\n      }\n      return '';\n    },\n    getUnlockedAchievementsCount: function getUnlockedAchievementsCount() {\n      var _this9 = this;\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\n        return 0;\n      }\n      return this.userAchievements.filter(function (a) {\n        return a && a.achievement_id && _this9.achievementTypes.some(function (type) {\n          return type && type.id === a.achievement_id;\n        });\n      }).length;\n    },\n    // 获取解锁成就的提示信息\n    getUnlockHint: function getUnlockHint(achievement) {\n      if (!achievement) return '';\n      var hints = {\n        'green_commuter': '多步行减少碳排放，累计超过5kg CO₂',\n        'carbon_saver': '单日减少碳排放量达到10kg',\n        'pet_lover': '升级您的虚拟宠物至5级',\n        'eco_warrior': '累计碳减排量达到50kg CO₂',\n        'stepping_master': '单日行走步数超过20000步',\n        'diet_hero': '减少肉类消费减排量达到10kg CO₂',\n        'pet_trainer': '通过训练获得1000经验值',\n        'pet_expert': '宠物等级达到10级',\n        'pet_master': '宠物等级达到20级',\n        'experience_collector': '累计获得5000经验值'\n      };\n      return hints[achievement.id] || '继续减碳行动解锁此成就';\n    },\n    checkNewAchievements: function checkNewAchievements() {\n      var _this10 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _this10.checkingAchievements = true;\n              _this10.checkCompleted = false;\n              _this10.hasNewAchievements = false;\n              _this10.error = null;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context6.next = 9;\n                break;\n              }\n              _this10.$router.push('/login');\n              return _context6.abrupt(\"return\");\n            case 9:\n              _context6.next = 11;\n              return axios.get('http://localhost:5000/api/achievement/check', {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 11:\n              response = _context6.sent;\n              if (!(!response || !response.data)) {\n                _context6.next = 14;\n                break;\n              }\n              throw new Error('服务器返回无效响应');\n            case 14:\n              _this10.newAchievements = Array.isArray(response.data.newAchievements) ? response.data.newAchievements.filter(function (a) {\n                return a && a.id;\n              }) : [];\n              _this10.checkCompleted = true;\n              _this10.hasNewAchievements = _this10.newAchievements.length > 0;\n              if (!_this10.hasNewAchievements) {\n                _context6.next = 26;\n                break;\n              }\n              _context6.next = 20;\n              return _this10.loadUserAchievements();\n            case 20:\n              _context6.next = 22;\n              return axios.post('http://localhost:5000/api/leaderboard/update', {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token)\n                }\n              });\n            case 22:\n              _context6.next = 24;\n              return _this10.loadUserRank();\n            case 24:\n              _context6.next = 26;\n              return _this10.loadCarbonReduction();\n            case 26:\n              _context6.next = 33;\n              break;\n            case 28:\n              _context6.prev = 28;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('Error checking achievements:', _context6.t0);\n              _this10.error = '检查新成就失败，请稍后再试';\n              _this10.checkCompleted = true;\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 28]]);\n      }))();\n    },\n    // 关闭检查结果模态框\n    dismissCheckResult: function dismissCheckResult() {\n      this.checkingAchievements = false;\n      this.checkCompleted = false;\n      this.hasNewAchievements = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","achievementTypes","userAchievements","newAchievements","carbonReduction","userRank","loading","error","checkingAchievements","checkCompleted","hasNewAchievements","computed","unlockedAchievements","_this","filter","achievement","id","isUnlocked","lockedAchievements","_this2","sortedAchievements","_this3","Array","isArray","length","_toConsumableArray","sort","a","b","isUnlockedA","isUnlockedB","localeCompare","created","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","loadUserRank","loadAchievementTypes","loadUserAchievements","carbon_reduction","loadCarbonReduction","t0","console","finish","stop","methods","_this5","_callee2","response","validAchievements","_callee2$","_context2","get","sent","item","map","_objectSpread","_this6","_callee3","_callee3$","_context3","headers","Authorization","concat","_this7","_callee4","rankResponse","carbonResponse","_callee4$","_context4","_this8","_callee5","_callee5$","_context5","achievementId","some","achievement_id","getUnlockDate","find","date","Date","toLocaleDateString","getUnlockedAchievementsCount","_this9","type","getUnlockHint","hints","checkNewAchievements","_this10","_callee6","_callee6$","_context6","Error","post","dismissCheckResult"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Achievements.vue"],"sourcesContent":["<template>\r\n  <div class=\"achievements-page\">\r\n    <h2>我的成就</h2>\r\n    \r\n    <!-- 错误提示 -->\r\n    <div v-if=\"error\" class=\"error-message\">\r\n      <i class=\"fas fa-exclamation-circle\"></i>\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <!-- 加载中提示 -->\r\n    <div v-if=\"loading && !checkingAchievements\" class=\"loading-container\">\r\n      <div class=\"loading-message\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>加载成就数据中...</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 检查成就提示 -->\r\n    <div v-if=\"checkingAchievements\" class=\"checking-achievements-modal\">\r\n      <div class=\"checking-content\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>正在检查新成就...</p>\r\n        <div v-if=\"checkCompleted && !hasNewAchievements\" class=\"check-result\">\r\n          <i class=\"fas fa-info-circle\"></i>\r\n          <p>暂未解锁新成就，继续努力！</p>\r\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn\">返回</button>\r\n        </div>\r\n        <div v-if=\"checkCompleted && hasNewAchievements\" class=\"check-result success\">\r\n          <i class=\"fas fa-trophy\"></i>\r\n          <p>恭喜！您解锁了新成就！</p>\r\n          <div class=\"new-achievements-list\">\r\n            <div v-for=\"achievement in newAchievements\" :key=\"achievement.id\" class=\"new-achievement-item\">\r\n              <i :class=\"['fas', achievement.icon]\"></i>\r\n              <span>{{ achievement.achievement_name }}</span>\r\n            </div>\r\n          </div>\r\n          <button @click=\"dismissCheckResult\" class=\"dismiss-btn success\">查看成就</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 成就内容 - 仅在加载完成且无错误时显示 -->\r\n    <div v-if=\"!loading && !error && !checkingAchievements\">\r\n      <div class=\"achievement-summary\">\r\n        <div class=\"summary-card\">\r\n          <h3>成就总数</h3>\r\n          <div class=\"summary-count\">{{ getUnlockedAchievementsCount() }} / {{ achievementTypes && achievementTypes.length || 0 }}</div>\r\n        </div>\r\n        \r\n        <div class=\"summary-card\">\r\n          <h3>减排总量</h3>\r\n          <div class=\"summary-count carbon-value\">{{ userRank && userRank.carbon_reduction ? Number(userRank.carbon_reduction).toFixed(1) : carbonReduction.toFixed(1) }} kg CO₂</div>\r\n        </div>\r\n        \r\n        <div class=\"summary-card\">\r\n          <h3>排行榜排名</h3>\r\n          <div class=\"summary-count rank-value\">#{{ userRank && userRank.rank ? userRank.rank : 'N/A' }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-if=\"achievementTypes && achievementTypes.length > 0\">\r\n        <div class=\"achievements-status\">\r\n          <p v-if=\"getUnlockedAchievementsCount() > 0\" class=\"status-message unlocked-message\">\r\n            <i class=\"fas fa-medal\"></i> 您已解锁 {{ getUnlockedAchievementsCount() }} 项成就，继续努力！\r\n          </p>\r\n          <p v-else class=\"status-message locked-message\">\r\n            <i class=\"fas fa-lock\"></i> 您尚未解锁任何成就，立即开始减碳行动吧！\r\n          </p>\r\n        </div>\r\n        \r\n        <!-- 已解锁成就 -->\r\n        <div v-if=\"unlockedAchievements.length > 0\">\r\n          <h3 class=\"section-title\">\r\n            <i class=\"fas fa-unlock-alt\"></i> 已解锁的成就\r\n          </h3>\r\n          \r\n          <div class=\"achievement-container\">\r\n            <div v-for=\"achievement in unlockedAchievements\" :key=\"achievement.id\" \r\n                 class=\"achievement-card unlocked\"\r\n                 :data-achievement-id=\"achievement.id\">\r\n              <div class=\"achievement-icon\">\r\n                <i :class=\"['fas', achievement.icon]\" style=\"color: white;\"></i>\r\n              </div>\r\n              <div class=\"achievement-info\">\r\n                <h3>{{ achievement.name }}</h3>\r\n                <p>{{ achievement.description }}</p>\r\n                <div class=\"unlock-date\">\r\n                  解锁于: {{ getUnlockDate(achievement.id) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 未解锁成就 -->\r\n        <h3 class=\"section-title\">\r\n          <i class=\"fas fa-lock\"></i> 待解锁的成就\r\n        </h3>\r\n        \r\n        <div class=\"achievement-container\">\r\n          <div v-for=\"achievement in lockedAchievements\" :key=\"'locked-'+achievement.id\" \r\n               class=\"achievement-card locked\"\r\n               :data-achievement-id=\"achievement.id\">\r\n            <div class=\"achievement-icon\">\r\n              <i :class=\"['fas', achievement.icon]\"></i>\r\n            </div>\r\n            <div class=\"achievement-info\">\r\n              <h3>{{ achievement.name }}</h3>\r\n              <p>{{ achievement.description }}</p>\r\n              <div class=\"locked-badge\">\r\n                <i class=\"fas fa-lock\"></i> 未解锁\r\n              </div>\r\n              <div class=\"unlock-hint\">\r\n                {{ getUnlockHint(achievement) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div v-else-if=\"!loading\" class=\"empty-state\">\r\n        <i class=\"fas fa-award empty-icon\"></i>\r\n        <p>暂无可用成就</p>\r\n        <p class=\"empty-description\">系统尚未配置任何成就，请稍后再试</p>\r\n      </div>\r\n      \r\n      <div class=\"check-achievements\">\r\n        <button @click=\"checkNewAchievements\" class=\"check-btn\" :disabled=\"!achievementTypes || achievementTypes.length === 0 || loading\">\r\n          <i class=\"fas fa-sync-alt\" :class=\"{'fa-spin': checkingAchievements}\"></i> 检查新成就\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      achievementTypes: [],\r\n      userAchievements: [],\r\n      newAchievements: [],\r\n      carbonReduction: 0,\r\n      userRank: null,\r\n      loading: true,\r\n      error: null,\r\n      checkingAchievements: false,\r\n      checkCompleted: false, \r\n      hasNewAchievements: false\r\n    };\r\n  },\r\n  computed: {\r\n    unlockedAchievements() {\r\n      if (!this.achievementTypes || !this.userAchievements) return [];\r\n      \r\n      return this.achievementTypes.filter(achievement => \r\n        achievement && achievement.id && this.isUnlocked(achievement.id)\r\n      );\r\n    },\r\n    lockedAchievements() {\r\n      if (!this.achievementTypes || !this.userAchievements) return [];\r\n      \r\n      return this.achievementTypes.filter(achievement => \r\n        achievement && achievement.id && !this.isUnlocked(achievement.id)\r\n      );\r\n    },\r\n    sortedAchievements() {\r\n      // 检查achievementTypes是否存在且为数组\r\n      if (!this.achievementTypes || !Array.isArray(this.achievementTypes) || this.achievementTypes.length === 0) {\r\n        return [];\r\n      }\r\n      \r\n      return [...this.achievementTypes].sort((a, b) => {\r\n        // 确保a和b对象都有id属性\r\n        if (!a || !b || !a.id || !b.id) return 0;\r\n        \r\n        const isUnlockedA = this.isUnlocked(a.id);\r\n        const isUnlockedB = this.isUnlocked(b.id);\r\n        \r\n        if (isUnlockedA && !isUnlockedB) return -1;\r\n        if (!isUnlockedA && isUnlockedB) return 1;\r\n        \r\n        return a.id.localeCompare(b.id);\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    try {\r\n      this.loading = true;\r\n      this.error = null;\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n      \r\n      // 先获取排行榜数据\r\n      await this.loadUserRank();\r\n      // 获取成就类型\r\n      await this.loadAchievementTypes();\r\n      // 获取用户成就\r\n      await this.loadUserAchievements();\r\n      // 最后获取碳减排量，优先使用排行榜数据\r\n      if (!this.userRank || !this.userRank.carbon_reduction) {\r\n        await this.loadCarbonReduction();\r\n      } else {\r\n        this.carbonReduction = this.userRank.carbon_reduction;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading achievements data:', error);\r\n      this.error = '加载成就数据失败，请稍后再试';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  },\r\n  methods: {\r\n    async loadAchievementTypes() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/achievement/types');\r\n        \r\n        // 确保响应数据是一个数组且数组中的每个项目都有id属性\r\n        if (response.data && Array.isArray(response.data)) {\r\n          // 深度复制数据以避免引用问题\r\n          const validAchievements = response.data\r\n            .filter(item => item && item.id)\r\n            .map(item => ({...item}));\r\n            \r\n          // 确保复制后的数据仍然有效\r\n          if (validAchievements.length > 0) {\r\n            this.achievementTypes = validAchievements;\r\n          } else {\r\n            console.error('No valid achievement types found in response');\r\n            this.achievementTypes = [];\r\n          }\r\n        } else {\r\n          console.error('Achievement types data is not an array or is empty:', response.data);\r\n          this.achievementTypes = [];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading achievement types:', error);\r\n        this.achievementTypes = [];\r\n        throw error; // 重新抛出错误以便上层处理\r\n      }\r\n    },\r\n    \r\n    async loadUserAchievements() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/achievement/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        this.userAchievements = response.data;\r\n      } catch (error) {\r\n        console.error('Error loading user achievements:', error);\r\n      }\r\n    },\r\n    \r\n    async loadCarbonReduction() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const rankResponse = await axios.get('http://localhost:5000/api/leaderboard/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        if (rankResponse.data && rankResponse.data.carbon_reduction) {\r\n          this.carbonReduction = rankResponse.data.carbon_reduction;\r\n        } else {\r\n          const carbonResponse = await axios.get('http://localhost:5000/api/achievement/carbon-reduction', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          this.carbonReduction = carbonResponse.data.carbon_reduction || 0;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading carbon reduction:', error);\r\n        this.carbonReduction = 0;\r\n      }\r\n    },\r\n    \r\n    async loadUserRank() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/leaderboard/user', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        this.userRank = response.data;\r\n      } catch (error) {\r\n        console.error('Error loading user rank:', error);\r\n      }\r\n    },\r\n    \r\n    isUnlocked(achievementId) {\r\n      // 确保userAchievements存在且为数组\r\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\r\n        return false;\r\n      }\r\n      return this.userAchievements.some(a => a && a.achievement_id === achievementId);\r\n    },\r\n    \r\n    getUnlockDate(achievementId) {\r\n      if (!achievementId || !this.userAchievements || !Array.isArray(this.userAchievements)) {\r\n        return '';\r\n      }\r\n      const achievement = this.userAchievements.find(a => a && a.achievement_id === achievementId);\r\n      if (achievement && achievement.date) {\r\n        return new Date(achievement.date).toLocaleDateString();\r\n      }\r\n      return '';\r\n    },\r\n    \r\n    getUnlockedAchievementsCount() {\r\n      if (!this.userAchievements || !Array.isArray(this.userAchievements) || \r\n          !this.achievementTypes || !Array.isArray(this.achievementTypes)) {\r\n        return 0;\r\n      }\r\n      return this.userAchievements.filter(a => \r\n        a && a.achievement_id && this.achievementTypes.some(type => type && type.id === a.achievement_id)\r\n      ).length;\r\n    },\r\n    \r\n    // 获取解锁成就的提示信息\r\n    getUnlockHint(achievement) {\r\n      if (!achievement) return '';\r\n      \r\n      const hints = {\r\n        'green_commuter': '多步行减少碳排放，累计超过5kg CO₂',\r\n        'carbon_saver': '单日减少碳排放量达到10kg',\r\n        'pet_lover': '升级您的虚拟宠物至5级',\r\n        'eco_warrior': '累计碳减排量达到50kg CO₂',\r\n        'stepping_master': '单日行走步数超过20000步',\r\n        'diet_hero': '减少肉类消费减排量达到10kg CO₂',\r\n        'pet_trainer': '通过训练获得1000经验值',\r\n        'pet_expert': '宠物等级达到10级',\r\n        'pet_master': '宠物等级达到20级',\r\n        'experience_collector': '累计获得5000经验值'\r\n      };\r\n      \r\n      return hints[achievement.id] || '继续减碳行动解锁此成就';\r\n    },\r\n    \r\n    async checkNewAchievements() {\r\n      try {\r\n        this.checkingAchievements = true;\r\n        this.checkCompleted = false;\r\n        this.hasNewAchievements = false;\r\n        this.error = null;\r\n        \r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          this.$router.push('/login');\r\n          return;\r\n        }\r\n        \r\n        const response = await axios.get('http://localhost:5000/api/achievement/check', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        \r\n        if (!response || !response.data) {\r\n          throw new Error('服务器返回无效响应');\r\n        }\r\n        \r\n        this.newAchievements = Array.isArray(response.data.newAchievements) \r\n          ? response.data.newAchievements.filter(a => a && a.id) \r\n          : [];\r\n        \r\n        this.checkCompleted = true;\r\n        this.hasNewAchievements = this.newAchievements.length > 0;\r\n        \r\n        if (this.hasNewAchievements) {\r\n          // 重新加载用户成就\r\n          await this.loadUserAchievements();\r\n          // 更新排行榜数据\r\n          await axios.post('http://localhost:5000/api/leaderboard/update', {}, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          await this.loadUserRank();\r\n          await this.loadCarbonReduction();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking achievements:', error);\r\n        this.error = '检查新成就失败，请稍后再试';\r\n        this.checkCompleted = true;\r\n      }\r\n    },\r\n    \r\n    // 关闭检查结果模态框\r\n    dismissCheckResult() {\r\n      this.checkingAchievements = false;\r\n      this.checkCompleted = false;\r\n      this.hasNewAchievements = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.achievements-page {\r\n  max-width: 850px;\r\n  margin: 0 auto;\r\n  padding: 12px 20px;\r\n  font-family: 'Arial', sans-serif;\r\n  position: relative;\r\n  background-color: rgba(255, 255, 255, 0.92);\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  font-size: 28px;\r\n  text-align: center;\r\n  margin-bottom: 22px;\r\n  background: linear-gradient(135deg, #ff9800, #f57c00);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  letter-spacing: 1px;\r\n  text-shadow: 0px 1px 2px rgba(255, 152, 0, 0.1);\r\n}\r\n\r\n.achievement-summary {\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 22px;\r\n}\r\n\r\n.summary-card {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  text-align: center;\r\n  box-shadow: 0 3px 10px rgba(0,0,0,0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.summary-card:nth-child(1)::before {\r\n  background: linear-gradient(90deg, #3498db, #2980b9);\r\n}\r\n\r\n.summary-card:nth-child(2)::before {\r\n  background: linear-gradient(90deg, #4CAF50, #8BC34A);\r\n}\r\n\r\n.summary-card:nth-child(3)::before {\r\n  background: linear-gradient(90deg, #ff9800, #f57c00);\r\n}\r\n\r\n.summary-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 25px rgba(0,0,0,0.12);\r\n}\r\n\r\n.summary-card h3 {\r\n  margin-top: 3px;\r\n  color: #424242;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n}\r\n\r\n.summary-count {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  margin: 8px 0;\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.summary-count {\r\n  color: #3498db;\r\n  background: linear-gradient(135deg, #3498db, #2980b9);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n}\r\n\r\n.carbon-value {\r\n  background: linear-gradient(135deg, #4CAF50, #8BC34A);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n}\r\n\r\n.rank-value {\r\n  background: linear-gradient(135deg, #e74c3c, #c0392b);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n}\r\n\r\n.section-title {\r\n  margin: 30px 0 18px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  color: #2c3e50;\r\n  font-size: 18px;\r\n  position: relative;\r\n}\r\n\r\n.section-title::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -2px;\r\n  left: 0;\r\n  width: 60px;\r\n  height: 2px;\r\n}\r\n\r\n.section-title:nth-of-type(1)::after {\r\n  background: linear-gradient(90deg, #ff9800, #f57c00);\r\n}\r\n\r\n.section-title:nth-of-type(2)::after {\r\n  background: linear-gradient(90deg, #e0e0e0, #bdbdbd);\r\n}\r\n\r\n.section-title i {\r\n  margin-right: 10px;\r\n}\r\n\r\n.section-title:nth-of-type(1) i {\r\n  color: #ff9800;\r\n}\r\n\r\n.section-title:nth-of-type(2) i {\r\n  color: #9e9e9e;\r\n}\r\n\r\n.achievements-status {\r\n  margin: 30px 0;\r\n  text-align: center;\r\n}\r\n\r\n.status-message {\r\n  padding: 15px 25px;\r\n  border-radius: 50px;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  box-shadow: 0 3px 10px rgba(0,0,0,0.08);\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.unlocked-message {\r\n  background-color: rgba(52, 152, 219, 0.1);\r\n  color: #2980b9;\r\n  border: 1px solid rgba(52, 152, 219, 0.2);\r\n}\r\n\r\n.locked-message {\r\n  background-color: rgba(158, 158, 158, 0.1);\r\n  color: #616161;\r\n  border: 1px solid rgba(158, 158, 158, 0.2);\r\n}\r\n\r\n.status-message i {\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.achievement-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\r\n  gap: 16px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.achievement-card {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 13px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 13px;\r\n  box-shadow: 0 3px 10px rgba(0,0,0,0.05);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  border-left: 3px solid transparent;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.achievement-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: radial-gradient(circle at top right, rgba(255,255,255,0.8), transparent 70%);\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.achievement-card:hover {\r\n  transform: translateY(-8px);\r\n  box-shadow: 0 15px 30px rgba(0,0,0,0.12);\r\n}\r\n\r\n.achievement-card:hover::before {\r\n  opacity: 1;\r\n}\r\n\r\n.achievement-card.unlocked {\r\n  background: linear-gradient(to right, rgba(255, 152, 0, 0.05), rgba(255, 255, 255, 1));\r\n  border-left: 3px solid #ff9800;\r\n}\r\n\r\n.achievement-card.locked {\r\n  background-color: #fafafa;\r\n  opacity: 0.95;\r\n  border-left: 3px solid #e0e0e0;\r\n}\r\n\r\n.achievement-icon {\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  transition: all 0.4s ease;\r\n  box-shadow: 0 3px 6px rgba(0,0,0,0.1);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.achievement-card.unlocked .achievement-icon {\r\n  background: linear-gradient(135deg, #ff9800, #f57c00);\r\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);\r\n  transform: scale(1.05);\r\n}\r\n\r\n.achievement-card.unlocked:hover .achievement-icon {\r\n  animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% { transform: scale(1.05); }\r\n  50% { transform: scale(1.15); }\r\n  100% { transform: scale(1.05); }\r\n}\r\n\r\n.achievement-info {\r\n  flex: 1;\r\n}\r\n\r\n.achievement-info h3 {\r\n  margin: 0 0 6px 0;\r\n  font-size: 16px;\r\n  color: #2c3e50;\r\n  font-weight: 600;\r\n}\r\n\r\n.achievement-info p {\r\n  margin: 0 0 10px 0;\r\n  font-size: 13px;\r\n  color: #555;\r\n  line-height: 1.4;\r\n}\r\n\r\n.unlock-date, .locked-badge {\r\n  display: inline-block;\r\n  padding: 4px 10px;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  margin-top: 8px;\r\n  font-weight: 500;\r\n}\r\n\r\n.unlock-hint {\r\n  font-size: 13px;\r\n  color: #757575;\r\n  margin-top: 12px;\r\n  font-style: italic;\r\n  line-height: 1.5;\r\n  padding-left: 5px;\r\n  border-left: 2px solid #e0e0e0;\r\n}\r\n\r\n.check-achievements {\r\n  text-align: center;\r\n  margin: 30px 0;\r\n}\r\n\r\n.check-btn {\r\n  background: linear-gradient(135deg, #ff9800, #f57c00);\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 22px;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.check-btn:hover {\r\n  background: linear-gradient(135deg, #f57c00, #e65100);\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 6px 15px rgba(255, 152, 0, 0.4);\r\n}\r\n\r\n.check-btn:disabled {\r\n  background: linear-gradient(135deg, #B0BEC5, #90A4AE);\r\n  cursor: not-allowed;\r\n  transform: none;\r\n  box-shadow: 0 3px 10px rgba(176,190,197,0.3);\r\n}\r\n\r\n.unlock-date {\r\n  background-color: rgba(255, 152, 0, 0.1);\r\n  color: #e65100;\r\n  border: 1px solid rgba(255, 152, 0, 0.2);\r\n}\r\n\r\n.locked-badge {\r\n  background-color: rgba(224, 224, 224, 0.5);\r\n  color: #757575;\r\n  border: 1px solid rgba(224, 224, 224, 0.8);\r\n}\r\n\r\n.error-message {\r\n  background-color: #fff5f5;\r\n  color: #e53935;\r\n  padding: 18px 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  font-size: 15px;\r\n  border-left: 5px solid #e53935;\r\n  box-shadow: 0 4px 12px rgba(229,57,53,0.1);\r\n}\r\n\r\n.error-message i {\r\n  font-size: 24px;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 60px 30px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 12px;\r\n  margin: 40px 0;\r\n  border: 1px dashed #e0e0e0;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 60px;\r\n  color: #bdbdbd;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.empty-state p {\r\n  margin: 10px 0;\r\n  color: #424242;\r\n  font-size: 18px;\r\n}\r\n\r\n.empty-description {\r\n  font-size: 15px;\r\n  color: #757575;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  line-height: 1.6;\r\n}\r\n\r\n.loading-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 300px;\r\n  margin: 40px 0;\r\n}\r\n\r\n.loading-message {\r\n  text-align: center;\r\n  color: #424242;\r\n}\r\n\r\n.loading-message i {\r\n  font-size: 50px;\r\n  color: #2196F3;\r\n  margin-bottom: 20px;\r\n  display: block;\r\n}\r\n\r\n.loading-message p {\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 检查成就模态框 */\r\n.checking-achievements-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  animation: fadeIn 0.3s ease-out;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.checking-content {\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  padding: 30px;\r\n  width: 90%;\r\n  max-width: 480px;\r\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n  animation: slideUp 0.4s ease-out;\r\n}\r\n\r\n@keyframes slideUp {\r\n  from { transform: translateY(30px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.checking-content i.fa-spinner {\r\n  font-size: 60px;\r\n  color: #2196F3;\r\n  margin-bottom: 25px;\r\n  display: block;\r\n}\r\n\r\n.checking-content p {\r\n  font-size: 20px;\r\n  color: #1e3d59;\r\n  margin-bottom: 25px;\r\n  font-weight: 500;\r\n}\r\n\r\n.check-result {\r\n  margin-top: 30px;\r\n  padding: 25px;\r\n  border-radius: 12px;\r\n  background-color: #f5f5f5;\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n.check-result.success {\r\n  background-color: #E8F5E9;\r\n}\r\n\r\n.check-result i {\r\n  font-size: 40px;\r\n  color: #607D8B;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.check-result.success i {\r\n  color: #4CAF50;\r\n}\r\n\r\n.check-result p {\r\n  font-size: 18px;\r\n  margin-bottom: 15px;\r\n  color: #424242;\r\n}\r\n\r\n.dismiss-btn {\r\n  background-color: #607D8B;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 30px;\r\n  border-radius: 50px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 12px rgba(96,125,139,0.3);\r\n}\r\n\r\n.dismiss-btn:hover {\r\n  background-color: #455A64;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 8px 20px rgba(96,125,139,0.4);\r\n}\r\n\r\n.dismiss-btn.success {\r\n  background-color: #ff9800;\r\n  box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);\r\n}\r\n\r\n.dismiss-btn.success:hover {\r\n  background-color: #f57c00;\r\n  box-shadow: 0 8px 20px rgba(255, 152, 0, 0.4);\r\n}\r\n\r\n.new-achievements-list {\r\n  margin: 20px 0;\r\n}\r\n\r\n.new-achievement-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin: 12px 0;\r\n  padding: 15px;\r\n  background-color: rgba(255, 152, 0, 0.1);\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  border-left: 3px solid #ff9800;\r\n  text-align: left;\r\n  animation: slideIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateX(-20px); opacity: 0; }\r\n  to { transform: translateX(0); opacity: 1; }\r\n}\r\n\r\n.new-achievement-item i {\r\n  color: #ff9800;\r\n  font-size: 20px;\r\n  margin: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .achievements-page {\r\n    padding: 15px;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 26px;\r\n  }\r\n  \r\n  .achievement-summary {\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .summary-card {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .summary-count {\r\n    font-size: 28px;\r\n  }\r\n  \r\n  .section-title {\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .achievement-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .achievement-card {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .achievement-icon {\r\n    width: 50px;\r\n    height: 50px;\r\n    font-size: 20px;\r\n  }\r\n  \r\n  .achievement-info h3 {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .checking-content {\r\n    padding: 25px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}