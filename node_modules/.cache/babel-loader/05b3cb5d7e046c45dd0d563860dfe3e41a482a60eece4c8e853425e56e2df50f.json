{"ast":null,"code":"import _regeneratorRuntime from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/EcoPaw/carbonfootprint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nvar api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, function (error) {\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\napi.interceptors.response.use(responseInterceptor.success, responseInterceptor.error);\n\n// 获取API基础URL\nvar getBaseUrl = function getBaseUrl() {\n  var host = window.location.hostname;\n  var port = '5000';\n  var protocol = window.location.protocol;\n  if (host === 'localhost' || host === '127.0.0.1') {\n    return \"http://localhost:\".concat(port, \"/api\");\n  } else {\n    return \"\".concat(protocol, \"//\").concat(host, \":\").concat(port, \"/api\");\n  }\n};\nexport default {\n  data: function data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl(),\n      totalUserCount: 200 // 估计的用户总数，可以从后端获取\n    };\n  },\n  computed: {\n    totalPages: function totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard: function displayedLeaderboard() {\n      var start = (this.currentPage - 1) * this.pageSize;\n      var end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  created: function created() {\n    var _this = this;\n    return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var token, userResponse;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log('API基础URL:', _this.apiBaseUrl);\n            token = localStorage.getItem('token');\n            if (token) {\n              _context.next = 6;\n              break;\n            }\n            _this.$router.push('/login');\n            return _context.abrupt(\"return\");\n          case 6:\n            _context.next = 8;\n            return axios.get(\"\".concat(_this.apiBaseUrl, \"/auth/user\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n          case 8:\n            userResponse = _context.sent;\n            _this.username = userResponse.data.username;\n            console.log('成功获取用户信息:', _this.username);\n\n            // 加载排行榜数据\n            _context.next = 13;\n            return _this.loadLeaderboard();\n          case 13:\n            _context.next = 19;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.error('Error loading user data:', _context.t0);\n            _this.handleError(_context.t0, '加载用户数据失败');\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 15]]);\n    }))();\n  },\n  methods: {\n    // 获取用户名的首字母作为头像\n    getInitials: function getInitials(name) {\n      return name ? name.charAt(0).toUpperCase() : '?';\n    },\n    // 获取排名描述\n    getRankDescription: function getRankDescription(rank) {\n      if (rank <= 10) return '优秀减排者';\n      if (rank <= 50) return '活跃减排者';\n      if (rank <= 100) return '进步减排者';\n      return '环保新手';\n    },\n    // 获取百分比\n    getPercentile: function getPercentile(rank) {\n      // 计算击败了多少百分比的用户\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\n      var percentile = Math.floor((this.totalUserCount - rank) / this.totalUserCount * 100);\n      return Math.max(0, Math.min(99, percentile));\n    },\n    // 获取排名图标类\n    getRankIconClass: function getRankIconClass(rank) {\n      if (rank <= 3) return 'text-gold';\n      if (rank <= 10) return 'text-silver';\n      if (rank <= 50) return 'text-bronze';\n      return 'text-normal';\n    },\n    // 获取排名颜色类\n    getRankColorClass: function getRankColorClass(rank) {\n      if (rank <= 3) return 'rank-top';\n      if (rank <= 10) return 'rank-excellent';\n      if (rank <= 50) return 'rank-good';\n      return 'rank-normal';\n    },\n    // 处理错误的通用方法\n    handleError: function handleError(error, defaultMessage) {\n      var errorMsg = defaultMessage;\n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = \"\".concat(defaultMessage, \": \").concat(error.message);\n      }\n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    loadLeaderboard: function loadLeaderboard() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this2.loading = true;\n              _this2.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context2.next = 7;\n                break;\n              }\n              _this2.$router.push('/login');\n              return _context2.abrupt(\"return\");\n            case 7:\n              console.log('正在加载排行榜数据，限制:', _this2.limit);\n\n              // 直接使用axios\n              _context2.next = 10;\n              return axios.get(\"\".concat(_this2.apiBaseUrl, \"/leaderboard?limit=\").concat(_this2.limit), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 10:\n              response = _context2.sent;\n              console.log('排行榜数据:', response.data);\n              if (!(response.data && response.data.leaderboard)) {\n                _context2.next = 24;\n                break;\n              }\n              _this2.leaderboard = response.data.leaderboard;\n              _this2.userRank = response.data.userRank;\n\n              // 如果用户排名信息为null或carbon_reduction为0，尝试强制更新\n              if (!(!_this2.userRank || _this2.userRank.carbon_reduction === 0)) {\n                _context2.next = 19;\n                break;\n              }\n              console.log('用户排名数据为空或减排量为0，尝试更新...');\n              _context2.next = 19;\n              return _this2.forceUpdateUserRank();\n            case 19:\n              // 确保数据排序正确\n              _this2.leaderboard.sort(function (a, b) {\n                return a.rank - b.rank;\n              });\n\n              // 尝试获取总用户数量\n              if (response.data.total) {\n                _this2.totalUserCount = response.data.total;\n              }\n\n              // 重置为第一页\n              _this2.currentPage = 1;\n              _context2.next = 27;\n              break;\n            case 24:\n              console.error('返回的数据格式不正确:', response.data);\n              _this2.errorMessage = '返回数据格式不正确，请稍后再试';\n              _this2.leaderboard = [];\n            case 27:\n              _context2.next = 33;\n              break;\n            case 29:\n              _context2.prev = 29;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.handleError(_context2.t0, '加载排行榜失败');\n              _this2.leaderboard = [];\n            case 33:\n              _context2.prev = 33;\n              _this2.loading = false;\n              return _context2.finish(33);\n            case 36:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 29, 33, 36]]);\n      }))();\n    },\n    // 强制更新当前用户排名\n    forceUpdateUserRank: function forceUpdateUserRank() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var token, response, userRankResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              token = localStorage.getItem('token');\n              if (token) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 4:\n              console.log('强制更新当前用户排名...');\n\n              // 调用更新接口\n              _context3.next = 7;\n              return axios.post(\"\".concat(_this3.apiBaseUrl, \"/leaderboard/update\"), {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 7:\n              response = _context3.sent;\n              console.log('排名更新响应:', response.data);\n\n              // 获取最新的用户排名\n              _context3.next = 11;\n              return axios.get(\"\".concat(_this3.apiBaseUrl, \"/leaderboard/user\"), {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 11:\n              userRankResponse = _context3.sent;\n              if (userRankResponse.data) {\n                console.log('更新后的用户排名:', userRankResponse.data);\n                _this3.userRank = userRankResponse.data;\n              }\n              _context3.next = 18;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('强制更新用户排名失败:', _context3.t0);\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 15]]);\n      }))();\n    },\n    changePage: function changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    updateLeaderboard: function updateLeaderboard() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var token;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _this4.loading = true;\n              _this4.errorMessage = '';\n              token = localStorage.getItem('token');\n              if (token) {\n                _context4.next = 7;\n                break;\n              }\n              _this4.$router.push('/login');\n              return _context4.abrupt(\"return\");\n            case 7:\n              _context4.next = 9;\n              return axios.post(\"\".concat(_this4.apiBaseUrl, \"/leaderboard/update\"), {}, {\n                headers: {\n                  Authorization: \"Bearer \".concat(token),\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 9:\n              _context4.next = 11;\n              return _this4.loadLeaderboard();\n            case 11:\n              _this4.errorMessage = '';\n              _context4.next = 17;\n              break;\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](0);\n              _this4.handleError(_context4.t0, '更新排行榜失败');\n            case 17:\n              _context4.prev = 17;\n              _this4.loading = false;\n              return _context4.finish(17);\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 14, 17, 20]]);\n      }))();\n    },\n    isCurrentUser: function isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    getRankClass: function getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URLS","axiosConfig","requestInterceptor","responseInterceptor","api","create","interceptors","request","use","error","Promise","reject","response","success","getBaseUrl","host","window","location","hostname","port","protocol","concat","data","leaderboard","userRank","username","limit","currentPage","pageSize","loading","errorMessage","apiBaseUrl","totalUserCount","computed","totalPages","Math","ceil","length","displayedLeaderboard","start","end","slice","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","userResponse","wrap","_callee$","_context","prev","next","console","log","localStorage","getItem","$router","push","abrupt","get","headers","Authorization","sent","loadLeaderboard","t0","handleError","stop","methods","getInitials","name","charAt","toUpperCase","getRankDescription","rank","getPercentile","percentile","floor","max","min","getRankIconClass","getRankColorClass","defaultMessage","errorMsg","message","_this2","_callee2","_callee2$","_context2","carbon_reduction","forceUpdateUserRank","sort","a","b","total","finish","_this3","_callee3","userRankResponse","_callee3$","_context3","post","changePage","pageNumber","updateLeaderboard","_this4","_callee4","_callee4$","_context4","isCurrentUser","userId","user_id","getRankClass"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\Leaderboard.vue"],"sourcesContent":["<template>\n  <div class=\"leaderboard-page\">\n    <h2 class=\"main-title\">碳减排排行榜</h2>\n    \n    <div v-if=\"errorMessage\" class=\"error-message\">\n      <i class=\"fas fa-exclamation-circle\"></i>\n      {{ errorMessage }}\n    </div>\n    \n    <!-- 用户自己的排名信息卡片，更美观的展示 -->\n    <div v-if=\"userRank\" class=\"user-rank-card\">\n      <div class=\"user-rank-header\">\n        <div class=\"user-avatar\">\n          <span>{{ getInitials(username) }}</span>\n        </div>\n        <div class=\"user-info\">\n          <h3>{{ username }}</h3>\n          <div class=\"user-status\">您当前的碳减排状态</div>\n        </div>\n        <div class=\"rank-badge\" :class=\"getRankColorClass(userRank.rank)\">\n          #{{ userRank.rank }}\n        </div>\n      </div>\n      \n      <div class=\"user-stats\">\n        <div class=\"stat-item\">\n          <div class=\"stat-value\">{{ Number(userRank.carbon_reduction).toFixed(1) }}</div>\n          <div class=\"stat-label\">减排量 (kg CO₂)</div>\n        </div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value\">\n            <i class=\"fas fa-trophy\" :class=\"getRankIconClass(userRank.rank)\"></i>\n          </div>\n          <div class=\"stat-label\">{{ getRankDescription(userRank.rank) }}</div>\n        </div>\n        \n        <div class=\"stat-divider\"></div>\n        \n        <div class=\"stat-item\">\n          <div class=\"stat-value\">{{ getPercentile(userRank.rank) }}%</div>\n          <div class=\"stat-label\">击败了其他用户</div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-controls\">\n      <div class=\"update-section\">\n        <button @click=\"updateLeaderboard\" class=\"update-btn\" :disabled=\"loading\">\n          <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': loading }\"></i>\n          {{ loading ? '更新中...' : '更新排名' }}\n        </button>\n      </div>\n      \n      <div class=\"filter-section\">\n        <select v-model=\"limit\" @change=\"loadLeaderboard\" class=\"filter-select\">\n          <option :value=\"10\">显示10名</option>\n          <option :value=\"20\">显示20名</option>\n          <option :value=\"50\">显示50名</option>\n          <option :value=\"100\">显示100名</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"leaderboard-container\">\n      <div class=\"leaderboard-row header\">\n        <div class=\"rank-column\">排名</div>\n        <div class=\"user-column\">用户</div>\n        <div class=\"reduction-column\">减排量 (kg CO₂)</div>\n      </div>\n      \n      <div v-if=\"loading\" class=\"loading-indicator\">\n        <div class=\"spinner\"></div>\n        <div>加载排名数据中...</div>\n      </div>\n      \n      <template v-else>\n        <div v-for=\"(entry, index) in displayedLeaderboard\" :key=\"index\" \n             class=\"leaderboard-row\" \n             :class=\"{ 'highlighted': isCurrentUser(entry.user_id) }\">\n          <div class=\"rank-column\">\n            <div class=\"rank-number\" :class=\"getRankClass(entry.rank)\">{{ entry.rank }}</div>\n          </div>\n          <div class=\"user-column\">\n            {{ entry.username }}\n            <span v-if=\"isCurrentUser(entry.user_id)\" class=\"current-user-tag\">当前用户</span>\n          </div>\n          <div class=\"reduction-column\">{{ Number(entry.carbon_reduction).toFixed(1) }}</div>\n        </div>\n        \n        <div v-if=\"leaderboard.length === 0\" class=\"no-data\">\n          暂无排行数据\n        </div>\n      </template>\n    </div>\n    \n    <!-- 分页控件 -->\n    <div class=\"pagination\" v-if=\"leaderboard.length > 0\">\n      <button \n        @click=\"changePage(currentPage - 1)\" \n        :disabled=\"currentPage === 1\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-left\"></i>\n      </button>\n      \n      <div class=\"page-info\">\n        第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\n      </div>\n      \n      <button \n        @click=\"changePage(currentPage + 1)\" \n        :disabled=\"currentPage === totalPages\"\n        class=\"pagination-btn\"\n      >\n        <i class=\"fas fa-chevron-right\"></i>\n      </button>\n    </div>\n    \n    <div class=\"total-entries\" v-if=\"leaderboard.length > 0\">\n      展示第 {{ (currentPage - 1) * pageSize + 1 }} - {{ Math.min(currentPage * pageSize, leaderboard.length) }} 条，\n      共 {{ leaderboard.length }} 条记录\n    </div>\n    \n    <div class=\"leaderboard-tips\">\n      <h3>如何提高排名?</h3>\n      <ul>\n        <li><i class=\"fas fa-walking\"></i> 多步行减少碳排放</li>\n        <li><i class=\"fas fa-calculator\"></i> 通过碳排放计算器记录您的低碳行为</li>\n        <li><i class=\"fas fa-paw\"></i> 喂养并升级您的虚拟宠物</li>\n        <li><i class=\"fas fa-award\"></i> 完成成就任务获得额外奖励</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_URLS, axiosConfig, requestInterceptor, responseInterceptor } from '../config/api';\n\n// 创建API实例\nconst api = axios.create(axiosConfig);\n\n// 添加请求拦截器\napi.interceptors.request.use(requestInterceptor, error => Promise.reject(error));\n\n// 添加响应拦截器\napi.interceptors.response.use(\n  responseInterceptor.success, \n  responseInterceptor.error\n);\n\n// 获取API基础URL\nconst getBaseUrl = () => {\n  const host = window.location.hostname;\n  const port = '5000';\n  const protocol = window.location.protocol;\n  \n  if (host === 'localhost' || host === '127.0.0.1') {\n    return `http://localhost:${port}/api`;\n  } else {\n    return `${protocol}//${host}:${port}/api`;\n  }\n};\n\nexport default {\n  data() {\n    return {\n      leaderboard: [],\n      userRank: null,\n      username: '',\n      limit: 100,\n      currentPage: 1,\n      pageSize: 10,\n      loading: false,\n      errorMessage: '',\n      apiBaseUrl: getBaseUrl(),\n      totalUserCount: 200 // 估计的用户总数，可以从后端获取\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.leaderboard.length / this.pageSize);\n    },\n    displayedLeaderboard() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.leaderboard.slice(start, end);\n    }\n  },\n  async created() {\n    try {\n      console.log('API基础URL:', this.apiBaseUrl);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        this.$router.push('/login');\n        return;\n      }\n      \n      // 获取用户信息\n      const userResponse = await axios.get(`${this.apiBaseUrl}/auth/user`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      this.username = userResponse.data.username;\n      console.log('成功获取用户信息:', this.username);\n      \n      // 加载排行榜数据\n      await this.loadLeaderboard();\n    } catch (error) {\n      console.error('Error loading user data:', error);\n      this.handleError(error, '加载用户数据失败');\n    }\n  },\n  methods: {\n    // 获取用户名的首字母作为头像\n    getInitials(name) {\n      return name ? name.charAt(0).toUpperCase() : '?';\n    },\n    \n    // 获取排名描述\n    getRankDescription(rank) {\n      if (rank <= 10) return '优秀减排者';\n      if (rank <= 50) return '活跃减排者';\n      if (rank <= 100) return '进步减排者';\n      return '环保新手';\n    },\n    \n    // 获取百分比\n    getPercentile(rank) {\n      // 计算击败了多少百分比的用户\n      // 例如：如果总用户数是200，当前排名是20，则击败了(200-20)/200 * 100 = 90%的用户\n      const percentile = Math.floor(((this.totalUserCount - rank) / this.totalUserCount) * 100);\n      return Math.max(0, Math.min(99, percentile));\n    },\n    \n    // 获取排名图标类\n    getRankIconClass(rank) {\n      if (rank <= 3) return 'text-gold';\n      if (rank <= 10) return 'text-silver';\n      if (rank <= 50) return 'text-bronze';\n      return 'text-normal';\n    },\n    \n    // 获取排名颜色类\n    getRankColorClass(rank) {\n      if (rank <= 3) return 'rank-top';\n      if (rank <= 10) return 'rank-excellent';\n      if (rank <= 50) return 'rank-good';\n      return 'rank-normal';\n    },\n    \n    // 处理错误的通用方法\n    handleError(error, defaultMessage) {\n      let errorMsg = defaultMessage;\n      \n      if (error.response && error.response.data && error.response.data.message) {\n        errorMsg = error.response.data.message;\n      } else if (error.message) {\n        errorMsg = `${defaultMessage}: ${error.message}`;\n      }\n      \n      this.errorMessage = errorMsg;\n      console.error(errorMsg, error);\n    },\n    \n    async loadLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        console.log('正在加载排行榜数据，限制:', this.limit);\n        \n        // 直接使用axios\n        const response = await axios.get(`${this.apiBaseUrl}/leaderboard?limit=${this.limit}`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('排行榜数据:', response.data);\n        \n        if (response.data && response.data.leaderboard) {\n          this.leaderboard = response.data.leaderboard;\n          this.userRank = response.data.userRank;\n          \n          // 如果用户排名信息为null或carbon_reduction为0，尝试强制更新\n          if (!this.userRank || this.userRank.carbon_reduction === 0) {\n            console.log('用户排名数据为空或减排量为0，尝试更新...');\n            await this.forceUpdateUserRank();\n          }\n          \n          // 确保数据排序正确\n          this.leaderboard.sort((a, b) => a.rank - b.rank);\n          \n          // 尝试获取总用户数量\n          if (response.data.total) {\n            this.totalUserCount = response.data.total;\n          }\n          \n          // 重置为第一页\n          this.currentPage = 1;\n        } else {\n          console.error('返回的数据格式不正确:', response.data);\n          this.errorMessage = '返回数据格式不正确，请稍后再试';\n          this.leaderboard = [];\n        }\n      } catch (error) {\n        this.handleError(error, '加载排行榜失败');\n        this.leaderboard = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 强制更新当前用户排名\n    async forceUpdateUserRank() {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) return;\n        \n        console.log('强制更新当前用户排名...');\n        \n        // 调用更新接口\n        const response = await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        console.log('排名更新响应:', response.data);\n        \n        // 获取最新的用户排名\n        const userRankResponse = await axios.get(`${this.apiBaseUrl}/leaderboard/user`, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (userRankResponse.data) {\n          console.log('更新后的用户排名:', userRankResponse.data);\n          this.userRank = userRankResponse.data;\n        }\n      } catch (error) {\n        console.error('强制更新用户排名失败:', error);\n      }\n    },\n    \n    changePage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.totalPages) {\n        this.currentPage = pageNumber;\n      }\n    },\n    \n    async updateLeaderboard() {\n      try {\n        this.loading = true;\n        this.errorMessage = '';\n        \n        const token = localStorage.getItem('token');\n        if (!token) {\n          this.$router.push('/login');\n          return;\n        }\n        \n        // 直接使用axios\n        await axios.post(`${this.apiBaseUrl}/leaderboard/update`, {}, {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json' \n          }\n        });\n        \n        await this.loadLeaderboard();\n        this.errorMessage = '';\n      } catch (error) {\n        this.handleError(error, '更新排行榜失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    isCurrentUser(userId) {\n      return this.userRank && this.userRank.user_id === userId;\n    },\n    \n    getRankClass(rank) {\n      if (rank === 1) return 'gold';\n      if (rank === 2) return 'silver';\n      if (rank === 3) return 'bronze';\n      return '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.leaderboard-page {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Arial', sans-serif;\n}\n\n.main-title {\n  text-align: center;\n  color: #2196F3;\n  margin-bottom: 20px;\n  font-size: 1.8rem;\n}\n\n.user-rank-card {\n  background: linear-gradient(135deg, #bbdefb 0%, #e3f2fd 100%);\n  border-radius: 12px;\n  overflow: hidden;\n  margin-bottom: 25px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.05);\n  border: 1px solid rgba(0,0,0,0.05);\n}\n\n.user-rank-header {\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n}\n\n.user-avatar {\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background-color: #2196F3;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-right: 15px;\n  box-shadow: 0 2px 6px rgba(33,150,243,0.3);\n}\n\n.user-info {\n  flex: 1;\n}\n\n.user-info h3 {\n  margin: 0 0 5px 0;\n  font-size: 1.3rem;\n  color: #333;\n}\n\n.user-status {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.rank-badge {\n  font-size: 1.5rem;\n  font-weight: bold;\n  padding: 10px 15px;\n  border-radius: 8px;\n  color: white;\n}\n\n.rank-top {\n  background-color: #F57C00;\n}\n\n.rank-excellent {\n  background-color: #4CAF50;\n}\n\n.rank-good {\n  background-color: #2196F3;\n}\n\n.rank-normal {\n  background-color: #9E9E9E;\n}\n\n.user-stats {\n  display: flex;\n  padding: 15px;\n  background-color: rgba(255,255,255,0.7);\n}\n\n.stat-item {\n  flex: 1;\n  text-align: center;\n  padding: 10px;\n}\n\n.stat-value {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #2196F3;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 0.8rem;\n  color: #666;\n}\n\n.stat-divider {\n  width: 1px;\n  background-color: rgba(0,0,0,0.1);\n  margin: 10px 5px;\n}\n\n.text-gold {\n  color: #F57C00;\n}\n\n.text-silver {\n  color: #607D8B;\n}\n\n.text-bronze {\n  color: #795548;\n}\n\n.leaderboard-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.error-message {\n  background-color: #ffebee;\n  color: #d32f2f;\n  padding: 12px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.error-message i {\n  font-size: 20px;\n}\n\n.update-btn {\n  background-color: #2196F3;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 8px 16px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  transition: background-color 0.3s;\n}\n\n.update-btn:hover:not(:disabled) {\n  background-color: #1976D2;\n}\n\n.update-btn:disabled {\n  background-color: #90CAF9;\n  cursor: not-allowed;\n}\n\n.filter-select {\n  padding: 8px 12px;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n  background-color: white;\n  font-size: 0.9rem;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  cursor: pointer;\n}\n\n.leaderboard-container {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.08);\n  margin-bottom: 20px;\n  min-height: 200px;\n  position: relative;\n}\n\n.leaderboard-row {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  transition: all 0.2s ease;\n}\n\n.leaderboard-row:hover {\n  background-color: #f9f9f9;\n  transform: translateY(-1px);\n}\n\n.leaderboard-row.header {\n  background-color: #f5f5f5;\n  font-weight: bold;\n  color: #333;\n  border-bottom: 2px solid #e0e0e0;\n}\n\n.leaderboard-row.highlighted {\n  background-color: #e3f2fd;\n  border-left: 4px solid #2196F3;\n}\n\n.rank-column {\n  width: 60px;\n  display: flex;\n  justify-content: center;\n}\n\n.rank-number {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: #f0f0f0;\n  font-weight: bold;\n}\n\n.rank-number.gold {\n  background-color: #FFD700;\n  color: white;\n  box-shadow: 0 2px 4px rgba(255,215,0,0.3);\n}\n\n.rank-number.silver {\n  background-color: #C0C0C0;\n  color: white;\n  box-shadow: 0 2px 4px rgba(192,192,192,0.3);\n}\n\n.rank-number.bronze {\n  background-color: #CD7F32;\n  color: white;\n  box-shadow: 0 2px 4px rgba(205,127,50,0.3);\n}\n\n.user-column {\n  flex: 1;\n  padding: 0 10px;\n  position: relative;\n}\n\n.current-user-tag {\n  display: inline-block;\n  font-size: 0.7rem;\n  background: #2196F3;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 10px;\n  margin-left: 8px;\n  vertical-align: middle;\n}\n\n.reduction-column {\n  width: 120px;\n  text-align: right;\n  font-weight: 500;\n  color: #2196F3;\n}\n\n.no-data {\n  padding: 30px;\n  text-align: center;\n  color: #999;\n}\n\n.loading-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  color: #666;\n}\n\n.spinner {\n  width: 40px;\n  height: 40px;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #2196F3;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 10px;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.leaderboard-tips {\n  background-color: #f5f5f5;\n  border-radius: 8px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.leaderboard-tips h3 {\n  color: #1976D2;\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 1.2rem;\n}\n\n.leaderboard-tips ul {\n  padding-left: 10px;\n  margin: 0;\n  list-style-type: none;\n}\n\n.leaderboard-tips li {\n  margin-bottom: 10px;\n  color: #555;\n  display: flex;\n  align-items: center;\n}\n\n.leaderboard-tips li i {\n  color: #2196F3;\n  margin-right: 10px;\n  width: 20px;\n  text-align: center;\n}\n\n/* 分页样式 */\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n  gap: 15px;\n}\n\n.pagination-btn {\n  background-color: #f5f5f5;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n}\n\n.pagination-btn:hover:not(:disabled) {\n  background-color: #e0e0e0;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 5px rgba(0,0,0,0.15);\n}\n\n.pagination-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-info {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.total-entries {\n  text-align: center;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 600px) {\n  .leaderboard-controls {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .user-rank-header {\n    flex-direction: column;\n    text-align: center;\n  }\n  \n  .user-avatar {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n  \n  .rank-badge {\n    margin-top: 10px;\n  }\n  \n  .user-stats {\n    flex-direction: column;\n  }\n  \n  .stat-divider {\n    height: 1px;\n    width: 100%;\n    margin: 5px 0;\n  }\n  \n  .leaderboard-row {\n    padding: 10px;\n  }\n  \n  .rank-number {\n    width: 25px;\n    height: 25px;\n    font-size: 0.9rem;\n  }\n  \n  .user-column {\n    font-size: 0.9rem;\n  }\n  \n  .reduction-column {\n    width: 100px;\n    font-size: 0.9rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}