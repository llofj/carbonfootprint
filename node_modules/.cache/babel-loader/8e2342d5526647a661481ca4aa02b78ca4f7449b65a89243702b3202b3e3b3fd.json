{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_3 = [\"disabled\"];\nvar _hoisted_4 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_5 = {\n  \"class\": \"password-input\"\n};\nvar _hoisted_6 = [\"type\", \"disabled\"];\nvar _hoisted_7 = {\n  \"class\": \"form-group\"\n};\nvar _hoisted_8 = {\n  \"class\": \"captcha-group\"\n};\nvar _hoisted_9 = {\n  \"class\": \"captcha-input\"\n};\nvar _hoisted_10 = [\"disabled\"];\nvar _hoisted_11 = [\"disabled\"];\nvar _hoisted_12 = {\n  key: 0\n};\nvar _hoisted_13 = {\n  key: 1\n};\nvar _hoisted_14 = {\n  key: 0,\n  \"class\": \"error-container\"\n};\nvar _hoisted_15 = {\n  \"class\": \"register-link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"登录\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers(function () {\n      return $options.handleSubmit && $options.handleSubmit.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    \"for\": \"username\"\n  }, \"账号:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.username = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[1] || (_cache[1] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    })\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    \"for\": \"password\"\n  }, \"密码:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.password = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[3] || (_cache[3] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    })\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), [[_vModelDynamic, $data.password]]), _createElementVNode(\"i\", {\n    \"class\": _normalizeClass([\"fas\", $data.showPassword ? 'fa-eye-slash' : 'fa-eye']),\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.togglePassword && $options.togglePassword.apply($options, arguments);\n    })\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_7, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    \"for\": \"captcha\"\n  }, \"验证码:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"captcha\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $data.captchaInput = $event;\n    }),\n    required: \"\",\n    disabled: $data.isLoading,\n    onInput: _cache[6] || (_cache[6] = function () {\n      return $options.clearError && $options.clearError.apply($options, arguments);\n    }),\n    placeholder: \"请输入验证码\",\n    maxlength: \"4\",\n    pattern: \"[0-9]{4}\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), [[_vModelText, $data.captchaInput]])]), _createElementVNode(\"div\", {\n    \"class\": \"captcha-code\",\n    onClick: _cache[7] || (_cache[7] = function () {\n      return $options.generateCaptcha && $options.generateCaptcha.apply($options, arguments);\n    }),\n    title: \"当前验证码为随机生成\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.captchaDisplay, function (digit, index) {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      style: _normalizeStyle($options.getRandomStyle())\n    }, _toDisplayString(digit), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isLoading || !$options.isFormValid\n  }, [$data.isLoading ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _cache[12] || (_cache[12] = [_createElementVNode(\"i\", {\n    \"class\": \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 登录中... \")]))) : (_openBlock(), _createElementBlock(\"span\", _hoisted_13, \"登录\"))], 8 /* PROPS */, _hoisted_11), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_cache[13] || (_cache[13] = _createElementVNode(\"i\", {\n    \"class\": \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.errorMessage), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_15, [_cache[15] || (_cache[15] = _createTextVNode(\" 没有账号? \")), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[14] || (_cache[14] = [_createTextVNode(\"立即注册\")]);\n    }),\n    _: 1 /* STABLE */\n  })])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","$options","handleSubmit","apply","arguments","_hoisted_2","type","id","$event","$data","username","required","disabled","isLoading","onInput","clearError","_hoisted_3","_hoisted_4","_hoisted_5","showPassword","password","_hoisted_6","_normalizeClass","onClick","togglePassword","_hoisted_7","_hoisted_8","_hoisted_9","captchaInput","placeholder","maxlength","pattern","_hoisted_10","generateCaptcha","title","_Fragment","_renderList","captchaDisplay","digit","index","style","_normalizeStyle","getRandomStyle","isFormValid","_hoisted_12","_createTextVNode","_hoisted_13","_hoisted_11","errorMessage","_hoisted_14","_toDisplayString","_createCommentVNode","_hoisted_15","_createVNode","_component_router_link","to","_withCtx","_"],"sources":["D:\\EcoPaw\\carbonfootprint\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">账号:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"username\" \r\n          v-model=\"username\" \r\n          required \r\n          :disabled=\"isLoading\"\r\n          @input=\"clearError\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码:</label>\r\n        <div class=\"password-input\">\r\n          <input \r\n            :type=\"showPassword ? 'text' : 'password'\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            required \r\n            :disabled=\"isLoading\"\r\n            @input=\"clearError\"\r\n          />\r\n          <i \r\n            class=\"fas\" \r\n            :class=\"showPassword ? 'fa-eye-slash' : 'fa-eye'\"\r\n            @click=\"togglePassword\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"captcha\">验证码:</label>\r\n        <div class=\"captcha-group\">\r\n          <div class=\"captcha-input\">\r\n            <input \r\n              type=\"text\" \r\n              id=\"captcha\" \r\n              v-model=\"captchaInput\" \r\n              required \r\n              :disabled=\"isLoading\"\r\n              @input=\"clearError\"\r\n              placeholder=\"请输入验证码\"\r\n              maxlength=\"4\"\r\n              pattern=\"[0-9]{4}\"\r\n            />\r\n          </div>\r\n          <div \r\n            class=\"captcha-code\" \r\n            @click=\"generateCaptcha\" \r\n            title=\"当前验证码为随机生成\"\r\n          >\r\n            <span\r\n              v-for=\"(digit, index) in captchaDisplay\"\r\n              :key=\"index\"\r\n              :style=\"getRandomStyle()\"\r\n            >{{ digit }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"isLoading || !isFormValid\">\r\n        <span v-if=\"isLoading\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i> 登录中...\r\n        </span>\r\n        <span v-else>登录</span>\r\n      </button>\r\n      <div v-if=\"errorMessage\" class=\"error-container\">\r\n        <i class=\"fas fa-exclamation-circle\"></i>\r\n        {{ errorMessage }}\r\n      </div>\r\n      <div class=\"register-link\">\r\n        没有账号? <router-link to=\"/register\">立即注册</router-link>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URLS, axiosConfig } from '../config/api';\r\n\r\nconst api = axios.create(axiosConfig);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      captchaInput: '',\r\n      captchaDisplay: '',  // 显示的验证码\r\n      systemCaptcha: '',   // 系统生成的验证码，用于比对\r\n      errorMessage: '',\r\n      isLoading: false,\r\n      showPassword: false,\r\n      refreshCount: 0\r\n    };\r\n  },\r\n  computed: {\r\n    isFormValid() {\r\n      return this.username.trim() && \r\n             this.password && \r\n             this.captchaInput && \r\n             this.captchaInput.length === 4;\r\n    }\r\n  },\r\n  created() {\r\n    if (localStorage.getItem('token')) {\r\n      const redirect = this.$route.query.redirect || '/';\r\n      this.$router.push(redirect);\r\n    } else {\r\n      // 初始化生成随机验证码\r\n      this.generateCaptcha();\r\n    }\r\n  },\r\n  methods: {\r\n    clearError() {\r\n      this.errorMessage = '';\r\n    },\r\n    togglePassword() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    // 生成新的随机验证码\r\n    generateCaptcha() {\r\n      // 生成四位随机数字 (1000-9999)\r\n      const randomNum = Math.floor(1000 + Math.random() * 9000);\r\n      const captchaString = randomNum.toString();\r\n      \r\n      // 设置显示验证码和系统验证码\r\n      this.captchaDisplay = captchaString;\r\n      this.systemCaptcha = captchaString;\r\n      this.captchaInput = ''; // 清空用户输入\r\n      \r\n      // 如果已经有输入框状态，添加刷新动画\r\n      const captchaElement = document.querySelector('.captcha-code');\r\n      if (captchaElement && this.refreshCount > 0) {\r\n        captchaElement.classList.add('refreshing');\r\n        setTimeout(() => {\r\n          captchaElement.classList.remove('refreshing');\r\n        }, 500);\r\n      }\r\n      \r\n      this.refreshCount++;\r\n      console.log(`生成新验证码: ${this.systemCaptcha}`);\r\n    },\r\n    // 为每个数字生成随机样式，增加视觉干扰\r\n    getRandomStyle() {\r\n      const rotation = Math.floor(Math.random() * 10) - 5;\r\n      const fontSize = 14 + Math.floor(Math.random() * 4);\r\n      const letterSpacing = Math.floor(Math.random() * 3) - 1;\r\n      \r\n      return {\r\n        transform: `rotate(${rotation}deg)`,\r\n        fontSize: `${fontSize}px`,\r\n        letterSpacing: `${letterSpacing}px`,\r\n        display: 'inline-block',\r\n        fontWeight: 'bold',\r\n        margin: '0 2px'\r\n      };\r\n    },\r\n    async handleSubmit() {\r\n      // 验证表单\r\n      if (!this.isFormValid) {\r\n        return;\r\n      }\r\n      \r\n      // 检查验证码 - 与生成的验证码比对\r\n      if (this.captchaInput !== this.systemCaptcha) {\r\n        console.log(`验证码比对失败: 用户输入=\"${this.captchaInput}\", 系统验证码=\"${this.systemCaptcha}\"`);\r\n        this.errorMessage = '验证码错误，请重新输入';\r\n        this.captchaInput = '';\r\n        this.generateCaptcha(); // 生成新验证码\r\n        return;\r\n      }\r\n      \r\n      console.log(\"验证码校验通过，准备提交登录请求\");\r\n      \r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      \r\n      try {\r\n        const loginData = {\r\n          username: this.username.trim(),\r\n          password: this.password,\r\n          captcha: \"0000\" // 固定发送\"0000\"给后端，保持兼容\r\n        };\r\n        \r\n        console.log('正在发送登录请求', {\r\n          用户名: loginData.username,\r\n          验证码: \"固定发送0000\"\r\n        });\r\n        \r\n        try {\r\n          const response = await api.post(API_URLS.login, loginData);\r\n          \r\n          console.log('服务器响应:', response.data);\r\n          \r\n          if (response.data && response.data.token) {\r\n            // 登录成功\r\n            localStorage.setItem('token', response.data.token);\r\n            localStorage.setItem('username', this.username.trim());\r\n            \r\n            const redirect = this.$route.query.redirect || '/';\r\n            await this.$router.push(redirect);\r\n            return;\r\n          }\r\n          \r\n          // 如果没有token但服务器返回了消息\r\n          if (response.data && response.data.message) {\r\n            this.errorMessage = response.data.message;\r\n            this.generateCaptcha(); // 生成新验证码\r\n            return;\r\n          }\r\n        } catch (apiError) {\r\n          console.error('API调用错误:', apiError);\r\n          \r\n          // 处理API错误响应\r\n          if (apiError.response) {\r\n            const status = apiError.response.status;\r\n            const errorData = apiError.response.data;\r\n            \r\n            switch (status) {\r\n              case 401:\r\n                this.errorMessage = '账号或密码错误';\r\n                break;\r\n              case 403:\r\n                this.errorMessage = '验证码错误';\r\n                break;\r\n              case 500:\r\n                this.errorMessage = '服务器错误，请稍后重试';\r\n                break;\r\n              default:\r\n                this.errorMessage = errorData?.message || '登录失败，请稍后重试';\r\n            }\r\n            \r\n            this.generateCaptcha(); // 生成新验证码\r\n            return;\r\n          }\r\n          \r\n          // 如果是网络错误或服务器未响应，则尝试备用登录\r\n          console.log('网络错误或服务器未响应，尝试备用登录');\r\n        }\r\n        \r\n        // 在API调用完全失败或没有有效响应的情况下，执行备用登录\r\n        console.log('尝试备用登录...');\r\n        if (this.username.trim().toLowerCase() === 'test' && this.password === '123456') {\r\n          console.log('备用登录成功');\r\n          localStorage.setItem('token', 'mock-token-12345');\r\n          localStorage.setItem('username', this.username.trim());\r\n          \r\n          const redirect = this.$route.query.redirect || '/';\r\n          await this.$router.push(redirect);\r\n          return;\r\n        }\r\n        \r\n        this.errorMessage = '无法连接到服务器，请检查网络连接';\r\n        this.generateCaptcha(); // 生成新验证码\r\n        \r\n      } catch (error) {\r\n        console.error('登录过程中发生意外错误:', error);\r\n        this.errorMessage = '登录过程中发生错误，请稍后重试';\r\n        this.generateCaptcha(); // 生成新验证码\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2.5rem;\r\n  border-radius: 12px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n  backdrop-filter: blur(8px);\r\n  -webkit-backdrop-filter: blur(8px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-form:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.login-form h2 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 2rem;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  position: relative;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.login-form h2::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 60px;\r\n  height: 3px;\r\n  background: linear-gradient(90deg, #4CA1AF, #2C3E50);\r\n  border-radius: 3px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #455a64;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.85rem;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n.form-group input:focus {\r\n  outline: none;\r\n  border-color: #4CA1AF;\r\n  box-shadow: 0 0 0 3px rgba(76, 161, 175, 0.2);\r\n  background-color: #fff;\r\n}\r\n\r\n.form-group input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.password-input {\r\n  position: relative;\r\n}\r\n\r\n.password-input i {\r\n  position: absolute;\r\n  right: 12px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  color: #78909c;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.password-input i:hover {\r\n  color: #455a64;\r\n}\r\n\r\n.captcha-group {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.captcha-input {\r\n  flex: 1;\r\n}\r\n\r\n.captcha-code {\r\n  padding: 0.75rem;\r\n  background-color: #f5f5f5;\r\n  border-radius: 8px;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  min-width: 80px;\r\n  text-align: center;\r\n  border: 2px solid #e0e0e0;\r\n  color: #2c3e50;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: linear-gradient(45deg, #f5f5f5 25%, #e8e8e8 25%, #e8e8e8 50%, #f5f5f5 50%, #f5f5f5 75%, #e8e8e8 75%, #e8e8e8);\r\n  background-size: 8px 8px;\r\n}\r\n\r\n.captcha-code:hover {\r\n  background-color: #e0e0e0;\r\n  transform: scale(1.02);\r\n}\r\n\r\n.captcha-code::before {\r\n  content: '';\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.captcha-code::after {\r\n  content: '点击刷新';\r\n  position: absolute;\r\n  bottom: -25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 0.7rem;\r\n  color: #78909c;\r\n  white-space: nowrap;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.captcha-code:hover::after {\r\n  opacity: 1;\r\n}\r\n\r\n.refreshing {\r\n  animation: refresh-animation 0.5s;\r\n}\r\n\r\n@keyframes refresh-animation {\r\n  0% { transform: rotate(0); opacity: 1; }\r\n  50% { transform: rotate(10deg); opacity: 0.5; }\r\n  100% { transform: rotate(0); opacity: 1; }\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 0.85rem;\r\n  background: linear-gradient(90deg, #4CA1AF, #2C3E50);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-top: 1rem;\r\n  letter-spacing: 0.5px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n  background: linear-gradient(90deg, #3c8997, #1a2c3f);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\nbutton:disabled {\r\n  background: #cccccc;\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.error-container {\r\n  margin-top: 1rem;\r\n  padding: 0.75rem;\r\n  background-color: rgba(255, 76, 76, 0.1);\r\n  border-left: 3px solid #ff4c4c;\r\n  color: #d32f2f;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.error-container i {\r\n  margin-right: 8px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.register-link {\r\n  text-align: center;\r\n  margin-top: 1.5rem;\r\n  color: #455a64;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.register-link a {\r\n  color: #4CA1AF;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.register-link a:hover {\r\n  color: #2C3E50;\r\n  text-decoration: underline;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.fa-spinner {\r\n  animation: spin 1s linear infinite;\r\n  margin-right: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}