{"ast":null,"code":"import _regeneratorRuntime from \"D:/computer_design/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/computer_design/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from 'axios';\nimport { API_URLS, axiosConfig } from '../config/api';\n\n// 创建 axios 实例\nvar api = axios.create(axiosConfig);\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      password: '',\n      captcha: '',\n      captchaSvg: '',\n      captchaId: '',\n      errorMessage: '',\n      isLoading: false,\n      showPassword: false\n    };\n  },\n  computed: {\n    isFormValid: function isFormValid() {\n      return this.username.trim() && this.password && this.captcha.trim().length === 4;\n    }\n  },\n  methods: {\n    clearError: function clearError() {\n      this.errorMessage = '';\n    },\n    togglePassword: function togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    refreshCaptcha: function refreshCaptcha() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get(API_URLS.captcha, {\n                responseType: 'text'\n              });\n            case 3:\n              response = _context.sent;\n              // 获取验证码ID\n              _this.captchaId = response.headers['captcha-id'];\n\n              // 设置SVG内容\n              _this.captchaSvg = response.data;\n\n              // 清空验证码输入\n              _this.captcha = '';\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取验证码失败:', _context.t0);\n              _this.errorMessage = '获取验证码失败，请刷新页面重试';\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _error$response$data, _error$response$data2;\n        var response, redirect;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (_this2.isFormValid) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              _this2.isLoading = true;\n              _this2.errorMessage = '';\n              _context2.prev = 4;\n              _context2.next = 7;\n              return api.post(API_URLS.login, {\n                username: _this2.username.trim(),\n                password: _this2.password,\n                captcha: _this2.captcha.trim(),\n                captchaId: _this2.captchaId\n              });\n            case 7:\n              response = _context2.sent;\n              if (!(response.data && response.data.token)) {\n                _context2.next = 16;\n                break;\n              }\n              // 保存登录信息\n              localStorage.setItem('token', response.data.token);\n              localStorage.setItem('username', _this2.username.trim());\n\n              // 获取重定向地址\n              redirect = _this2.$route.query.redirect || '/'; // 跳转\n              _context2.next = 14;\n              return _this2.$router.push(redirect);\n            case 14:\n              _context2.next = 17;\n              break;\n            case 16:\n              throw new Error('登录失败：服务器响应格式不正确');\n            case 17:\n              _context2.next = 37;\n              break;\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.error('Login error:', _context2.t0);\n              if (!_context2.t0.response) {\n                _context2.next = 35;\n                break;\n              }\n              _context2.t1 = _context2.t0.response.status;\n              _context2.next = _context2.t1 === 401 ? 26 : _context2.t1 === 403 ? 28 : _context2.t1 === 429 ? 30 : 32;\n              break;\n            case 26:\n              _this2.errorMessage = '账号或密码错误';\n              return _context2.abrupt(\"break\", 33);\n            case 28:\n              _this2.errorMessage = ((_error$response$data = _context2.t0.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '验证码错误';\n              return _context2.abrupt(\"break\", 33);\n            case 30:\n              _this2.errorMessage = '登录尝试次数过多，请稍后再试';\n              return _context2.abrupt(\"break\", 33);\n            case 32:\n              _this2.errorMessage = ((_error$response$data2 = _context2.t0.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || '登录失败，请稍后重试';\n            case 33:\n              _context2.next = 36;\n              break;\n            case 35:\n              if (_context2.t0.request) {\n                _this2.errorMessage = '无法连接到服务器，请检查网络连接';\n              } else {\n                _this2.errorMessage = '登录失败，请稍后重试';\n              }\n            case 36:\n              // 登录失败时刷新验证码\n              _this2.refreshCaptcha();\n            case 37:\n              _context2.prev = 37;\n              _this2.isLoading = false;\n              return _context2.finish(37);\n            case 40:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 19, 37, 40]]);\n      }))();\n    }\n  },\n  // 如果已经登录，直接跳转\n  created: function created() {\n    // 组件创建时获取验证码\n    this.refreshCaptcha();\n    if (localStorage.getItem('token')) {\n      var redirect = this.$route.query.redirect || '/';\n      this.$router.push(redirect);\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URLS","axiosConfig","api","create","data","username","password","captcha","captchaSvg","captchaId","errorMessage","isLoading","showPassword","computed","isFormValid","trim","length","methods","clearError","togglePassword","refreshCaptcha","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","responseType","sent","headers","t0","console","error","stop","handleSubmit","_this2","_callee2","_error$response$data","_error$response$data2","redirect","_callee2$","_context2","abrupt","post","login","token","localStorage","setItem","$route","query","$router","push","Error","t1","status","message","request","finish","created","getItem"],"sources":["D:\\computer_design\\src\\components\\LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <h2>登录</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">账号:</label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"username\" \r\n          v-model.trim=\"username\" \r\n          required \r\n          :disabled=\"isLoading\"\r\n          @input=\"clearError\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码:</label>\r\n        <div class=\"password-input\">\r\n          <input \r\n            :type=\"showPassword ? 'text' : 'password'\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            required \r\n            :disabled=\"isLoading\"\r\n            @input=\"clearError\"\r\n          />\r\n          <i \r\n            class=\"fas\" \r\n            :class=\"showPassword ? 'fa-eye-slash' : 'fa-eye'\"\r\n            @click=\"togglePassword\"\r\n          ></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"captcha\">验证码:</label>\r\n        <div class=\"captcha-group\">\r\n          <div class=\"captcha-input\">\r\n            <input \r\n              type=\"text\" \r\n              id=\"captcha\" \r\n              v-model.trim=\"captcha\" \r\n              required \r\n              :disabled=\"isLoading\"\r\n              @input=\"clearError\"\r\n              maxlength=\"4\"\r\n              placeholder=\"请输入验证码\"\r\n            />\r\n          </div>\r\n          <div class=\"captcha-image\" @click=\"refreshCaptcha\">\r\n            <img v-if=\"captchaSvg\" v-html=\"captchaSvg\" alt=\"验证码\" title=\"点击刷新验证码\" />\r\n            <div v-else class=\"captcha-loading\">\r\n              <i class=\"fas fa-sync-alt\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"isLoading || !isFormValid\">\r\n        <span v-if=\"isLoading\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i> 登录中...\r\n        </span>\r\n        <span v-else>登录</span>\r\n      </button>\r\n      <div v-if=\"errorMessage\" class=\"error-container\">\r\n        <i class=\"fas fa-exclamation-circle\"></i>\r\n        {{ errorMessage }}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { API_URLS, axiosConfig } from '../config/api';\r\n\r\n// 创建 axios 实例\r\nconst api = axios.create(axiosConfig);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      captcha: '',\r\n      captchaSvg: '',\r\n      captchaId: '',\r\n      errorMessage: '',\r\n      isLoading: false,\r\n      showPassword: false\r\n    };\r\n  },\r\n  computed: {\r\n    isFormValid() {\r\n      return this.username.trim() && \r\n             this.password && \r\n             this.captcha.trim().length === 4;\r\n    }\r\n  },\r\n  methods: {\r\n    clearError() {\r\n      this.errorMessage = '';\r\n    },\r\n    togglePassword() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    async refreshCaptcha() {\r\n      try {\r\n        const response = await api.get(API_URLS.captcha, {\r\n          responseType: 'text'\r\n        });\r\n        \r\n        // 获取验证码ID\r\n        this.captchaId = response.headers['captcha-id'];\r\n        \r\n        // 设置SVG内容\r\n        this.captchaSvg = response.data;\r\n        \r\n        // 清空验证码输入\r\n        this.captcha = '';\r\n      } catch (error) {\r\n        console.error('获取验证码失败:', error);\r\n        this.errorMessage = '获取验证码失败，请刷新页面重试';\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      if (!this.isFormValid) return;\r\n      \r\n      this.isLoading = true;\r\n      this.errorMessage = '';\r\n      \r\n      try {\r\n        const response = await api.post(API_URLS.login, {\r\n          username: this.username.trim(),\r\n          password: this.password,\r\n          captcha: this.captcha.trim(),\r\n          captchaId: this.captchaId\r\n        });\r\n\r\n        if (response.data && response.data.token) {\r\n          // 保存登录信息\r\n          localStorage.setItem('token', response.data.token);\r\n          localStorage.setItem('username', this.username.trim());\r\n          \r\n          // 获取重定向地址\r\n          const redirect = this.$route.query.redirect || '/';\r\n          \r\n          // 跳转\r\n          await this.$router.push(redirect);\r\n        } else {\r\n          throw new Error('登录失败：服务器响应格式不正确');\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        \r\n        if (error.response) {\r\n          // 服务器返回错误\r\n          switch (error.response.status) {\r\n            case 401:\r\n              this.errorMessage = '账号或密码错误';\r\n              break;\r\n            case 403:\r\n              this.errorMessage = error.response.data?.message || '验证码错误';\r\n              break;\r\n            case 429:\r\n              this.errorMessage = '登录尝试次数过多，请稍后再试';\r\n              break;\r\n            default:\r\n              this.errorMessage = error.response.data?.message || '登录失败，请稍后重试';\r\n          }\r\n        } else if (error.request) {\r\n          this.errorMessage = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          this.errorMessage = '登录失败，请稍后重试';\r\n        }\r\n        \r\n        // 登录失败时刷新验证码\r\n        this.refreshCaptcha();\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  },\r\n  // 如果已经登录，直接跳转\r\n  created() {\r\n    // 组件创建时获取验证码\r\n    this.refreshCaptcha();\r\n    \r\n    if (localStorage.getItem('token')) {\r\n      const redirect = this.$route.query.redirect || '/';\r\n      this.$router.push(redirect);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-form h2 {\r\n  text-align: center;\r\n  color: #1e3d59;\r\n  margin-bottom: 2rem;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: #666;\r\n  font-weight: 500;\r\n}\r\n\r\n.form-group input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.form-group input:focus {\r\n  outline: none;\r\n  border-color: #17a2b8;\r\n  box-shadow: 0 0 0 3px rgba(23, 162, 184, 0.2);\r\n}\r\n\r\n.form-group input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.password-input,\r\n.captcha-group {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.password-input i,\r\n.captcha-image {\r\n  position: absolute;\r\n  right: 12px;\r\n  color: #666;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.password-input i:hover,\r\n.captcha-image:hover {\r\n  color: #17a2b8;\r\n}\r\n\r\n.captcha-group {\r\n  gap: 1rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.captcha-input {\r\n  flex: 1;\r\n}\r\n\r\n.captcha-image {\r\n  width: 100px;\r\n  height: 44px;\r\n  border-radius: 6px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  border: 2px solid #e0e0e0;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.captcha-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  display: block;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #17a2b8;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover:not(:disabled) {\r\n  background-color: #138496;\r\n  transform: translateY(-1px);\r\n}\r\n\r\nbutton[type=\"submit\"]:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n  transform: none;\r\n}\r\n\r\n.error-container {\r\n  margin-top: 1rem;\r\n  padding: 0.75rem;\r\n  background-color: #fff5f5;\r\n  border: 1px solid #fed7d7;\r\n  border-radius: 6px;\r\n  color: #dc3545;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.error-container i {\r\n  font-size: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n.fa-spinner {\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.captcha-loading {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.captcha-loading i {\r\n  font-size: 1.5rem;\r\n  color: #666;\r\n  animation: spin 1s linear infinite;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}